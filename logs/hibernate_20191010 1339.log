[DEBUG] 2019-10-10 13:39:04.965 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-10 13:39:04.972 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-10 13:39:04.989 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-10 13:39:05.265 [http-nio-8080-exec-9] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-10 13:39:05.272 [http-nio-8080-exec-9] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-10 13:39:05.754 [http-nio-8080-exec-9] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-10 13:39:05.756 [http-nio-8080-exec-9] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-10 13:39:05.800 [http-nio-8080-exec-9] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-10 13:39:06.514 [http-nio-8080-exec-9] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-10 13:39:06.577 [http-nio-8080-exec-9] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-10 13:39:06.580 [http-nio-8080-exec-9] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-10 13:39:06.646 [http-nio-8080-exec-9] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-10 13:39:06.780 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@56311684
[DEBUG] 2019-10-10 13:39:06.780 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@56311684
[DEBUG] 2019-10-10 13:39:06.780 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@56311684
[DEBUG] 2019-10-10 13:39:06.782 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1dafeb26
[DEBUG] 2019-10-10 13:39:06.783 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4dafff58
[DEBUG] 2019-10-10 13:39:06.785 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3a123353
[DEBUG] 2019-10-10 13:39:06.788 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@18bafc54
[DEBUG] 2019-10-10 13:39:06.788 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@18bafc54
[DEBUG] 2019-10-10 13:39:06.788 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@18bafc54
[DEBUG] 2019-10-10 13:39:06.791 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2f195552
[DEBUG] 2019-10-10 13:39:06.791 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2f195552
[DEBUG] 2019-10-10 13:39:06.791 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2f195552
[DEBUG] 2019-10-10 13:39:06.794 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7f0d8471
[DEBUG] 2019-10-10 13:39:06.794 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7f0d8471
[DEBUG] 2019-10-10 13:39:06.794 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7f0d8471
[DEBUG] 2019-10-10 13:39:06.798 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1cf79d79
[DEBUG] 2019-10-10 13:39:06.798 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1cf79d79
[DEBUG] 2019-10-10 13:39:06.798 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1cf79d79
[DEBUG] 2019-10-10 13:39:06.800 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2bd2743e
[DEBUG] 2019-10-10 13:39:06.801 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2bd2743e
[DEBUG] 2019-10-10 13:39:06.801 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2bd2743e
[DEBUG] 2019-10-10 13:39:06.804 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4a13c527
[DEBUG] 2019-10-10 13:39:06.804 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4a13c527
[DEBUG] 2019-10-10 13:39:06.804 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4a13c527
[DEBUG] 2019-10-10 13:39:06.807 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5d655232
[DEBUG] 2019-10-10 13:39:06.807 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5d655232
[DEBUG] 2019-10-10 13:39:06.807 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5d655232
[DEBUG] 2019-10-10 13:39:06.810 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@41dd2348
[DEBUG] 2019-10-10 13:39:06.810 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@41dd2348
[DEBUG] 2019-10-10 13:39:06.812 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58427c79
[DEBUG] 2019-10-10 13:39:06.813 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58427c79
[DEBUG] 2019-10-10 13:39:06.815 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@73f74b53
[DEBUG] 2019-10-10 13:39:06.815 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@73f74b53
[DEBUG] 2019-10-10 13:39:06.816 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6c6d28fd
[DEBUG] 2019-10-10 13:39:06.818 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@75eac1c4
[DEBUG] 2019-10-10 13:39:06.821 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@371aa747
[DEBUG] 2019-10-10 13:39:06.821 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@371aa747
[DEBUG] 2019-10-10 13:39:06.823 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6c81d4f9
[DEBUG] 2019-10-10 13:39:06.824 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6c81d4f9
[DEBUG] 2019-10-10 13:39:06.836 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@324ae965
[DEBUG] 2019-10-10 13:39:06.836 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@324ae965
[DEBUG] 2019-10-10 13:39:06.839 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@398a0006
[DEBUG] 2019-10-10 13:39:06.840 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@398a0006
[DEBUG] 2019-10-10 13:39:06.842 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@17ed5959
[DEBUG] 2019-10-10 13:39:06.842 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@17ed5959
[DEBUG] 2019-10-10 13:39:06.845 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2117b4ba
[DEBUG] 2019-10-10 13:39:06.845 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2117b4ba
[DEBUG] 2019-10-10 13:39:06.849 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4ed8b3f0
[DEBUG] 2019-10-10 13:39:06.849 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4ed8b3f0
[DEBUG] 2019-10-10 13:39:06.853 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@747a5f76
[DEBUG] 2019-10-10 13:39:06.853 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@747a5f76
[DEBUG] 2019-10-10 13:39:06.858 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@62b8e446
[DEBUG] 2019-10-10 13:39:06.859 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@62b8e446
[DEBUG] 2019-10-10 13:39:06.863 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4d281e1c
[DEBUG] 2019-10-10 13:39:06.863 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4d281e1c
[DEBUG] 2019-10-10 13:39:06.865 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@f298f1e
[DEBUG] 2019-10-10 13:39:06.865 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@f298f1e
[DEBUG] 2019-10-10 13:39:06.868 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@48f73bec
[DEBUG] 2019-10-10 13:39:06.868 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@48f73bec
[DEBUG] 2019-10-10 13:39:06.868 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@48f73bec
[DEBUG] 2019-10-10 13:39:06.872 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@44c4e12f
[DEBUG] 2019-10-10 13:39:06.875 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4f1e1ea
[DEBUG] 2019-10-10 13:39:06.875 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4f1e1ea
[DEBUG] 2019-10-10 13:39:06.875 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4f1e1ea
[DEBUG] 2019-10-10 13:39:06.877 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@65db0a15
[DEBUG] 2019-10-10 13:39:06.880 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@75cb963c
[DEBUG] 2019-10-10 13:39:06.880 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@75cb963c
[DEBUG] 2019-10-10 13:39:06.883 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@54874204
[DEBUG] 2019-10-10 13:39:06.883 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@54874204
[DEBUG] 2019-10-10 13:39:06.886 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@11b15f24
[DEBUG] 2019-10-10 13:39:06.887 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@11b15f24
[DEBUG] 2019-10-10 13:39:06.889 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@19cb53fc
[DEBUG] 2019-10-10 13:39:06.889 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@19cb53fc
[DEBUG] 2019-10-10 13:39:06.893 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@265b9eb3
[DEBUG] 2019-10-10 13:39:06.893 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@265b9eb3
[DEBUG] 2019-10-10 13:39:06.896 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@450d405a
[DEBUG] 2019-10-10 13:39:06.899 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@8f956f0
[DEBUG] 2019-10-10 13:39:06.899 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@8f956f0
[DEBUG] 2019-10-10 13:39:06.900 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@8f956f0
[DEBUG] 2019-10-10 13:39:06.903 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6b2b8830
[DEBUG] 2019-10-10 13:39:06.903 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6b2b8830
[DEBUG] 2019-10-10 13:39:06.904 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6b2b8830
[DEBUG] 2019-10-10 13:39:06.910 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@8935d09
[DEBUG] 2019-10-10 13:39:06.911 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7f9ca433
[DEBUG] 2019-10-10 13:39:06.914 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4e122988
[DEBUG] 2019-10-10 13:39:06.914 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4e122988
[DEBUG] 2019-10-10 13:39:06.914 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4e122988
[DEBUG] 2019-10-10 13:39:06.917 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@32ab3bda
[DEBUG] 2019-10-10 13:39:06.917 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@32ab3bda
[DEBUG] 2019-10-10 13:39:06.917 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@32ab3bda
[DEBUG] 2019-10-10 13:39:06.918 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@47a40bc6
[DEBUG] 2019-10-10 13:39:06.921 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@634bc5ae
[DEBUG] 2019-10-10 13:39:06.927 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@53ae2245
[DEBUG] 2019-10-10 13:39:06.927 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@53ae2245
[DEBUG] 2019-10-10 13:39:06.928 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@114095b8
[DEBUG] 2019-10-10 13:39:06.932 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@8d0823d
[DEBUG] 2019-10-10 13:39:06.932 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@8d0823d
[DEBUG] 2019-10-10 13:39:06.938 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6ab4a02d
[DEBUG] 2019-10-10 13:39:06.938 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6ab4a02d
[DEBUG] 2019-10-10 13:39:06.940 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@9500499
[DEBUG] 2019-10-10 13:39:06.941 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1e7e6fbe
[DEBUG] 2019-10-10 13:39:06.945 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@22d59dcb
[DEBUG] 2019-10-10 13:39:06.955 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7272653b
[DEBUG] 2019-10-10 13:39:06.955 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7272653b
[DEBUG] 2019-10-10 13:39:06.957 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@651fbf57
[DEBUG] 2019-10-10 13:39:06.957 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6e4eab69
[DEBUG] 2019-10-10 13:39:06.957 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5156b58f
[DEBUG] 2019-10-10 13:39:06.957 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7f17b191
[DEBUG] 2019-10-10 13:39:06.957 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@67ea4c23
[DEBUG] 2019-10-10 13:39:06.957 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c64a654
[DEBUG] 2019-10-10 13:39:06.957 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@18fa9e9a
[DEBUG] 2019-10-10 13:39:06.958 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5a233f2d
[DEBUG] 2019-10-10 13:39:07.057 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-10 13:39:07.058 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-10 13:39:07.060 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-10 13:39:07.060 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-10 13:39:07.062 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-10 13:39:07.065 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-10 13:39:07.066 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-10 13:39:07.070 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-10 13:39:07.072 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-10 13:39:07.074 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-10 13:39:07.075 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-10 13:39:07.076 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-10 13:39:07.077 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-10 13:39:07.079 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-10 13:39:07.098 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-10 13:39:07.098 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=indeApp}
[INFO ] 2019-10-10 13:39:07.099 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-10 13:39:07.440 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-10 13:39:08.183 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-10 13:39:08.183 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-10 13:39:08.184 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-10 13:39:08.261 [http-nio-8080-exec-9] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-10 13:39:08.317 [http-nio-8080-exec-9] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-10 13:39:08.380 [http-nio-8080-exec-9] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-10 13:39:08.467 [http-nio-8080-exec-9] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-10 13:39:08.478 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ff5bd5d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@453fb40e]
[DEBUG] 2019-10-10 13:39:08.623 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-10 13:39:08.690 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-10 13:39:08.718 [http-nio-8080-exec-9] EntityBinder - Import with entity name User
[DEBUG] 2019-10-10 13:39:08.741 [http-nio-8080-exec-9] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-10 13:39:08.817 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.823 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-10 13:39:08.827 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-10 13:39:08.834 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-10 13:39:08.839 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2019-10-10 13:39:08.852 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-10 13:39:08.855 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.855 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-10 13:39:08.855 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-10 13:39:08.855 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-10 13:39:08.856 [http-nio-8080-exec-9] PropertyBinder - Building property email
[DEBUG] 2019-10-10 13:39:08.861 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.887 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.888 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=favorites_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.892 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='favorites_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-10 13:39:08.897 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
[DEBUG] 2019-10-10 13:39:08.897 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipe_id', referencedColumn='', mappedBy=''}
[DEBUG] 2019-10-10 13:39:08.898 [http-nio-8080-exec-9] CollectionBinder - Collection role: com.alexmalotky.entity.User.favorites
[DEBUG] 2019-10-10 13:39:08.914 [http-nio-8080-exec-9] PropertyBinder - Building property favorites
[DEBUG] 2019-10-10 13:39:08.916 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.916 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-10 13:39:08.917 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-10 13:39:08.917 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-10 13:39:08.917 [http-nio-8080-exec-9] PropertyBinder - Building property firstName
[DEBUG] 2019-10-10 13:39:08.917 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.918 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-10 13:39:08.918 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-10 13:39:08.918 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-10 13:39:08.918 [http-nio-8080-exec-9] PropertyBinder - Building property lastName
[DEBUG] 2019-10-10 13:39:08.918 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.919 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2019-10-10 13:39:08.919 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:password]
[DEBUG] 2019-10-10 13:39:08.919 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2019-10-10 13:39:08.919 [http-nio-8080-exec-9] PropertyBinder - Building property password
[DEBUG] 2019-10-10 13:39:08.919 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-10 13:39:08.920 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.920 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.920 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.920 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.921 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-10 13:39:08.921 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-10 13:39:08.921 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-10 13:39:08.921 [http-nio-8080-exec-9] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-10 13:39:08.921 [http-nio-8080-exec-9] PropertyBinder - Building property recipes
[DEBUG] 2019-10-10 13:39:08.922 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.922 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-10 13:39:08.922 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-10 13:39:08.922 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-10 13:39:08.922 [http-nio-8080-exec-9] PropertyBinder - Building property userName
[DEBUG] 2019-10-10 13:39:08.927 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-10 13:39:08.927 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-10 13:39:08.927 [http-nio-8080-exec-9] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-10 13:39:08.928 [http-nio-8080-exec-9] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-10 13:39:08.931 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.932 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-10 13:39:08.932 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-10 13:39:08.932 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-10 13:39:08.932 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2019-10-10 13:39:08.933 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-10 13:39:08.933 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.933 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-10 13:39:08.933 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-10 13:39:08.934 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-10 13:39:08.934 [http-nio-8080-exec-9] PropertyBinder - Building property directions
[DEBUG] 2019-10-10 13:39:08.934 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.934 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-10 13:39:08.934 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-10 13:39:08.934 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-10 13:39:08.935 [http-nio-8080-exec-9] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-10 13:39:08.935 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.935 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-10 13:39:08.935 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-10 13:39:08.935 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-10 13:39:08.935 [http-nio-8080-exec-9] PropertyBinder - Building property name
[DEBUG] 2019-10-10 13:39:08.936 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=public, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.936 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property publicView with lazy=false
[DEBUG] 2019-10-10 13:39:08.936 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:publicView]
[DEBUG] 2019-10-10 13:39:08.936 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for publicView
[DEBUG] 2019-10-10 13:39:08.936 [http-nio-8080-exec-9] PropertyBinder - Building property publicView
[DEBUG] 2019-10-10 13:39:08.936 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-10 13:39:08.937 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.941 [http-nio-8080-exec-9] PropertyBinder - Building property user
[DEBUG] 2019-10-10 13:39:08.941 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Volume
[DEBUG] 2019-10-10 13:39:08.941 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-10 13:39:08.941 [http-nio-8080-exec-9] EntityBinder - Import with entity name Volume
[DEBUG] 2019-10-10 13:39:08.942 [http-nio-8080-exec-9] EntityBinder - Bind entity com.alexmalotky.entity.Volume on table Volume
[DEBUG] 2019-10-10 13:39:08.943 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Volume), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.943 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-10 13:39:08.944 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Volume:id]
[DEBUG] 2019-10-10 13:39:08.944 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-10 13:39:08.944 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2019-10-10 13:39:08.944 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-10 13:39:08.944 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Volume), mappingColumn=code, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.944 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property code with lazy=false
[DEBUG] 2019-10-10 13:39:08.945 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Volume:code]
[DEBUG] 2019-10-10 13:39:08.945 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for code
[DEBUG] 2019-10-10 13:39:08.945 [http-nio-8080-exec-9] PropertyBinder - Building property code
[DEBUG] 2019-10-10 13:39:08.945 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Volume), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.945 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-10 13:39:08.945 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Volume:name]
[DEBUG] 2019-10-10 13:39:08.945 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-10 13:39:08.946 [http-nio-8080-exec-9] PropertyBinder - Building property name
[DEBUG] 2019-10-10 13:39:08.946 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Volume), mappingColumn=value, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.946 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property value with lazy=false
[DEBUG] 2019-10-10 13:39:08.946 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Volume:value]
[DEBUG] 2019-10-10 13:39:08.946 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for value
[DEBUG] 2019-10-10 13:39:08.946 [http-nio-8080-exec-9] PropertyBinder - Building property value
[DEBUG] 2019-10-10 13:39:08.946 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Weight
[DEBUG] 2019-10-10 13:39:08.947 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-10 13:39:08.947 [http-nio-8080-exec-9] EntityBinder - Import with entity name Weight
[DEBUG] 2019-10-10 13:39:08.947 [http-nio-8080-exec-9] EntityBinder - Bind entity com.alexmalotky.entity.Weight on table Weight
[DEBUG] 2019-10-10 13:39:08.948 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Weight), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.948 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-10 13:39:08.948 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Weight:id]
[DEBUG] 2019-10-10 13:39:08.948 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-10 13:39:08.948 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2019-10-10 13:39:08.948 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-10 13:39:08.948 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Weight), mappingColumn=code, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.949 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property code with lazy=false
[DEBUG] 2019-10-10 13:39:08.949 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Weight:code]
[DEBUG] 2019-10-10 13:39:08.949 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for code
[DEBUG] 2019-10-10 13:39:08.949 [http-nio-8080-exec-9] PropertyBinder - Building property code
[DEBUG] 2019-10-10 13:39:08.949 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Weight), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.949 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-10 13:39:08.949 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Weight:name]
[DEBUG] 2019-10-10 13:39:08.950 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-10 13:39:08.950 [http-nio-8080-exec-9] PropertyBinder - Building property name
[DEBUG] 2019-10-10 13:39:08.950 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Weight), mappingColumn=value, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.950 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property value with lazy=false
[DEBUG] 2019-10-10 13:39:08.950 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Weight:value]
[DEBUG] 2019-10-10 13:39:08.950 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for value
[DEBUG] 2019-10-10 13:39:08.950 [http-nio-8080-exec-9] PropertyBinder - Building property value
[DEBUG] 2019-10-10 13:39:08.950 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Favorite
[DEBUG] 2019-10-10 13:39:08.950 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-10 13:39:08.951 [http-nio-8080-exec-9] EntityBinder - Import with entity name Favorite
[DEBUG] 2019-10-10 13:39:08.951 [http-nio-8080-exec-9] EntityBinder - Bind entity com.alexmalotky.entity.Favorite on table favorites
[DEBUG] 2019-10-10 13:39:08.951 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(favorites), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.952 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-10 13:39:08.952 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Favorite:id]
[DEBUG] 2019-10-10 13:39:08.952 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-10 13:39:08.952 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2019-10-10 13:39:08.952 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-10 13:39:08.952 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-10 13:39:08.952 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(favorites), mappingColumn=recipe, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.953 [http-nio-8080-exec-9] PropertyBinder - Building property recipe
[DEBUG] 2019-10-10 13:39:08.953 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-10 13:39:08.953 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(favorites), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-10 13:39:08.953 [http-nio-8080-exec-9] PropertyBinder - Building property user
[DEBUG] 2019-10-10 13:39:08.957 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-10 13:39:08.957 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-10 13:39:08.957 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-10 13:39:08.957 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-10 13:39:08.957 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2019-10-10 13:39:08.957 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-10 13:39:08.957 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-10 13:39:08.957 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-10 13:39:08.957 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-10 13:39:08.958 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-10 13:39:08.958 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for publicView
[DEBUG] 2019-10-10 13:39:08.958 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-10 13:39:08.958 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for code
[DEBUG] 2019-10-10 13:39:08.958 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-10 13:39:08.958 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for value
[DEBUG] 2019-10-10 13:39:08.958 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-10 13:39:08.958 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for code
[DEBUG] 2019-10-10 13:39:08.958 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-10 13:39:08.958 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for value
[DEBUG] 2019-10-10 13:39:08.958 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-10 13:39:08.971 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-10 13:39:08.971 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-10 13:39:08.971 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [volume]
[DEBUG] 2019-10-10 13:39:08.972 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [weight]
[DEBUG] 2019-10-10 13:39:08.972 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [favorites]
[DEBUG] 2019-10-10 13:39:08.972 [http-nio-8080-exec-9] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.favorites
[DEBUG] 2019-10-10 13:39:08.972 [http-nio-8080-exec-9] CollectionBinder - Binding as ManyToMany: com.alexmalotky.entity.User.favorites
[DEBUG] 2019-10-10 13:39:08.981 [http-nio-8080-exec-9] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [favorites]
[DEBUG] 2019-10-10 13:39:08.981 [http-nio-8080-exec-9] PrimaryKey - Forcing column [recipe_id] to be non-null as it is part of the primary key for table [favorites]
[DEBUG] 2019-10-10 13:39:08.981 [http-nio-8080-exec-9] CollectionSecondPass - Mapped collection key: user_id, element: recipe_id
[DEBUG] 2019-10-10 13:39:08.981 [http-nio-8080-exec-9] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-10 13:39:08.983 [http-nio-8080-exec-9] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-10 13:39:08.983 [http-nio-8080-exec-9] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-10 13:39:08.983 [http-nio-8080-exec-9] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-10 13:39:08.984 [http-nio-8080-exec-9] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-10 13:39:08.984 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-10 13:39:08.988 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-10 13:39:08.988 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-10 13:39:08.992 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-10 13:39:08.993 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-10 13:39:08.993 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-10 13:39:09.088 [http-nio-8080-exec-9] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-10 13:39:09.091 [http-nio-8080-exec-9] Settings - SessionFactory name : null
[DEBUG] 2019-10-10 13:39:09.091 [http-nio-8080-exec-9] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-10 13:39:09.091 [http-nio-8080-exec-9] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-10 13:39:09.092 [http-nio-8080-exec-9] Settings - Statistics: disabled
[DEBUG] 2019-10-10 13:39:09.092 [http-nio-8080-exec-9] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-10 13:39:09.092 [http-nio-8080-exec-9] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-10 13:39:09.092 [http-nio-8080-exec-9] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-10 13:39:09.092 [http-nio-8080-exec-9] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-10 13:39:09.092 [http-nio-8080-exec-9] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-10 13:39:09.092 [http-nio-8080-exec-9] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-10 13:39:09.092 [http-nio-8080-exec-9] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-10 13:39:09.093 [http-nio-8080-exec-9] Settings - Default null ordering: NONE
[DEBUG] 2019-10-10 13:39:09.093 [http-nio-8080-exec-9] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-10 13:39:09.093 [http-nio-8080-exec-9] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-10 13:39:09.093 [http-nio-8080-exec-9] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-10 13:39:09.093 [http-nio-8080-exec-9] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-10 13:39:09.094 [http-nio-8080-exec-9] Settings - Query language substitutions: {}
[DEBUG] 2019-10-10 13:39:09.094 [http-nio-8080-exec-9] Settings - Named query checking : enabled
[DEBUG] 2019-10-10 13:39:09.094 [http-nio-8080-exec-9] Settings - Second-level cache: disabled
[DEBUG] 2019-10-10 13:39:09.094 [http-nio-8080-exec-9] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-10 13:39:09.094 [http-nio-8080-exec-9] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-10 13:39:09.094 [http-nio-8080-exec-9] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-10 13:39:09.094 [http-nio-8080-exec-9] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-10 13:39:09.094 [http-nio-8080-exec-9] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-10 13:39:09.094 [http-nio-8080-exec-9] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-10 13:39:09.094 [http-nio-8080-exec-9] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-10 13:39:09.095 [http-nio-8080-exec-9] Settings - JDBC batch size: 15
[DEBUG] 2019-10-10 13:39:09.095 [http-nio-8080-exec-9] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-10 13:39:09.095 [http-nio-8080-exec-9] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-10 13:39:09.095 [http-nio-8080-exec-9] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-10 13:39:09.095 [http-nio-8080-exec-9] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-10 13:39:09.095 [http-nio-8080-exec-9] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-10 13:39:09.095 [http-nio-8080-exec-9] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-10 13:39:09.095 [http-nio-8080-exec-9] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-10 13:39:09.095 [http-nio-8080-exec-9] Settings - JPA compliance - query : 
[DEBUG] 2019-10-10 13:39:09.095 [http-nio-8080-exec-9] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-10 13:39:09.095 [http-nio-8080-exec-9] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-10 13:39:09.095 [http-nio-8080-exec-9] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-10 13:39:09.285 [http-nio-8080-exec-9] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-10 13:39:09.338 [http-nio-8080-exec-9] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-10 13:39:09.338 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=ePBu2q9g, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.2+9-LTS, user.name=Alex, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, java.vendor.version=18.9, derby.system.home=C:\Users\Alex\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\Users\Alex\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.2, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=indeApp, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=windows, java.class.path=C:\Users\Alex\tomcat\bin\bootstrap.jar;C:\Users\Alex\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\Users\Alex\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/Users/Alex/tomcat/lib","C:/Users/Alex/tomcat/lib/*.jar","C:\Users\Alex\tomcat/lib","C:\Users\Alex\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=10.0, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=http://bugreport.java.com/bugreport/, tomee.remote.support=true, catalina.home=C:\Users\Alex\tomcat, user.dir=C:\Users\Alex\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@42bc42c4, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2019-10-10 13:39:09.396 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Favorite] is safe
[DEBUG] 2019-10-10 13:39:09.397 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Favorite
[DEBUG] 2019-10-10 13:39:09.417 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Weight] is safe
[DEBUG] 2019-10-10 13:39:09.417 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Weight
[DEBUG] 2019-10-10 13:39:09.418 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-10 13:39:09.418 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-10 13:39:09.419 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-10 13:39:09.420 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-10 13:39:09.421 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Volume] is safe
[DEBUG] 2019-10-10 13:39:09.421 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Volume
[DEBUG] 2019-10-10 13:39:09.427 [http-nio-8080-exec-9] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-10 13:39:09.429 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-10 13:39:09.429 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@ff5bd5d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@30144e4a]
[DEBUG] 2019-10-10 13:39:09.553 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Favorite] is safe
[DEBUG] 2019-10-10 13:39:09.553 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Favorite
[DEBUG] 2019-10-10 13:39:09.615 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Favorite] is safe
[DEBUG] 2019-10-10 13:39:09.615 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Favorite
[DEBUG] 2019-10-10 13:39:10.190 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Weight] is safe
[DEBUG] 2019-10-10 13:39:10.191 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Weight
[DEBUG] 2019-10-10 13:39:10.192 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Weight] is safe
[DEBUG] 2019-10-10 13:39:10.192 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Weight
[DEBUG] 2019-10-10 13:39:10.219 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-10 13:39:10.219 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-10 13:39:10.221 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-10 13:39:10.221 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-10 13:39:10.275 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-10 13:39:10.275 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-10 13:39:10.276 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-10 13:39:10.276 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-10 13:39:10.306 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Volume] is safe
[DEBUG] 2019-10-10 13:39:10.306 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Volume
[DEBUG] 2019-10-10 13:39:10.307 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Volume] is safe
[DEBUG] 2019-10-10 13:39:10.307 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Volume
[DEBUG] 2019-10-10 13:39:10.349 [http-nio-8080-exec-9] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.favorites
[DEBUG] 2019-10-10 13:39:10.349 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row insert: insert into favorites (user_id, recipe_id) values (?, ?)
[DEBUG] 2019-10-10 13:39:10.349 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row update: update favorites set recipe_id=? where user_id=? and recipe_id=?
[DEBUG] 2019-10-10 13:39:10.349 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row delete: delete from favorites where user_id=? and recipe_id=?
[DEBUG] 2019-10-10 13:39:10.349 [http-nio-8080-exec-9] AbstractCollectionPersister -  One-shot delete: delete from favorites where user_id=?
[DEBUG] 2019-10-10 13:39:10.353 [http-nio-8080-exec-9] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-10 13:39:10.353 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-10 13:39:10.354 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-10 13:39:10.354 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-10 13:39:10.354 [http-nio-8080-exec-9] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-10 13:39:10.365 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Favorite
[DEBUG] 2019-10-10 13:39:10.365 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from favorites where id =?
[DEBUG] 2019-10-10 13:39:10.365 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select favorite_.id, favorite_.recipe_id as recipe_i2_0_, favorite_.user_id as user_id3_0_ from favorites favorite_ where favorite_.id=?
[DEBUG] 2019-10-10 13:39:10.365 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into favorites (recipe_id, user_id, id) values (?, ?, ?)
[DEBUG] 2019-10-10 13:39:10.365 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update favorites set recipe_id=?, user_id=? where id=?
[DEBUG] 2019-10-10 13:39:10.366 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from favorites where id=?
[DEBUG] 2019-10-10 13:39:10.366 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into favorites (recipe_id, user_id) values (?, ?)
[DEBUG] 2019-10-10 13:39:10.447 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ddb7c82]
[DEBUG] 2019-10-10 13:39:10.451 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe
[DEBUG] 2019-10-10 13:39:10.464 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55afaca6]
[DEBUG] 2019-10-10 13:39:10.469 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.directions
[DEBUG] 2019-10-10 13:39:10.469 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.ingredients
[DEBUG] 2019-10-10 13:39:10.469 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.name
[DEBUG] 2019-10-10 13:39:10.469 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.publicView
[DEBUG] 2019-10-10 13:39:10.469 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.user
[DEBUG] 2019-10-10 13:39:10.469 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ab581a3]
[DEBUG] 2019-10-10 13:39:10.470 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.user.email
[DEBUG] 2019-10-10 13:39:10.470 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.user.favorites
[DEBUG] 2019-10-10 13:39:10.471 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d7aa067]
[DEBUG] 2019-10-10 13:39:10.475 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38a3aade]
[DEBUG] 2019-10-10 13:39:10.476 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.user.firstName
[DEBUG] 2019-10-10 13:39:10.476 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.user.lastName
[DEBUG] 2019-10-10 13:39:10.476 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.user.password
[DEBUG] 2019-10-10 13:39:10.476 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.user.recipes
[DEBUG] 2019-10-10 13:39:10.476 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : recipe.user.recipes
[DEBUG] 2019-10-10 13:39:10.477 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.user.userName
[DEBUG] 2019-10-10 13:39:10.477 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-10 13:39:10.477 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f5fa58e]
[DEBUG] 2019-10-10 13:39:10.477 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-10 13:39:10.477 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.favorites
[DEBUG] 2019-10-10 13:39:10.477 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.favorites
[DEBUG] 2019-10-10 13:39:10.478 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-10 13:39:10.478 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-10 13:39:10.479 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-10-10 13:39:10.479 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-10 13:39:10.479 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-10 13:39:10.479 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-10 13:39:10.479 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-10 13:39:10.516 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-10 13:39:10.530 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Favorite)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Favorite, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Favorite)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Favorite.recipe)
             - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.Favorite.recipe.user)
                - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.favorites, querySpaceUid=<gen:3>, path=com.alexmalotky.entity.Favorite.recipe.user.favorites)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:4>, path=com.alexmalotky.entity.Favorite.recipe.user.favorites.<elements>)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:5>, path=com.alexmalotky.entity.Favorite.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Favorite)
          - SQL table alias mapping - favorite0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(recipe)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipe1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

[DEBUG] 2019-10-10 13:39:10.536 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.Favorite [NONE]: select favorite0_.id as id1_0_0_, favorite0_.recipe_id as recipe_i2_0_0_, favorite0_.user_id as user_id3_0_0_, recipe1_.id as id1_1_1_, recipe1_.directions as directio2_1_1_, recipe1_.ingredients as ingredie3_1_1_, recipe1_.name as name4_1_1_, recipe1_.public as public5_1_1_, recipe1_.user_id as user_id6_1_1_, user2_.id as id1_2_2_, user2_.email as email2_2_2_, user2_.first_name as first_na3_2_2_, user2_.last_name as last_nam4_2_2_, user2_.password as password5_2_2_, user2_.user_name as user_nam6_2_2_, user3_.id as id1_2_3_, user3_.email as email2_2_3_, user3_.first_name as first_na3_2_3_, user3_.last_name as last_nam4_2_3_, user3_.password as password5_2_3_, user3_.user_name as user_nam6_2_3_ from favorites favorite0_ inner join recipes recipe1_ on favorite0_.recipe_id=recipe1_.id left outer join users user2_ on recipe1_.user_id=user2_.id inner join users user3_ on favorite0_.user_id=user3_.id where favorite0_.id=?
[DEBUG] 2019-10-10 13:39:10.536 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c0e330e]
[DEBUG] 2019-10-10 13:39:10.536 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe
[DEBUG] 2019-10-10 13:39:10.536 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bf03abd]
[DEBUG] 2019-10-10 13:39:10.537 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.directions
[DEBUG] 2019-10-10 13:39:10.537 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.ingredients
[DEBUG] 2019-10-10 13:39:10.537 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.name
[DEBUG] 2019-10-10 13:39:10.537 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.publicView
[DEBUG] 2019-10-10 13:39:10.537 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.user
[DEBUG] 2019-10-10 13:39:10.537 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5510d388]
[DEBUG] 2019-10-10 13:39:10.537 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.user.email
[DEBUG] 2019-10-10 13:39:10.537 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.user.favorites
[DEBUG] 2019-10-10 13:39:10.537 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@755649f9]
[DEBUG] 2019-10-10 13:39:10.537 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1553e3ca]
[DEBUG] 2019-10-10 13:39:10.537 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.user.firstName
[DEBUG] 2019-10-10 13:39:10.537 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.user.lastName
[DEBUG] 2019-10-10 13:39:10.538 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.user.password
[DEBUG] 2019-10-10 13:39:10.538 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.user.recipes
[DEBUG] 2019-10-10 13:39:10.538 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : recipe.user.recipes
[DEBUG] 2019-10-10 13:39:10.538 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipe.user.userName
[DEBUG] 2019-10-10 13:39:10.538 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-10 13:39:10.538 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@460cfe7b]
[DEBUG] 2019-10-10 13:39:10.538 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-10 13:39:10.538 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.favorites
[DEBUG] 2019-10-10 13:39:10.538 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.favorites
[DEBUG] 2019-10-10 13:39:10.538 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-10 13:39:10.538 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-10 13:39:10.539 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-10-10 13:39:10.539 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-10 13:39:10.539 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-10 13:39:10.539 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-10 13:39:10.539 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-10 13:39:10.539 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-10 13:39:10.540 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Favorite)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Favorite, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Favorite)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Favorite.recipe)
             - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.Favorite.recipe.user)
                - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.favorites, querySpaceUid=<gen:3>, path=com.alexmalotky.entity.Favorite.recipe.user.favorites)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:4>, path=com.alexmalotky.entity.Favorite.recipe.user.favorites.<elements>)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:5>, path=com.alexmalotky.entity.Favorite.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Favorite)
          - SQL table alias mapping - favorite0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(recipe)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipe1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

[DEBUG] 2019-10-10 13:39:10.540 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.Favorite [READ]: select favorite0_.id as id1_0_0_, favorite0_.recipe_id as recipe_i2_0_0_, favorite0_.user_id as user_id3_0_0_, recipe1_.id as id1_1_1_, recipe1_.directions as directio2_1_1_, recipe1_.ingredients as ingredie3_1_1_, recipe1_.name as name4_1_1_, recipe1_.public as public5_1_1_, recipe1_.user_id as user_id6_1_1_, user2_.id as id1_2_2_, user2_.email as email2_2_2_, user2_.first_name as first_na3_2_2_, user2_.last_name as last_nam4_2_2_, user2_.password as password5_2_2_, user2_.user_name as user_nam6_2_2_, user3_.id as id1_2_3_, user3_.email as email2_2_3_, user3_.first_name as first_na3_2_3_, user3_.last_name as last_nam4_2_3_, user3_.password as password5_2_3_, user3_.user_name as user_nam6_2_3_ from favorites favorite0_ inner join recipes recipe1_ on favorite0_.recipe_id=recipe1_.id left outer join users user2_ on recipe1_.user_id=user2_.id inner join users user3_ on favorite0_.user_id=user3_.id where favorite0_.id=?
[DEBUG] 2019-10-10 13:39:10.582 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Favorite: select favorite0_.id as id1_0_0_, favorite0_.recipe_id as recipe_i2_0_0_, favorite0_.user_id as user_id3_0_0_ from favorites favorite0_ where favorite0_.id=?
[DEBUG] 2019-10-10 13:39:10.582 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Favorite: select favorite0_.id as id1_0_0_, favorite0_.recipe_id as recipe_i2_0_0_, favorite0_.user_id as user_id3_0_0_ from favorites favorite0_ where favorite0_.id=?
[DEBUG] 2019-10-10 13:39:10.583 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Weight
[DEBUG] 2019-10-10 13:39:10.583 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from Weight where id =?
[DEBUG] 2019-10-10 13:39:10.583 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select weight_.id, weight_.code as code2_4_, weight_.name as name3_4_, weight_.value as value4_4_ from Weight weight_ where weight_.id=?
[DEBUG] 2019-10-10 13:39:10.583 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into Weight (code, name, value, id) values (?, ?, ?, ?)
[DEBUG] 2019-10-10 13:39:10.583 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update Weight set code=?, name=?, value=? where id=?
[DEBUG] 2019-10-10 13:39:10.584 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from Weight where id=?
[DEBUG] 2019-10-10 13:39:10.584 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into Weight (code, name, value) values (?, ?, ?)
[DEBUG] 2019-10-10 13:39:10.584 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340d06f1]
[DEBUG] 2019-10-10 13:39:10.584 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2019-10-10 13:39:10.584 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-10 13:39:10.585 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : value
[DEBUG] 2019-10-10 13:39:10.585 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-10 13:39:10.585 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-10 13:39:10.585 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Weight)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Weight, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Weight)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Weight)
          - SQL table alias mapping - weight0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[DEBUG] 2019-10-10 13:39:10.586 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.Weight [NONE]: select weight0_.id as id1_4_0_, weight0_.code as code2_4_0_, weight0_.name as name3_4_0_, weight0_.value as value4_4_0_ from Weight weight0_ where weight0_.id=?
[DEBUG] 2019-10-10 13:39:10.586 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f9c916]
[DEBUG] 2019-10-10 13:39:10.586 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2019-10-10 13:39:10.586 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-10 13:39:10.586 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : value
[DEBUG] 2019-10-10 13:39:10.586 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-10 13:39:10.587 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-10 13:39:10.587 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Weight)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Weight, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Weight)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Weight)
          - SQL table alias mapping - weight0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}

[DEBUG] 2019-10-10 13:39:10.587 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.Weight [READ]: select weight0_.id as id1_4_0_, weight0_.code as code2_4_0_, weight0_.name as name3_4_0_, weight0_.value as value4_4_0_ from Weight weight0_ where weight0_.id=?
[DEBUG] 2019-10-10 13:39:10.587 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Weight: select weight0_.id as id1_4_0_, weight0_.code as code2_4_0_, weight0_.name as name3_4_0_, weight0_.value as value4_4_0_ from Weight weight0_ where weight0_.id=?
[DEBUG] 2019-10-10 13:39:10.588 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Weight: select weight0_.id as id1_4_0_, weight0_.code as code2_4_0_, weight0_.name as name3_4_0_, weight0_.value as value4_4_0_ from Weight weight0_ where weight0_.id=?
[DEBUG] 2019-10-10 13:39:10.588 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-10 13:39:10.588 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-10 13:39:10.588 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.user_name as user_nam6_2_ from users user_ where user_.id=?
[DEBUG] 2019-10-10 13:39:10.588 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, password, user_name, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2019-10-10 13:39:10.588 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, user_name=? where id=?
[DEBUG] 2019-10-10 13:39:10.589 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-10 13:39:10.589 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, password, user_name) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-10 13:39:10.589 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d527428]
[DEBUG] 2019-10-10 13:39:10.589 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-10 13:39:10.589 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites
[DEBUG] 2019-10-10 13:39:10.589 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f0528a]
[DEBUG] 2019-10-10 13:39:10.589 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62e06595]
[DEBUG] 2019-10-10 13:39:10.593 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.directions
[DEBUG] 2019-10-10 13:39:10.593 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.ingredients
[DEBUG] 2019-10-10 13:39:10.594 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.name
[DEBUG] 2019-10-10 13:39:10.594 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.publicView
[DEBUG] 2019-10-10 13:39:10.594 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.user
[DEBUG] 2019-10-10 13:39:10.594 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@190de954]
[DEBUG] 2019-10-10 13:39:10.594 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.user.email
[DEBUG] 2019-10-10 13:39:10.594 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.user.favorites
[DEBUG] 2019-10-10 13:39:10.594 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : favorites.user.favorites
[DEBUG] 2019-10-10 13:39:10.594 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.user.firstName
[DEBUG] 2019-10-10 13:39:10.594 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.user.lastName
[DEBUG] 2019-10-10 13:39:10.595 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.user.password
[DEBUG] 2019-10-10 13:39:10.595 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.user.recipes
[DEBUG] 2019-10-10 13:39:10.595 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : favorites.user.recipes
[DEBUG] 2019-10-10 13:39:10.595 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.user.userName
[DEBUG] 2019-10-10 13:39:10.595 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-10 13:39:10.595 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-10 13:39:10.595 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-10-10 13:39:10.595 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-10 13:39:10.595 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : recipes
[DEBUG] 2019-10-10 13:39:10.595 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-10 13:39:10.595 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-10 13:39:10.595 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-10 13:39:10.603 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.favorites, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.favorites)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.favorites.<elements>)
                - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:3>, path=com.alexmalotky.entity.User.favorites.<elements>.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(favorites)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.favorites)
                - SQL table alias mapping - favorites1_
                - alias suffix - 1_
                - suffixed key columns - {user_id3_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipe2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.alexmalotky.entity.User)
                            - SQL table alias mapping - user3_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}

[DEBUG] 2019-10-10 13:39:10.603 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.user_name as user_nam6_2_0_, favorites1_.user_id as user_id3_0_1_, recipe2_.id as recipe_i2_0_1_, recipe2_.id as id1_1_2_, recipe2_.directions as directio2_1_2_, recipe2_.ingredients as ingredie3_1_2_, recipe2_.name as name4_1_2_, recipe2_.public as public5_1_2_, recipe2_.user_id as user_id6_1_2_, user3_.id as id1_2_3_, user3_.email as email2_2_3_, user3_.first_name as first_na3_2_3_, user3_.last_name as last_nam4_2_3_, user3_.password as password5_2_3_, user3_.user_name as user_nam6_2_3_ from users user0_ left outer join favorites favorites1_ on user0_.id=favorites1_.user_id left outer join recipes recipe2_ on favorites1_.recipe_id=recipe2_.id left outer join users user3_ on recipe2_.user_id=user3_.id where user0_.id=?
[DEBUG] 2019-10-10 13:39:10.603 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e02f2a1]
[DEBUG] 2019-10-10 13:39:10.604 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-10 13:39:10.604 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites
[DEBUG] 2019-10-10 13:39:10.604 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@702c142a]
[DEBUG] 2019-10-10 13:39:10.604 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1824a74b]
[DEBUG] 2019-10-10 13:39:10.604 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.directions
[DEBUG] 2019-10-10 13:39:10.604 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.ingredients
[DEBUG] 2019-10-10 13:39:10.604 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.name
[DEBUG] 2019-10-10 13:39:10.604 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.publicView
[DEBUG] 2019-10-10 13:39:10.604 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.user
[DEBUG] 2019-10-10 13:39:10.604 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5de94009]
[DEBUG] 2019-10-10 13:39:10.604 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.user.email
[DEBUG] 2019-10-10 13:39:10.605 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.user.favorites
[DEBUG] 2019-10-10 13:39:10.605 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : favorites.user.favorites
[DEBUG] 2019-10-10 13:39:10.605 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.user.firstName
[DEBUG] 2019-10-10 13:39:10.605 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.user.lastName
[DEBUG] 2019-10-10 13:39:10.605 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.user.password
[DEBUG] 2019-10-10 13:39:10.605 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.user.recipes
[DEBUG] 2019-10-10 13:39:10.605 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : favorites.user.recipes
[DEBUG] 2019-10-10 13:39:10.605 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : favorites.user.userName
[DEBUG] 2019-10-10 13:39:10.605 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-10 13:39:10.605 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-10 13:39:10.605 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2019-10-10 13:39:10.605 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-10 13:39:10.605 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : recipes
[DEBUG] 2019-10-10 13:39:10.605 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-10 13:39:10.605 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-10 13:39:10.606 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-10 13:39:10.607 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.favorites, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.favorites)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.favorites.<elements>)
                - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:3>, path=com.alexmalotky.entity.User.favorites.<elements>.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(favorites)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.favorites)
                - SQL table alias mapping - favorites1_
                - alias suffix - 1_
                - suffixed key columns - {user_id3_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipe2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
                      - JOIN (JoinDefinedByMetadata(user)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.alexmalotky.entity.User)
                            - SQL table alias mapping - user3_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_2_3_}

[DEBUG] 2019-10-10 13:39:10.607 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.user_name as user_nam6_2_0_, favorites1_.user_id as user_id3_0_1_, recipe2_.id as recipe_i2_0_1_, recipe2_.id as id1_1_2_, recipe2_.directions as directio2_1_2_, recipe2_.ingredients as ingredie3_1_2_, recipe2_.name as name4_1_2_, recipe2_.public as public5_1_2_, recipe2_.user_id as user_id6_1_2_, user3_.id as id1_2_3_, user3_.email as email2_2_3_, user3_.first_name as first_na3_2_3_, user3_.last_name as last_nam4_2_3_, user3_.password as password5_2_3_, user3_.user_name as user_nam6_2_3_ from users user0_ left outer join favorites favorites1_ on user0_.id=favorites1_.user_id left outer join recipes recipe2_ on favorites1_.recipe_id=recipe2_.id left outer join users user3_ on recipe2_.user_id=user3_.id where user0_.id=?
[DEBUG] 2019-10-10 13:39:10.609 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.user_name as user_nam6_2_1_, favorites1_.user_id as user_id3_0_3_, recipe2_.id as recipe_i2_0_3_, recipe2_.id as id1_1_0_, recipe2_.directions as directio2_1_0_, recipe2_.ingredients as ingredie3_1_0_, recipe2_.name as name4_1_0_, recipe2_.public as public5_1_0_, recipe2_.user_id as user_id6_1_0_ from users user0_ left outer join favorites favorites1_ on user0_.id=favorites1_.user_id left outer join recipes recipe2_ on favorites1_.recipe_id=recipe2_.id where user0_.id=?
[DEBUG] 2019-10-10 13:39:10.610 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.user_name as user_nam6_2_1_, favorites1_.user_id as user_id3_0_3_, recipe2_.id as recipe_i2_0_3_, recipe2_.id as id1_1_0_, recipe2_.directions as directio2_1_0_, recipe2_.ingredients as ingredie3_1_0_, recipe2_.name as name4_1_0_, recipe2_.public as public5_1_0_, recipe2_.user_id as user_id6_1_0_ from users user0_ left outer join favorites favorites1_ on user0_.id=favorites1_.user_id left outer join recipes recipe2_ on favorites1_.recipe_id=recipe2_.id where user0_.id=?
[DEBUG] 2019-10-10 13:39:10.610 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-10 13:39:10.610 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-10 13:39:10.610 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_1_, recipe_.ingredients as ingredie3_1_, recipe_.name as name4_1_, recipe_.public as public5_1_, recipe_.user_id as user_id6_1_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-10 13:39:10.610 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, public, user_id, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2019-10-10 13:39:10.611 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, public=?, user_id=? where id=?
[DEBUG] 2019-10-10 13:39:10.611 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-10 13:39:10.611 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, public, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-10 13:39:10.611 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cb5bede]
[DEBUG] 2019-10-10 13:39:10.611 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-10 13:39:10.611 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-10 13:39:10.611 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-10 13:39:10.611 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : publicView
[DEBUG] 2019-10-10 13:39:10.611 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-10 13:39:10.611 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@281df7c7]
[DEBUG] 2019-10-10 13:39:10.612 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-10 13:39:10.612 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.favorites
[DEBUG] 2019-10-10 13:39:10.612 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64529684]
[DEBUG] 2019-10-10 13:39:10.612 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@138b7883]
[DEBUG] 2019-10-10 13:39:10.612 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.favorites.directions
[DEBUG] 2019-10-10 13:39:10.612 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.favorites.ingredients
[DEBUG] 2019-10-10 13:39:10.612 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.favorites.name
[DEBUG] 2019-10-10 13:39:10.612 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.favorites.publicView
[DEBUG] 2019-10-10 13:39:10.612 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.favorites.user
[DEBUG] 2019-10-10 13:39:10.613 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.favorites.user
[DEBUG] 2019-10-10 13:39:10.615 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-10 13:39:10.615 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-10 13:39:10.615 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-10-10 13:39:10.615 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-10 13:39:10.615 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-10 13:39:10.615 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-10 13:39:10.616 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-10 13:39:10.616 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-10 13:39:10.617 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
             - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.favorites, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.Recipe.user.favorites)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:3>, path=com.alexmalotky.entity.Recipe.user.favorites.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(favorites)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.alexmalotky.entity.User.favorites)
                      - SQL table alias mapping - favorites2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id3_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.alexmalotky.entity.Recipe)
                            - SQL table alias mapping - recipe3_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}

[DEBUG] 2019-10-10 13:39:10.617 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_1_0_, recipe0_.directions as directio2_1_0_, recipe0_.ingredients as ingredie3_1_0_, recipe0_.name as name4_1_0_, recipe0_.public as public5_1_0_, recipe0_.user_id as user_id6_1_0_, user1_.id as id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.user_name as user_nam6_2_1_, favorites2_.user_id as user_id3_0_2_, recipe3_.id as recipe_i2_0_2_, recipe3_.id as id1_1_3_, recipe3_.directions as directio2_1_3_, recipe3_.ingredients as ingredie3_1_3_, recipe3_.name as name4_1_3_, recipe3_.public as public5_1_3_, recipe3_.user_id as user_id6_1_3_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id left outer join favorites favorites2_ on user1_.id=favorites2_.user_id left outer join recipes recipe3_ on favorites2_.recipe_id=recipe3_.id where recipe0_.id=?
[DEBUG] 2019-10-10 13:39:10.618 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53a61948]
[DEBUG] 2019-10-10 13:39:10.618 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-10 13:39:10.618 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-10 13:39:10.618 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-10 13:39:10.618 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : publicView
[DEBUG] 2019-10-10 13:39:10.618 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-10 13:39:10.618 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b165dc9]
[DEBUG] 2019-10-10 13:39:10.619 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-10 13:39:10.619 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.favorites
[DEBUG] 2019-10-10 13:39:10.619 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f6e0114]
[DEBUG] 2019-10-10 13:39:10.619 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@288c5dcd]
[DEBUG] 2019-10-10 13:39:10.619 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.favorites.directions
[DEBUG] 2019-10-10 13:39:10.619 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.favorites.ingredients
[DEBUG] 2019-10-10 13:39:10.619 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.favorites.name
[DEBUG] 2019-10-10 13:39:10.619 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.favorites.publicView
[DEBUG] 2019-10-10 13:39:10.619 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.favorites.user
[DEBUG] 2019-10-10 13:39:10.619 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.favorites.user
[DEBUG] 2019-10-10 13:39:10.620 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-10 13:39:10.620 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-10 13:39:10.620 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-10-10 13:39:10.620 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-10 13:39:10.620 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-10 13:39:10.620 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-10 13:39:10.620 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-10 13:39:10.620 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-10 13:39:10.622 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
             - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.favorites, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.Recipe.user.favorites)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:3>, path=com.alexmalotky.entity.Recipe.user.favorites.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(favorites)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.alexmalotky.entity.User.favorites)
                      - SQL table alias mapping - favorites2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id3_0_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_1_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.alexmalotky.entity.Recipe)
                            - SQL table alias mapping - recipe3_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}

[DEBUG] 2019-10-10 13:39:10.622 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_1_0_, recipe0_.directions as directio2_1_0_, recipe0_.ingredients as ingredie3_1_0_, recipe0_.name as name4_1_0_, recipe0_.public as public5_1_0_, recipe0_.user_id as user_id6_1_0_, user1_.id as id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.user_name as user_nam6_2_1_, favorites2_.user_id as user_id3_0_2_, recipe3_.id as recipe_i2_0_2_, recipe3_.id as id1_1_3_, recipe3_.directions as directio2_1_3_, recipe3_.ingredients as ingredie3_1_3_, recipe3_.name as name4_1_3_, recipe3_.public as public5_1_3_, recipe3_.user_id as user_id6_1_3_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id left outer join favorites favorites2_ on user1_.id=favorites2_.user_id left outer join recipes recipe3_ on favorites2_.recipe_id=recipe3_.id where recipe0_.id=?
[DEBUG] 2019-10-10 13:39:10.622 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_1_0_, recipe0_.directions as directio2_1_0_, recipe0_.ingredients as ingredie3_1_0_, recipe0_.name as name4_1_0_, recipe0_.public as public5_1_0_, recipe0_.user_id as user_id6_1_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-10 13:39:10.622 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_1_0_, recipe0_.directions as directio2_1_0_, recipe0_.ingredients as ingredie3_1_0_, recipe0_.name as name4_1_0_, recipe0_.public as public5_1_0_, recipe0_.user_id as user_id6_1_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-10 13:39:10.623 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Volume
[DEBUG] 2019-10-10 13:39:10.623 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from Volume where id =?
[DEBUG] 2019-10-10 13:39:10.623 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select volume_.id, volume_.code as code2_3_, volume_.name as name3_3_, volume_.value as value4_3_ from Volume volume_ where volume_.id=?
[DEBUG] 2019-10-10 13:39:10.623 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into Volume (code, name, value, id) values (?, ?, ?, ?)
[DEBUG] 2019-10-10 13:39:10.623 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update Volume set code=?, name=?, value=? where id=?
[DEBUG] 2019-10-10 13:39:10.623 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from Volume where id=?
[DEBUG] 2019-10-10 13:39:10.623 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into Volume (code, name, value) values (?, ?, ?)
[DEBUG] 2019-10-10 13:39:10.623 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b2cd2f8]
[DEBUG] 2019-10-10 13:39:10.624 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2019-10-10 13:39:10.624 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-10 13:39:10.624 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : value
[DEBUG] 2019-10-10 13:39:10.624 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-10 13:39:10.624 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-10 13:39:10.624 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Volume)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Volume, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Volume)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Volume)
          - SQL table alias mapping - volume0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

[DEBUG] 2019-10-10 13:39:10.625 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.Volume [NONE]: select volume0_.id as id1_3_0_, volume0_.code as code2_3_0_, volume0_.name as name3_3_0_, volume0_.value as value4_3_0_ from Volume volume0_ where volume0_.id=?
[DEBUG] 2019-10-10 13:39:10.625 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d9d8cf0]
[DEBUG] 2019-10-10 13:39:10.625 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2019-10-10 13:39:10.625 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-10 13:39:10.625 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : value
[DEBUG] 2019-10-10 13:39:10.625 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-10 13:39:10.625 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-10 13:39:10.626 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Volume)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Volume, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Volume)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Volume)
          - SQL table alias mapping - volume0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

[DEBUG] 2019-10-10 13:39:10.626 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.Volume [READ]: select volume0_.id as id1_3_0_, volume0_.code as code2_3_0_, volume0_.name as name3_3_0_, volume0_.value as value4_3_0_ from Volume volume0_ where volume0_.id=?
[DEBUG] 2019-10-10 13:39:10.626 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Volume: select volume0_.id as id1_3_0_, volume0_.code as code2_3_0_, volume0_.name as name3_3_0_, volume0_.value as value4_3_0_ from Volume volume0_ where volume0_.id=?
[DEBUG] 2019-10-10 13:39:10.627 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Volume: select volume0_.id as id1_3_0_, volume0_.code as code2_3_0_, volume0_.name as name3_3_0_, volume0_.value as value4_3_0_ from Volume volume0_ where volume0_.id=?
[DEBUG] 2019-10-10 13:39:10.646 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7316c75]
[DEBUG] 2019-10-10 13:39:10.646 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e5fcda6]
[DEBUG] 2019-10-10 13:39:10.646 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-10 13:39:10.646 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-10 13:39:10.646 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-10 13:39:10.646 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : publicView
[DEBUG] 2019-10-10 13:39:10.647 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-10 13:39:10.647 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37dcb30d]
[DEBUG] 2019-10-10 13:39:10.647 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-10 13:39:10.647 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.favorites
[DEBUG] 2019-10-10 13:39:10.647 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.favorites
[DEBUG] 2019-10-10 13:39:10.647 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-10 13:39:10.647 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-10 13:39:10.647 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2019-10-10 13:39:10.647 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-10 13:39:10.647 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-10 13:39:10.647 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-10 13:39:10.648 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-10 13:39:10.655 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-10 13:39:10.656 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.favorites)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.favorites, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.favorites])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.favorites].<elements>)
             - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:2>, path=[com.alexmalotky.entity.User.favorites].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.favorites)
          - SQL table alias mapping - favorites0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipe1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}
                - JOIN (JoinDefinedByMetadata(user)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}

[DEBUG] 2019-10-10 13:39:10.658 [http-nio-8080-exec-9] CollectionLoader - Static select for collection com.alexmalotky.entity.User.favorites: select favorites0_.user_id as user_id3_0_0_, favorites0_.recipe_id as recipe_i2_0_0_, recipe1_.id as id1_1_1_, recipe1_.directions as directio2_1_1_, recipe1_.ingredients as ingredie3_1_1_, recipe1_.name as name4_1_1_, recipe1_.public as public5_1_1_, recipe1_.user_id as user_id6_1_1_, user2_.id as id1_2_2_, user2_.email as email2_2_2_, user2_.first_name as first_na3_2_2_, user2_.last_name as last_nam4_2_2_, user2_.password as password5_2_2_, user2_.user_name as user_nam6_2_2_ from favorites favorites0_ inner join recipes recipe1_ on favorites0_.recipe_id=recipe1_.id left outer join users user2_ on recipe1_.user_id=user2_.id where favorites0_.user_id=?
[DEBUG] 2019-10-10 13:39:10.658 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27507684]
[DEBUG] 2019-10-10 13:39:10.658 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ae30d9]
[DEBUG] 2019-10-10 13:39:10.658 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-10 13:39:10.658 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-10 13:39:10.658 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-10 13:39:10.658 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : publicView
[DEBUG] 2019-10-10 13:39:10.658 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-10 13:39:10.659 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-10 13:39:10.659 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-10 13:39:10.660 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-10 13:39:10.661 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-10 13:39:10.661 [http-nio-8080-exec-9] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id6_1_0_, recipes0_.id as id1_1_0_, recipes0_.id as id1_1_1_, recipes0_.directions as directio2_1_1_, recipes0_.ingredients as ingredie3_1_1_, recipes0_.name as name4_1_1_, recipes0_.public as public5_1_1_, recipes0_.user_id as user_id6_1_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-10 13:39:10.774 [http-nio-8080-exec-9] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-10 13:39:10.774 [http-nio-8080-exec-9] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-10 13:39:10.776 [http-nio-8080-exec-9] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-10 13:39:10.799 [http-nio-8080-exec-9] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-10 13:39:10.800 [http-nio-8080-exec-9] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-10 13:39:10.801 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-10 13:39:10.801 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-10 13:39:10.805 [http-nio-8080-exec-9] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@767548e7
[DEBUG] 2019-10-10 13:39:10.808 [http-nio-8080-exec-9] SessionFactoryRegistry - Registering SessionFactory: 0bd9efe3-67c2-4c5f-a084-f90e0cc7e755 (<unnamed>)
[DEBUG] 2019-10-10 13:39:10.808 [http-nio-8080-exec-9] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-10 13:39:11.065 [http-nio-8080-exec-9] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-10 13:39:11.147 [http-nio-8080-exec-9] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Weight as generatedAlias0
[DEBUG] 2019-10-10 13:39:11.198 [http-nio-8080-exec-9] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@111797d6
[DEBUG] 2019-10-10 13:39:11.280 [http-nio-8080-exec-9] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.Weight as generatedAlias0
[DEBUG] 2019-10-10 13:39:11.296 [http-nio-8080-exec-9] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-10 13:39:11.313 [http-nio-8080-exec-9] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'alexmalotky'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Weight'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-10-10 13:39:11.375 [http-nio-8080-exec-9] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-10 13:39:11.412 [http-nio-8080-exec-9] FromElement - FromClause{level=1} : com.alexmalotky.entity.Weight (generatedAlias0) -> weight0_
[DEBUG] 2019-10-10 13:39:11.413 [http-nio-8080-exec-9] FromReferenceNode - Resolved : generatedAlias0 -> weight0_.id
[DEBUG] 2019-10-10 13:39:11.416 [http-nio-8080-exec-9] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-10 13:39:11.417 [http-nio-8080-exec-9] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} weight0_.id ) ( FromClause{level=1} Weight weight0_ ) )
[DEBUG] 2019-10-10 13:39:11.439 [http-nio-8080-exec-9] JoinProcessor - Using FROM fragment [Weight weight0_]
[DEBUG] 2019-10-10 13:39:11.439 [http-nio-8080-exec-9] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-10 13:39:11.439 [http-nio-8080-exec-9] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Weight)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'weight0_.id as id1_4_' {alias=generatedAlias0, className=com.alexmalotky.entity.Weight, tableAlias=weight0_}
    |  \-[SQL_TOKEN] SqlFragment: 'weight0_.code as code2_4_, weight0_.name as name3_4_, weight0_.value as value4_4_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[weight0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Weight weight0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Weight,tableAlias=weight0_,origin=null,columns={,className=com.alexmalotky.entity.Weight}}

[DEBUG] 2019-10-10 13:39:11.440 [http-nio-8080-exec-9] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-10 13:39:11.452 [http-nio-8080-exec-9] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.Weight as generatedAlias0
[DEBUG] 2019-10-10 13:39:11.452 [http-nio-8080-exec-9] QueryTranslatorImpl - SQL: select weight0_.id as id1_4_, weight0_.code as code2_4_, weight0_.name as name3_4_, weight0_.value as value4_4_ from Weight weight0_
[DEBUG] 2019-10-10 13:39:11.452 [http-nio-8080-exec-9] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-10 13:39:11.486 [http-nio-8080-exec-9] SQL - select weight0_.id as id1_4_, weight0_.code as code2_4_, weight0_.name as name3_4_, weight0_.value as value4_4_ from Weight weight0_
[DEBUG] 2019-10-10 13:39:11.528 [http-nio-8080-exec-9] Loader - Result set row: 0
[DEBUG] 2019-10-10 13:39:11.535 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.alexmalotky.entity.Weight#0]
[DEBUG] 2019-10-10 13:39:11.551 [http-nio-8080-exec-9] Loader - Result set row: 1
[DEBUG] 2019-10-10 13:39:11.551 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.alexmalotky.entity.Weight#1]
[DEBUG] 2019-10-10 13:39:11.552 [http-nio-8080-exec-9] Loader - Result set row: 2
[DEBUG] 2019-10-10 13:39:11.552 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.alexmalotky.entity.Weight#2]
[DEBUG] 2019-10-10 13:39:11.552 [http-nio-8080-exec-9] Loader - Result set row: 3
[DEBUG] 2019-10-10 13:39:11.552 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.alexmalotky.entity.Weight#3]
[DEBUG] 2019-10-10 13:39:11.552 [http-nio-8080-exec-9] Loader - Result set row: 4
[DEBUG] 2019-10-10 13:39:11.552 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.alexmalotky.entity.Weight#4]
[DEBUG] 2019-10-10 13:39:11.556 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Weight#0]
[DEBUG] 2019-10-10 13:39:11.558 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `code` : value = mg
[DEBUG] 2019-10-10 13:39:11.558 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.558 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Milligram
[DEBUG] 2019-10-10 13:39:11.558 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.558 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `value` : value = 1.0
[DEBUG] 2019-10-10 13:39:11.558 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.561 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Weight#0]
[DEBUG] 2019-10-10 13:39:11.561 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Weight#1]
[DEBUG] 2019-10-10 13:39:11.561 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `code` : value = g
[DEBUG] 2019-10-10 13:39:11.561 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.561 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Gram
[DEBUG] 2019-10-10 13:39:11.561 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.561 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `value` : value = 1000.0
[DEBUG] 2019-10-10 13:39:11.561 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.562 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Weight#1]
[DEBUG] 2019-10-10 13:39:11.562 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Weight#2]
[DEBUG] 2019-10-10 13:39:11.562 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `code` : value = kg
[DEBUG] 2019-10-10 13:39:11.562 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.562 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Kilogram
[DEBUG] 2019-10-10 13:39:11.562 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.562 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `value` : value = 1000000.0
[DEBUG] 2019-10-10 13:39:11.562 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.562 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Weight#2]
[DEBUG] 2019-10-10 13:39:11.562 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Weight#3]
[DEBUG] 2019-10-10 13:39:11.562 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `code` : value = oz
[DEBUG] 2019-10-10 13:39:11.563 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.563 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Ounce
[DEBUG] 2019-10-10 13:39:11.563 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.563 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `value` : value = 28349.5
[DEBUG] 2019-10-10 13:39:11.563 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.563 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Weight#3]
[DEBUG] 2019-10-10 13:39:11.563 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Weight#4]
[DEBUG] 2019-10-10 13:39:11.563 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `code` : value = lbs
[DEBUG] 2019-10-10 13:39:11.563 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.563 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Pound
[DEBUG] 2019-10-10 13:39:11.563 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.563 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `value` : value = 453592.0
[DEBUG] 2019-10-10 13:39:11.563 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.564 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Weight#4]
[DEBUG] 2019-10-10 13:39:11.569 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-10 13:39:11.581 [http-nio-8080-exec-9] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Volume as generatedAlias0
[DEBUG] 2019-10-10 13:39:11.582 [http-nio-8080-exec-9] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.Volume as generatedAlias0
[DEBUG] 2019-10-10 13:39:11.584 [http-nio-8080-exec-9] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-10 13:39:11.585 [http-nio-8080-exec-9] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'alexmalotky'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Volume'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-10-10 13:39:11.585 [http-nio-8080-exec-9] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-10 13:39:11.585 [http-nio-8080-exec-9] FromElement - FromClause{level=1} : com.alexmalotky.entity.Volume (generatedAlias0) -> volume0_
[DEBUG] 2019-10-10 13:39:11.586 [http-nio-8080-exec-9] FromReferenceNode - Resolved : generatedAlias0 -> volume0_.id
[DEBUG] 2019-10-10 13:39:11.586 [http-nio-8080-exec-9] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-10 13:39:11.586 [http-nio-8080-exec-9] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} volume0_.id ) ( FromClause{level=1} Volume volume0_ ) )
[DEBUG] 2019-10-10 13:39:11.586 [http-nio-8080-exec-9] JoinProcessor - Using FROM fragment [Volume volume0_]
[DEBUG] 2019-10-10 13:39:11.586 [http-nio-8080-exec-9] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-10 13:39:11.586 [http-nio-8080-exec-9] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Volume)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'volume0_.id as id1_3_' {alias=generatedAlias0, className=com.alexmalotky.entity.Volume, tableAlias=volume0_}
    |  \-[SQL_TOKEN] SqlFragment: 'volume0_.code as code2_3_, volume0_.name as name3_3_, volume0_.value as value4_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[volume0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Volume volume0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Volume,tableAlias=volume0_,origin=null,columns={,className=com.alexmalotky.entity.Volume}}

[DEBUG] 2019-10-10 13:39:11.586 [http-nio-8080-exec-9] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-10 13:39:11.586 [http-nio-8080-exec-9] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.Volume as generatedAlias0
[DEBUG] 2019-10-10 13:39:11.587 [http-nio-8080-exec-9] QueryTranslatorImpl - SQL: select volume0_.id as id1_3_, volume0_.code as code2_3_, volume0_.name as name3_3_, volume0_.value as value4_3_ from Volume volume0_
[DEBUG] 2019-10-10 13:39:11.587 [http-nio-8080-exec-9] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-10 13:39:11.587 [http-nio-8080-exec-9] SQL - select volume0_.id as id1_3_, volume0_.code as code2_3_, volume0_.name as name3_3_, volume0_.value as value4_3_ from Volume volume0_
[DEBUG] 2019-10-10 13:39:11.590 [http-nio-8080-exec-9] Loader - Result set row: 0
[DEBUG] 2019-10-10 13:39:11.590 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.alexmalotky.entity.Volume#0]
[DEBUG] 2019-10-10 13:39:11.591 [http-nio-8080-exec-9] Loader - Result set row: 1
[DEBUG] 2019-10-10 13:39:11.591 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.alexmalotky.entity.Volume#1]
[DEBUG] 2019-10-10 13:39:11.591 [http-nio-8080-exec-9] Loader - Result set row: 2
[DEBUG] 2019-10-10 13:39:11.591 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.alexmalotky.entity.Volume#2]
[DEBUG] 2019-10-10 13:39:11.592 [http-nio-8080-exec-9] Loader - Result set row: 3
[DEBUG] 2019-10-10 13:39:11.592 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.alexmalotky.entity.Volume#3]
[DEBUG] 2019-10-10 13:39:11.592 [http-nio-8080-exec-9] Loader - Result set row: 4
[DEBUG] 2019-10-10 13:39:11.592 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.alexmalotky.entity.Volume#4]
[DEBUG] 2019-10-10 13:39:11.592 [http-nio-8080-exec-9] Loader - Result set row: 5
[DEBUG] 2019-10-10 13:39:11.592 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.alexmalotky.entity.Volume#5]
[DEBUG] 2019-10-10 13:39:11.593 [http-nio-8080-exec-9] Loader - Result set row: 6
[DEBUG] 2019-10-10 13:39:11.593 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.alexmalotky.entity.Volume#6]
[DEBUG] 2019-10-10 13:39:11.593 [http-nio-8080-exec-9] Loader - Result set row: 7
[DEBUG] 2019-10-10 13:39:11.593 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.alexmalotky.entity.Volume#7]
[DEBUG] 2019-10-10 13:39:11.593 [http-nio-8080-exec-9] Loader - Result set row: 8
[DEBUG] 2019-10-10 13:39:11.593 [http-nio-8080-exec-9] Loader - Result row: EntityKey[com.alexmalotky.entity.Volume#8]
[DEBUG] 2019-10-10 13:39:11.594 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Volume#0]
[DEBUG] 2019-10-10 13:39:11.594 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `code` : value = tsp
[DEBUG] 2019-10-10 13:39:11.594 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.594 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Teaspoon
[DEBUG] 2019-10-10 13:39:11.594 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.594 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `value` : value = 1.0
[DEBUG] 2019-10-10 13:39:11.594 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.594 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Volume#0]
[DEBUG] 2019-10-10 13:39:11.594 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Volume#1]
[DEBUG] 2019-10-10 13:39:11.594 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `code` : value = Tsp
[DEBUG] 2019-10-10 13:39:11.594 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.594 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Tablespoon
[DEBUG] 2019-10-10 13:39:11.595 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.595 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `value` : value = 3.0
[DEBUG] 2019-10-10 13:39:11.595 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.595 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Volume#1]
[DEBUG] 2019-10-10 13:39:11.595 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Volume#2]
[DEBUG] 2019-10-10 13:39:11.595 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `code` : value = foz
[DEBUG] 2019-10-10 13:39:11.595 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.595 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Fluid Ounce
[DEBUG] 2019-10-10 13:39:11.595 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.595 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `value` : value = 6.0
[DEBUG] 2019-10-10 13:39:11.595 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.595 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Volume#2]
[DEBUG] 2019-10-10 13:39:11.595 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Volume#3]
[DEBUG] 2019-10-10 13:39:11.595 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `code` : value = c
[DEBUG] 2019-10-10 13:39:11.595 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.595 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Cup
[DEBUG] 2019-10-10 13:39:11.595 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.595 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `value` : value = 48.6922
[DEBUG] 2019-10-10 13:39:11.595 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.596 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Volume#3]
[DEBUG] 2019-10-10 13:39:11.596 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Volume#4]
[DEBUG] 2019-10-10 13:39:11.596 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `code` : value = p
[DEBUG] 2019-10-10 13:39:11.596 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.596 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Pint
[DEBUG] 2019-10-10 13:39:11.596 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.596 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `value` : value = 96.0
[DEBUG] 2019-10-10 13:39:11.596 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.596 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Volume#4]
[DEBUG] 2019-10-10 13:39:11.596 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Volume#5]
[DEBUG] 2019-10-10 13:39:11.596 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `code` : value = q
[DEBUG] 2019-10-10 13:39:11.596 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.596 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Quart
[DEBUG] 2019-10-10 13:39:11.596 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.596 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `value` : value = 192.0
[DEBUG] 2019-10-10 13:39:11.596 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.597 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Volume#5]
[DEBUG] 2019-10-10 13:39:11.597 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Volume#6]
[DEBUG] 2019-10-10 13:39:11.597 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `code` : value = g
[DEBUG] 2019-10-10 13:39:11.597 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.597 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Gallon
[DEBUG] 2019-10-10 13:39:11.597 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.597 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `value` : value = 768.0
[DEBUG] 2019-10-10 13:39:11.597 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.597 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Volume#6]
[DEBUG] 2019-10-10 13:39:11.597 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Volume#7]
[DEBUG] 2019-10-10 13:39:11.597 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `code` : value = mL
[DEBUG] 2019-10-10 13:39:11.597 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.597 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Milliliter
[DEBUG] 2019-10-10 13:39:11.598 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.598 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `value` : value = 0.202884
[DEBUG] 2019-10-10 13:39:11.598 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.598 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Volume#7]
[DEBUG] 2019-10-10 13:39:11.598 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Volume#8]
[DEBUG] 2019-10-10 13:39:11.598 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `code` : value = L
[DEBUG] 2019-10-10 13:39:11.598 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.598 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Liter
[DEBUG] 2019-10-10 13:39:11.598 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.598 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `value` : value = 202.884
[DEBUG] 2019-10-10 13:39:11.598 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.598 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Volume#8]
[DEBUG] 2019-10-10 13:39:11.599 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-10 13:39:11.617 [http-nio-8080-exec-9] SQL - select recipe0_.id as id1_1_0_, recipe0_.directions as directio2_1_0_, recipe0_.ingredients as ingredie3_1_0_, recipe0_.name as name4_1_0_, recipe0_.public as public5_1_0_, recipe0_.user_id as user_id6_1_0_, user1_.id as id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.user_name as user_nam6_2_1_, favorites2_.user_id as user_id3_0_2_, recipe3_.id as recipe_i2_0_2_, recipe3_.id as id1_1_3_, recipe3_.directions as directio2_1_3_, recipe3_.ingredients as ingredie3_1_3_, recipe3_.name as name4_1_3_, recipe3_.public as public5_1_3_, recipe3_.user_id as user_id6_1_3_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id left outer join favorites favorites2_ on user1_.id=favorites2_.user_id left outer join recipes recipe3_ on favorites2_.recipe_id=recipe3_.id where recipe0_.id=?
[DEBUG] 2019-10-10 13:39:11.629 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-10 13:39:11.631 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-10 13:39:11.635 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.favorites#2]
[DEBUG] 2019-10-10 13:39:11.653 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-10 13:39:11.653 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-10 13:39:11.653 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.favorites#2]
[DEBUG] 2019-10-10 13:39:11.654 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-10-10 13:39:11.654 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-10 13:39:11.654 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.favorites#2]
[DEBUG] 2019-10-10 13:39:11.654 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-10 13:39:11.654 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `directions` : value = ["Instruction 1","Instruction 2"]
[DEBUG] 2019-10-10 13:39:11.654 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.654 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `ingredients` : value = ["{\"amount\":\"20\",\"unit\":\"oz\",\"item\":\"Ingredient 1\"}","{\"amount\":\"5\",\"unit\":\"lbs\",\"item\":\"Ingredient 2\"}","{\"amount\":\"3\",\"unit\":\"\",\"item\":\"apples\"}"]
[DEBUG] 2019-10-10 13:39:11.654 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.654 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-10 13:39:11.654 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.654 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-10 13:39:11.654 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.655 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-10 13:39:11.655 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.655 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-10 13:39:11.655 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-10 13:39:11.655 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-10 13:39:11.655 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.655 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `favorites` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-10 13:39:11.655 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`favorites`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.655 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-10 13:39:11.655 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.655 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-10 13:39:11.655 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.655 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `password` : value = $2a$10$jESJRbXmyrANHXsmxqeSM.4.pINwRnb7VOw0e6iiXqcLAl2EEP9Y.
[DEBUG] 2019-10-10 13:39:11.655 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.655 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-10 13:39:11.655 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.659 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `userName` : value = ajmalotky
[DEBUG] 2019-10-10 13:39:11.659 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.659 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-10 13:39:11.659 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-10 13:39:11.659 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-10 13:39:11.659 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.659 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-10 13:39:11.659 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.659 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-10 13:39:11.659 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.659 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-10 13:39:11.659 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.659 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-10 13:39:11.659 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.660 [http-nio-8080-exec-9] SQL - select user0_.id as id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.user_name as user_nam6_2_0_, favorites1_.user_id as user_id3_0_1_, recipe2_.id as recipe_i2_0_1_, recipe2_.id as id1_1_2_, recipe2_.directions as directio2_1_2_, recipe2_.ingredients as ingredie3_1_2_, recipe2_.name as name4_1_2_, recipe2_.public as public5_1_2_, recipe2_.user_id as user_id6_1_2_, user3_.id as id1_2_3_, user3_.email as email2_2_3_, user3_.first_name as first_na3_2_3_, user3_.last_name as last_nam4_2_3_, user3_.password as password5_2_3_, user3_.user_name as user_nam6_2_3_ from users user0_ left outer join favorites favorites1_ on user0_.id=favorites1_.user_id left outer join recipes recipe2_ on favorites1_.recipe_id=recipe2_.id left outer join users user3_ on recipe2_.user_id=user3_.id where user0_.id=?
[DEBUG] 2019-10-10 13:39:11.663 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-10 13:39:11.663 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-10 13:39:11.663 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.favorites#1]
[DEBUG] 2019-10-10 13:39:11.664 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-10 13:39:11.664 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-10 13:39:11.664 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.favorites#1]
[DEBUG] 2019-10-10 13:39:11.664 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-10 13:39:11.664 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-10 13:39:11.664 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.664 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `favorites` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-10 13:39:11.664 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`favorites`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.664 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-10 13:39:11.664 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.664 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-10 13:39:11.664 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.664 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2019-10-10 13:39:11.664 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.664 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-10 13:39:11.665 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.665 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-10 13:39:11.665 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.665 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-10 13:39:11.665 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.favorites
[DEBUG] 2019-10-10 13:39:11.665 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.favorites#1]
[DEBUG] 2019-10-10 13:39:11.665 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.favorites
[DEBUG] 2019-10-10 13:39:11.666 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-10 13:39:11.666 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-10 13:39:11.666 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-10 13:39:11.666 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-10 13:39:11.666 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-10 13:39:11.666 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.666 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-10 13:39:11.666 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.666 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-10 13:39:11.666 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.666 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-10 13:39:11.666 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.666 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-10 13:39:11.666 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:11.666 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-10 13:39:11.667 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.favorites
[DEBUG] 2019-10-10 13:39:11.667 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.favorites#2]
[DEBUG] 2019-10-10 13:39:11.667 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.favorites
[DEBUG] 2019-10-10 13:39:11.667 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-10 13:39:11.671 [http-nio-8080-exec-9] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-10 13:39:11.672 [http-nio-8080-exec-9] SQL - select recipes0_.user_id as user_id6_1_0_, recipes0_.id as id1_1_0_, recipes0_.id as id1_1_1_, recipes0_.directions as directio2_1_1_, recipes0_.ingredients as ingredie3_1_1_, recipes0_.name as name4_1_1_, recipes0_.public as public5_1_1_, recipes0_.user_id as user_id6_1_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-10 13:39:11.673 [http-nio-8080-exec-9] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-10 13:39:11.674 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-10 13:39:11.674 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-10 13:39:11.674 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-10 13:39:11.674 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-10 13:39:11.674 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-10 13:39:11.675 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-10 13:39:11.675 [http-nio-8080-exec-9] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-10 13:39:11.675 [http-nio-8080-exec-9] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-10 13:39:11.675 [http-nio-8080-exec-9] SQL - select recipes0_.user_id as user_id6_1_0_, recipes0_.id as id1_1_0_, recipes0_.id as id1_1_1_, recipes0_.directions as directio2_1_1_, recipes0_.ingredients as ingredie3_1_1_, recipes0_.name as name4_1_1_, recipes0_.public as public5_1_1_, recipes0_.user_id as user_id6_1_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-10 13:39:11.677 [http-nio-8080-exec-9] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-10 13:39:11.677 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-10 13:39:11.677 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-10 13:39:11.677 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-10 13:39:11.677 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-10 13:39:11.677 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-10 13:39:11.678 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-10 13:39:11.678 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-10 13:39:11.678 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-10 13:39:11.678 [http-nio-8080-exec-9] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-10 13:39:11.678 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-10 13:39:11.678 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-10 13:39:18.436 [http-nio-8080-exec-1] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2019-10-10 13:39:18.436 [http-nio-8080-exec-1] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2019-10-10 13:39:18.438 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-10 13:39:18.439 [http-nio-8080-exec-1] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'alexmalotky'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-10-10 13:39:18.439 [http-nio-8080-exec-1] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-10 13:39:18.439 [http-nio-8080-exec-1] FromElement - FromClause{level=1} : com.alexmalotky.entity.User (generatedAlias0) -> user0_
[DEBUG] 2019-10-10 13:39:18.440 [http-nio-8080-exec-1] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-10-10 13:39:18.447 [http-nio-8080-exec-1] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-10-10 13:39:18.450 [http-nio-8080-exec-1] DotNode - getDataType() : userName -> org.hibernate.type.StringType@73f74b53
[DEBUG] 2019-10-10 13:39:18.451 [http-nio-8080-exec-1] FromReferenceNode - Resolved : generatedAlias0.userName -> user0_.user_name
[DEBUG] 2019-10-10 13:39:18.456 [http-nio-8080-exec-1] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-10 13:39:18.456 [http-nio-8080-exec-1] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.user_name user0_.id userName ) ? ) ) )
[DEBUG] 2019-10-10 13:39:18.457 [http-nio-8080-exec-1] JoinProcessor - Using FROM fragment [users user0_]
[DEBUG] 2019-10-10 13:39:18.457 [http-nio-8080-exec-1] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-10 13:39:18.458 [http-nio-8080-exec-1] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=generatedAlias0, className=com.alexmalotky.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.user_name as user_nam6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.alexmalotky.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_name' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=generatedAlias0.userName,tableAlias=user0_,className=com.alexmalotky.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=com.alexmalotky.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@73f74b53}

[DEBUG] 2019-10-10 13:39:18.459 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-10 13:39:18.459 [http-nio-8080-exec-1] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2019-10-10 13:39:18.459 [http-nio-8080-exec-1] QueryTranslatorImpl - SQL: select user0_.id as id1_2_, user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.user_name as user_nam6_2_ from users user0_ where user0_.user_name=?
[DEBUG] 2019-10-10 13:39:18.459 [http-nio-8080-exec-1] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-10 13:39:18.473 [http-nio-8080-exec-1] SQL - select user0_.id as id1_2_, user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.user_name as user_nam6_2_ from users user0_ where user0_.user_name=?
[DEBUG] 2019-10-10 13:39:18.479 [http-nio-8080-exec-1] Loader - Result set row: 0
[DEBUG] 2019-10-10 13:39:18.480 [http-nio-8080-exec-1] Loader - Result row: EntityKey[com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-10 13:39:18.480 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-10 13:39:18.480 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-10 13:39:18.480 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.480 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `favorites` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-10 13:39:18.480 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`favorites`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.480 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-10 13:39:18.480 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.480 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-10 13:39:18.480 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.481 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = $2a$10$jESJRbXmyrANHXsmxqeSM.4.pINwRnb7VOw0e6iiXqcLAl2EEP9Y.
[DEBUG] 2019-10-10 13:39:18.481 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.481 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-10 13:39:18.481 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.481 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = ajmalotky
[DEBUG] 2019-10-10 13:39:18.481 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.481 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-10 13:39:18.481 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-10 13:39:18.481 [http-nio-8080-exec-1] SQL - select recipes0_.user_id as user_id6_1_0_, recipes0_.id as id1_1_0_, recipes0_.id as id1_1_1_, recipes0_.directions as directio2_1_1_, recipes0_.ingredients as ingredie3_1_1_, recipes0_.name as name4_1_1_, recipes0_.public as public5_1_1_, recipes0_.user_id as user_id6_1_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-10 13:39:18.483 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-10 13:39:18.483 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-10 13:39:18.484 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-10 13:39:18.484 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-10 13:39:18.485 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-10 13:39:18.485 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-10 13:39:18.485 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-10 13:39:18.485 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.485 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-10 13:39:18.485 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.485 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-10 13:39:18.485 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.485 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-10 13:39:18.485 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.485 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-10 13:39:18.485 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.486 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-10 13:39:18.486 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-10 13:39:18.486 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `directions` : value = ["Instruction 1","Instruction 2"]
[DEBUG] 2019-10-10 13:39:18.486 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.486 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `ingredients` : value = ["{\"amount\":\"20\",\"unit\":\"oz\",\"item\":\"Ingredient 1\"}","{\"amount\":\"5\",\"unit\":\"lbs\",\"item\":\"Ingredient 2\"}","{\"amount\":\"3\",\"unit\":\"\",\"item\":\"apples\"}"]
[DEBUG] 2019-10-10 13:39:18.486 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.486 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-10 13:39:18.486 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.486 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-10 13:39:18.486 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.486 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-10 13:39:18.486 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.486 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-10 13:39:18.486 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-10 13:39:18.487 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-10 13:39:18.487 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-10 13:39:18.487 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-10 13:39:18.487 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-10 13:39:18.487 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.favorites#2]
[DEBUG] 2019-10-10 13:39:18.487 [http-nio-8080-exec-1] SQL - select favorites0_.user_id as user_id3_0_0_, favorites0_.recipe_id as recipe_i2_0_0_, recipe1_.id as id1_1_1_, recipe1_.directions as directio2_1_1_, recipe1_.ingredients as ingredie3_1_1_, recipe1_.name as name4_1_1_, recipe1_.public as public5_1_1_, recipe1_.user_id as user_id6_1_1_, user2_.id as id1_2_2_, user2_.email as email2_2_2_, user2_.first_name as first_na3_2_2_, user2_.last_name as last_nam4_2_2_, user2_.password as password5_2_2_, user2_.user_name as user_nam6_2_2_ from favorites favorites0_ inner join recipes recipe1_ on favorites0_.recipe_id=recipe1_.id left outer join users user2_ on recipe1_.user_id=user2_.id where favorites0_.user_id=?
[DEBUG] 2019-10-10 13:39:18.490 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.favorites#2]
[DEBUG] 2019-10-10 13:39:18.490 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-10 13:39:18.491 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.favorites#2]
[DEBUG] 2019-10-10 13:39:18.492 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-10 13:39:18.492 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.favorites#2]
[DEBUG] 2019-10-10 13:39:18.492 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-10-10 13:39:18.492 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.favorites#2]
[DEBUG] 2019-10-10 13:39:18.493 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-10 13:39:18.493 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-10 13:39:18.493 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.493 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-10 13:39:18.493 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.493 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-10 13:39:18.493 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.493 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-10 13:39:18.493 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.493 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-10 13:39:18.493 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.494 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-10 13:39:18.494 [http-nio-8080-exec-1] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-10 13:39:18.494 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-10 13:39:18.494 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.494 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `favorites` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-10 13:39:18.494 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`favorites`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.494 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-10 13:39:18.494 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.494 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-10 13:39:18.494 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.495 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2019-10-10 13:39:18.495 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.495 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-10 13:39:18.495 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.495 [http-nio-8080-exec-1] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-10 13:39:18.495 [http-nio-8080-exec-1] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.495 [http-nio-8080-exec-1] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-10 13:39:18.495 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.favorites
[DEBUG] 2019-10-10 13:39:18.496 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.favorites#2]
[DEBUG] 2019-10-10 13:39:18.496 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.favorites
[DEBUG] 2019-10-10 13:39:18.496 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-10 13:39:18.496 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-10 13:39:18.496 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-10 13:39:18.497 [http-nio-8080-exec-1] SQL - select recipes0_.user_id as user_id6_1_0_, recipes0_.id as id1_1_0_, recipes0_.id as id1_1_1_, recipes0_.directions as directio2_1_1_, recipes0_.ingredients as ingredie3_1_1_, recipes0_.name as name4_1_1_, recipes0_.public as public5_1_1_, recipes0_.user_id as user_id6_1_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-10 13:39:18.498 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-10 13:39:18.499 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-10 13:39:18.499 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-10 13:39:18.499 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-10 13:39:18.499 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-10 13:39:18.499 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-10 13:39:18.499 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-10 13:39:18.499 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-10 13:39:18.500 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.favorites#1]
[DEBUG] 2019-10-10 13:39:18.500 [http-nio-8080-exec-1] SQL - select favorites0_.user_id as user_id3_0_0_, favorites0_.recipe_id as recipe_i2_0_0_, recipe1_.id as id1_1_1_, recipe1_.directions as directio2_1_1_, recipe1_.ingredients as ingredie3_1_1_, recipe1_.name as name4_1_1_, recipe1_.public as public5_1_1_, recipe1_.user_id as user_id6_1_1_, user2_.id as id1_2_2_, user2_.email as email2_2_2_, user2_.first_name as first_na3_2_2_, user2_.last_name as last_nam4_2_2_, user2_.password as password5_2_2_, user2_.user_name as user_nam6_2_2_ from favorites favorites0_ inner join recipes recipe1_ on favorites0_.recipe_id=recipe1_.id left outer join users user2_ on recipe1_.user_id=user2_.id where favorites0_.user_id=?
[DEBUG] 2019-10-10 13:39:18.502 [http-nio-8080-exec-1] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.favorites#1]
[DEBUG] 2019-10-10 13:39:18.502 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-10 13:39:18.502 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.favorites#1]
[DEBUG] 2019-10-10 13:39:18.503 [http-nio-8080-exec-1] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-10 13:39:18.503 [http-nio-8080-exec-1] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.favorites#1]
[DEBUG] 2019-10-10 13:39:18.503 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.favorites
[DEBUG] 2019-10-10 13:39:18.503 [http-nio-8080-exec-1] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.favorites#1]
[DEBUG] 2019-10-10 13:39:18.503 [http-nio-8080-exec-1] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.favorites
[DEBUG] 2019-10-10 13:39:18.503 [http-nio-8080-exec-1] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-10 13:39:18.503 [http-nio-8080-exec-1] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-10 13:39:18.503 [http-nio-8080-exec-1] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-10 13:39:18.671 [http-nio-8080-exec-2] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Weight as generatedAlias0
[DEBUG] 2019-10-10 13:39:18.671 [http-nio-8080-exec-2] SQL - select weight0_.id as id1_4_, weight0_.code as code2_4_, weight0_.name as name3_4_, weight0_.value as value4_4_ from Weight weight0_
[DEBUG] 2019-10-10 13:39:18.673 [http-nio-8080-exec-2] Loader - Result set row: 0
[DEBUG] 2019-10-10 13:39:18.674 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.alexmalotky.entity.Weight#0]
[DEBUG] 2019-10-10 13:39:18.674 [http-nio-8080-exec-2] Loader - Result set row: 1
[DEBUG] 2019-10-10 13:39:18.674 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.alexmalotky.entity.Weight#1]
[DEBUG] 2019-10-10 13:39:18.674 [http-nio-8080-exec-2] Loader - Result set row: 2
[DEBUG] 2019-10-10 13:39:18.674 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.alexmalotky.entity.Weight#2]
[DEBUG] 2019-10-10 13:39:18.674 [http-nio-8080-exec-2] Loader - Result set row: 3
[DEBUG] 2019-10-10 13:39:18.674 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.alexmalotky.entity.Weight#3]
[DEBUG] 2019-10-10 13:39:18.675 [http-nio-8080-exec-2] Loader - Result set row: 4
[DEBUG] 2019-10-10 13:39:18.675 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.alexmalotky.entity.Weight#4]
[DEBUG] 2019-10-10 13:39:18.675 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Weight#0]
[DEBUG] 2019-10-10 13:39:18.675 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `code` : value = mg
[DEBUG] 2019-10-10 13:39:18.675 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.675 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Milligram
[DEBUG] 2019-10-10 13:39:18.675 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.675 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `value` : value = 1.0
[DEBUG] 2019-10-10 13:39:18.675 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.676 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Weight#0]
[DEBUG] 2019-10-10 13:39:18.676 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Weight#1]
[DEBUG] 2019-10-10 13:39:18.676 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `code` : value = g
[DEBUG] 2019-10-10 13:39:18.676 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.676 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Gram
[DEBUG] 2019-10-10 13:39:18.676 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.676 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `value` : value = 1000.0
[DEBUG] 2019-10-10 13:39:18.676 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.676 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Weight#1]
[DEBUG] 2019-10-10 13:39:18.676 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Weight#2]
[DEBUG] 2019-10-10 13:39:18.676 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `code` : value = kg
[DEBUG] 2019-10-10 13:39:18.676 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.676 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Kilogram
[DEBUG] 2019-10-10 13:39:18.676 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.676 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `value` : value = 1000000.0
[DEBUG] 2019-10-10 13:39:18.676 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.676 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Weight#2]
[DEBUG] 2019-10-10 13:39:18.677 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Weight#3]
[DEBUG] 2019-10-10 13:39:18.677 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `code` : value = oz
[DEBUG] 2019-10-10 13:39:18.677 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.677 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Ounce
[DEBUG] 2019-10-10 13:39:18.677 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.677 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `value` : value = 28349.5
[DEBUG] 2019-10-10 13:39:18.677 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.677 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Weight#3]
[DEBUG] 2019-10-10 13:39:18.677 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Weight#4]
[DEBUG] 2019-10-10 13:39:18.677 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `code` : value = lbs
[DEBUG] 2019-10-10 13:39:18.677 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.677 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Pound
[DEBUG] 2019-10-10 13:39:18.677 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.677 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `value` : value = 453592.0
[DEBUG] 2019-10-10 13:39:18.677 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.677 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Weight#4]
[DEBUG] 2019-10-10 13:39:18.677 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-10 13:39:18.679 [http-nio-8080-exec-2] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Volume as generatedAlias0
[DEBUG] 2019-10-10 13:39:18.679 [http-nio-8080-exec-2] SQL - select volume0_.id as id1_3_, volume0_.code as code2_3_, volume0_.name as name3_3_, volume0_.value as value4_3_ from Volume volume0_
[DEBUG] 2019-10-10 13:39:18.680 [http-nio-8080-exec-2] Loader - Result set row: 0
[DEBUG] 2019-10-10 13:39:18.681 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.alexmalotky.entity.Volume#0]
[DEBUG] 2019-10-10 13:39:18.681 [http-nio-8080-exec-2] Loader - Result set row: 1
[DEBUG] 2019-10-10 13:39:18.681 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.alexmalotky.entity.Volume#1]
[DEBUG] 2019-10-10 13:39:18.681 [http-nio-8080-exec-2] Loader - Result set row: 2
[DEBUG] 2019-10-10 13:39:18.681 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.alexmalotky.entity.Volume#2]
[DEBUG] 2019-10-10 13:39:18.681 [http-nio-8080-exec-2] Loader - Result set row: 3
[DEBUG] 2019-10-10 13:39:18.681 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.alexmalotky.entity.Volume#3]
[DEBUG] 2019-10-10 13:39:18.681 [http-nio-8080-exec-2] Loader - Result set row: 4
[DEBUG] 2019-10-10 13:39:18.681 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.alexmalotky.entity.Volume#4]
[DEBUG] 2019-10-10 13:39:18.681 [http-nio-8080-exec-2] Loader - Result set row: 5
[DEBUG] 2019-10-10 13:39:18.682 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.alexmalotky.entity.Volume#5]
[DEBUG] 2019-10-10 13:39:18.682 [http-nio-8080-exec-2] Loader - Result set row: 6
[DEBUG] 2019-10-10 13:39:18.682 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.alexmalotky.entity.Volume#6]
[DEBUG] 2019-10-10 13:39:18.682 [http-nio-8080-exec-2] Loader - Result set row: 7
[DEBUG] 2019-10-10 13:39:18.682 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.alexmalotky.entity.Volume#7]
[DEBUG] 2019-10-10 13:39:18.682 [http-nio-8080-exec-2] Loader - Result set row: 8
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] Loader - Result row: EntityKey[com.alexmalotky.entity.Volume#8]
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Volume#0]
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `code` : value = tsp
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Teaspoon
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `value` : value = 1.0
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Volume#0]
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Volume#1]
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `code` : value = Tsp
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Tablespoon
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `value` : value = 3.0
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Volume#1]
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Volume#2]
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `code` : value = foz
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.683 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Fluid Ounce
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `value` : value = 6.0
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Volume#2]
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Volume#3]
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `code` : value = c
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Cup
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `value` : value = 48.6922
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Volume#3]
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Volume#4]
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `code` : value = p
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Pint
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `value` : value = 96.0
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Volume#4]
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Volume#5]
[DEBUG] 2019-10-10 13:39:18.684 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `code` : value = q
[DEBUG] 2019-10-10 13:39:18.685 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.685 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Quart
[DEBUG] 2019-10-10 13:39:18.685 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.685 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `value` : value = 192.0
[DEBUG] 2019-10-10 13:39:18.685 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.685 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Volume#5]
[DEBUG] 2019-10-10 13:39:18.685 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Volume#6]
[DEBUG] 2019-10-10 13:39:18.685 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `code` : value = g
[DEBUG] 2019-10-10 13:39:18.685 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.685 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Gallon
[DEBUG] 2019-10-10 13:39:18.685 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.685 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `value` : value = 768.0
[DEBUG] 2019-10-10 13:39:18.685 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.685 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Volume#6]
[DEBUG] 2019-10-10 13:39:18.685 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Volume#7]
[DEBUG] 2019-10-10 13:39:18.685 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `code` : value = mL
[DEBUG] 2019-10-10 13:39:18.686 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.686 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Milliliter
[DEBUG] 2019-10-10 13:39:18.686 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.686 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `value` : value = 0.202884
[DEBUG] 2019-10-10 13:39:18.686 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.686 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Volume#7]
[DEBUG] 2019-10-10 13:39:18.686 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Volume#8]
[DEBUG] 2019-10-10 13:39:18.686 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `code` : value = L
[DEBUG] 2019-10-10 13:39:18.686 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`code`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.686 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Liter
[DEBUG] 2019-10-10 13:39:18.686 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.686 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `value` : value = 202.884
[DEBUG] 2019-10-10 13:39:18.686 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`value`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.686 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Volume#8]
[DEBUG] 2019-10-10 13:39:18.687 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-10 13:39:18.688 [http-nio-8080-exec-2] SQL - select recipe0_.id as id1_1_0_, recipe0_.directions as directio2_1_0_, recipe0_.ingredients as ingredie3_1_0_, recipe0_.name as name4_1_0_, recipe0_.public as public5_1_0_, recipe0_.user_id as user_id6_1_0_, user1_.id as id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.user_name as user_nam6_2_1_, favorites2_.user_id as user_id3_0_2_, recipe3_.id as recipe_i2_0_2_, recipe3_.id as id1_1_3_, recipe3_.directions as directio2_1_3_, recipe3_.ingredients as ingredie3_1_3_, recipe3_.name as name4_1_3_, recipe3_.public as public5_1_3_, recipe3_.user_id as user_id6_1_3_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id left outer join favorites favorites2_ on user1_.id=favorites2_.user_id left outer join recipes recipe3_ on favorites2_.recipe_id=recipe3_.id where recipe0_.id=?
[DEBUG] 2019-10-10 13:39:18.693 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-10 13:39:18.693 [http-nio-8080-exec-2] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-10 13:39:18.694 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.favorites#2]
[DEBUG] 2019-10-10 13:39:18.694 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-10 13:39:18.694 [http-nio-8080-exec-2] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-10 13:39:18.695 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.favorites#2]
[DEBUG] 2019-10-10 13:39:18.695 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2019-10-10 13:39:18.695 [http-nio-8080-exec-2] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-10 13:39:18.695 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.favorites#2]
[DEBUG] 2019-10-10 13:39:18.695 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-10 13:39:18.695 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `directions` : value = ["Instruction 1","Instruction 2"]
[DEBUG] 2019-10-10 13:39:18.695 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.695 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `ingredients` : value = ["{\"amount\":\"20\",\"unit\":\"oz\",\"item\":\"Ingredient 1\"}","{\"amount\":\"5\",\"unit\":\"lbs\",\"item\":\"Ingredient 2\"}","{\"amount\":\"3\",\"unit\":\"\",\"item\":\"apples\"}"]
[DEBUG] 2019-10-10 13:39:18.695 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.695 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-10 13:39:18.696 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.696 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-10 13:39:18.696 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.696 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-10 13:39:18.696 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.696 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-10 13:39:18.696 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-10 13:39:18.696 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-10 13:39:18.696 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.696 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `favorites` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-10 13:39:18.696 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`favorites`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.696 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-10 13:39:18.696 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.696 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-10 13:39:18.696 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.696 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = $2a$10$jESJRbXmyrANHXsmxqeSM.4.pINwRnb7VOw0e6iiXqcLAl2EEP9Y.
[DEBUG] 2019-10-10 13:39:18.696 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.696 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-10 13:39:18.697 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.697 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `userName` : value = ajmalotky
[DEBUG] 2019-10-10 13:39:18.697 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.697 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-10 13:39:18.697 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-10 13:39:18.697 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-10 13:39:18.697 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.697 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-10 13:39:18.697 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.697 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-10 13:39:18.697 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.697 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-10 13:39:18.697 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.697 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-10 13:39:18.697 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.697 [http-nio-8080-exec-2] SQL - select user0_.id as id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.user_name as user_nam6_2_0_, favorites1_.user_id as user_id3_0_1_, recipe2_.id as recipe_i2_0_1_, recipe2_.id as id1_1_2_, recipe2_.directions as directio2_1_2_, recipe2_.ingredients as ingredie3_1_2_, recipe2_.name as name4_1_2_, recipe2_.public as public5_1_2_, recipe2_.user_id as user_id6_1_2_, user3_.id as id1_2_3_, user3_.email as email2_2_3_, user3_.first_name as first_na3_2_3_, user3_.last_name as last_nam4_2_3_, user3_.password as password5_2_3_, user3_.user_name as user_nam6_2_3_ from users user0_ left outer join favorites favorites1_ on user0_.id=favorites1_.user_id left outer join recipes recipe2_ on favorites1_.recipe_id=recipe2_.id left outer join users user3_ on recipe2_.user_id=user3_.id where user0_.id=?
[DEBUG] 2019-10-10 13:39:18.700 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-10 13:39:18.700 [http-nio-8080-exec-2] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-10 13:39:18.701 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.favorites#1]
[DEBUG] 2019-10-10 13:39:18.701 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-10 13:39:18.701 [http-nio-8080-exec-2] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-10 13:39:18.701 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.favorites#1]
[DEBUG] 2019-10-10 13:39:18.701 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-10 13:39:18.701 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-10 13:39:18.701 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.701 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `favorites` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-10 13:39:18.701 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`favorites`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.701 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-10 13:39:18.701 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.702 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-10 13:39:18.702 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.702 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `password` : value = 12345
[DEBUG] 2019-10-10 13:39:18.702 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.702 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-10 13:39:18.702 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.702 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-10 13:39:18.702 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.702 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-10 13:39:18.702 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.favorites
[DEBUG] 2019-10-10 13:39:18.702 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.favorites#1]
[DEBUG] 2019-10-10 13:39:18.702 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.favorites
[DEBUG] 2019-10-10 13:39:18.702 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-10 13:39:18.702 [http-nio-8080-exec-2] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-10 13:39:18.702 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-10 13:39:18.703 [http-nio-8080-exec-2] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-10 13:39:18.703 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-10 13:39:18.703 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.703 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-10 13:39:18.703 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.703 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-10 13:39:18.703 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.703 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-10 13:39:18.703 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.703 [http-nio-8080-exec-2] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-10 13:39:18.703 [http-nio-8080-exec-2] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-10 13:39:18.703 [http-nio-8080-exec-2] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-10 13:39:18.703 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.favorites
[DEBUG] 2019-10-10 13:39:18.703 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.favorites#2]
[DEBUG] 2019-10-10 13:39:18.703 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.favorites
[DEBUG] 2019-10-10 13:39:18.703 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-10 13:39:18.703 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-10 13:39:18.703 [http-nio-8080-exec-2] SQL - select recipes0_.user_id as user_id6_1_0_, recipes0_.id as id1_1_0_, recipes0_.id as id1_1_1_, recipes0_.directions as directio2_1_1_, recipes0_.ingredients as ingredie3_1_1_, recipes0_.name as name4_1_1_, recipes0_.public as public5_1_1_, recipes0_.user_id as user_id6_1_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-10 13:39:18.705 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-10 13:39:18.705 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-10 13:39:18.705 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-10 13:39:18.706 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-10 13:39:18.706 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-10 13:39:18.706 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-10 13:39:18.706 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-10 13:39:18.706 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-10 13:39:18.706 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-10 13:39:18.706 [http-nio-8080-exec-2] SQL - select recipes0_.user_id as user_id6_1_0_, recipes0_.id as id1_1_0_, recipes0_.id as id1_1_1_, recipes0_.directions as directio2_1_1_, recipes0_.ingredients as ingredie3_1_1_, recipes0_.name as name4_1_1_, recipes0_.public as public5_1_1_, recipes0_.user_id as user_id6_1_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-10 13:39:18.709 [http-nio-8080-exec-2] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-10 13:39:18.709 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-10 13:39:18.709 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-10 13:39:18.710 [http-nio-8080-exec-2] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-10 13:39:18.710 [http-nio-8080-exec-2] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-10 13:39:18.710 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-10 13:39:18.710 [http-nio-8080-exec-2] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-10 13:39:18.710 [http-nio-8080-exec-2] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-10 13:39:18.710 [http-nio-8080-exec-2] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-10 13:39:18.710 [http-nio-8080-exec-2] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-10 13:39:18.710 [http-nio-8080-exec-2] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-10 13:39:18.710 [http-nio-8080-exec-2] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
