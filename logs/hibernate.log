[DEBUG] 2019-10-02 11:43:59.449 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 11:43:59.453 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 11:43:59.466 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 11:43:59.710 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 11:43:59.716 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 11:44:00.273 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 11:44:00.277 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 11:44:00.289 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 11:44:00.940 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 11:44:00.988 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 11:44:00.990 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 11:44:01.043 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 11:44:01.093 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2ec3633f
[DEBUG] 2019-10-02 11:44:01.093 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2ec3633f
[DEBUG] 2019-10-02 11:44:01.094 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ec3633f
[DEBUG] 2019-10-02 11:44:01.095 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@20576557
[DEBUG] 2019-10-02 11:44:01.095 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@a7ad6e5
[DEBUG] 2019-10-02 11:44:01.096 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@475646d4
[DEBUG] 2019-10-02 11:44:01.098 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3727f0ee
[DEBUG] 2019-10-02 11:44:01.098 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3727f0ee
[DEBUG] 2019-10-02 11:44:01.098 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3727f0ee
[DEBUG] 2019-10-02 11:44:01.103 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@26221bad
[DEBUG] 2019-10-02 11:44:01.103 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@26221bad
[DEBUG] 2019-10-02 11:44:01.104 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@26221bad
[DEBUG] 2019-10-02 11:44:01.106 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@8deb645
[DEBUG] 2019-10-02 11:44:01.106 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@8deb645
[DEBUG] 2019-10-02 11:44:01.106 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@8deb645
[DEBUG] 2019-10-02 11:44:01.107 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6b52dd31
[DEBUG] 2019-10-02 11:44:01.108 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6b52dd31
[DEBUG] 2019-10-02 11:44:01.108 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6b52dd31
[DEBUG] 2019-10-02 11:44:01.109 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@14b7786
[DEBUG] 2019-10-02 11:44:01.110 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@14b7786
[DEBUG] 2019-10-02 11:44:01.110 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@14b7786
[DEBUG] 2019-10-02 11:44:01.112 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2b34e38c
[DEBUG] 2019-10-02 11:44:01.112 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2b34e38c
[DEBUG] 2019-10-02 11:44:01.112 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2b34e38c
[DEBUG] 2019-10-02 11:44:01.113 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@468dda3e
[DEBUG] 2019-10-02 11:44:01.114 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@468dda3e
[DEBUG] 2019-10-02 11:44:01.114 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@468dda3e
[DEBUG] 2019-10-02 11:44:01.115 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@67f3d192
[DEBUG] 2019-10-02 11:44:01.115 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@67f3d192
[DEBUG] 2019-10-02 11:44:01.118 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b4283c4
[DEBUG] 2019-10-02 11:44:01.118 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b4283c4
[DEBUG] 2019-10-02 11:44:01.119 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7e744f43
[DEBUG] 2019-10-02 11:44:01.120 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7e744f43
[DEBUG] 2019-10-02 11:44:01.120 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@35eb4a3b
[DEBUG] 2019-10-02 11:44:01.121 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@26b95b0b
[DEBUG] 2019-10-02 11:44:01.124 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5f172d4a
[DEBUG] 2019-10-02 11:44:01.124 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5f172d4a
[DEBUG] 2019-10-02 11:44:01.125 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@25b52284
[DEBUG] 2019-10-02 11:44:01.126 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@25b52284
[DEBUG] 2019-10-02 11:44:01.138 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@9fc9f91
[DEBUG] 2019-10-02 11:44:01.138 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@9fc9f91
[DEBUG] 2019-10-02 11:44:01.141 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@704641e3
[DEBUG] 2019-10-02 11:44:01.141 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@704641e3
[DEBUG] 2019-10-02 11:44:01.143 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2e179f3e
[DEBUG] 2019-10-02 11:44:01.143 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2e179f3e
[DEBUG] 2019-10-02 11:44:01.145 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@67b100fe
[DEBUG] 2019-10-02 11:44:01.145 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@67b100fe
[DEBUG] 2019-10-02 11:44:01.147 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@44b194fe
[DEBUG] 2019-10-02 11:44:01.147 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@44b194fe
[DEBUG] 2019-10-02 11:44:01.149 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59ed3e6c
[DEBUG] 2019-10-02 11:44:01.149 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59ed3e6c
[DEBUG] 2019-10-02 11:44:01.154 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2c7a8af2
[DEBUG] 2019-10-02 11:44:01.155 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2c7a8af2
[DEBUG] 2019-10-02 11:44:01.157 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@15383681
[DEBUG] 2019-10-02 11:44:01.157 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15383681
[DEBUG] 2019-10-02 11:44:01.159 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2133661d
[DEBUG] 2019-10-02 11:44:01.159 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2133661d
[DEBUG] 2019-10-02 11:44:01.161 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1e43e323
[DEBUG] 2019-10-02 11:44:01.161 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e43e323
[DEBUG] 2019-10-02 11:44:01.161 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e43e323
[DEBUG] 2019-10-02 11:44:01.162 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@eca6a74
[DEBUG] 2019-10-02 11:44:01.164 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@113e13f9
[DEBUG] 2019-10-02 11:44:01.164 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@113e13f9
[DEBUG] 2019-10-02 11:44:01.164 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@113e13f9
[DEBUG] 2019-10-02 11:44:01.166 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b6e5c12
[DEBUG] 2019-10-02 11:44:01.169 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4ee6291f
[DEBUG] 2019-10-02 11:44:01.169 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4ee6291f
[DEBUG] 2019-10-02 11:44:01.171 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@44e93c1f
[DEBUG] 2019-10-02 11:44:01.171 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@44e93c1f
[DEBUG] 2019-10-02 11:44:01.172 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7903d448
[DEBUG] 2019-10-02 11:44:01.172 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7903d448
[DEBUG] 2019-10-02 11:44:01.173 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@75483843
[DEBUG] 2019-10-02 11:44:01.174 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@75483843
[DEBUG] 2019-10-02 11:44:01.175 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@612e21b9
[DEBUG] 2019-10-02 11:44:01.175 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@612e21b9
[DEBUG] 2019-10-02 11:44:01.176 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7718a40f
[DEBUG] 2019-10-02 11:44:01.178 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@216e0771
[DEBUG] 2019-10-02 11:44:01.178 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@216e0771
[DEBUG] 2019-10-02 11:44:01.178 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@216e0771
[DEBUG] 2019-10-02 11:44:01.179 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@dc79225
[DEBUG] 2019-10-02 11:44:01.179 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@dc79225
[DEBUG] 2019-10-02 11:44:01.180 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@dc79225
[DEBUG] 2019-10-02 11:44:01.181 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@fd9ebde
[DEBUG] 2019-10-02 11:44:01.182 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@323f3c96
[DEBUG] 2019-10-02 11:44:01.185 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@644ded04
[DEBUG] 2019-10-02 11:44:01.185 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@644ded04
[DEBUG] 2019-10-02 11:44:01.185 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@644ded04
[DEBUG] 2019-10-02 11:44:01.187 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@62e93c3a
[DEBUG] 2019-10-02 11:44:01.187 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@62e93c3a
[DEBUG] 2019-10-02 11:44:01.187 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@62e93c3a
[DEBUG] 2019-10-02 11:44:01.188 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@f951a7f
[DEBUG] 2019-10-02 11:44:01.189 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@78e22d35
[DEBUG] 2019-10-02 11:44:01.191 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@53ec2968
[DEBUG] 2019-10-02 11:44:01.191 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@53ec2968
[DEBUG] 2019-10-02 11:44:01.192 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6f49d153
[DEBUG] 2019-10-02 11:44:01.194 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1a4d1ab7
[DEBUG] 2019-10-02 11:44:01.194 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1a4d1ab7
[DEBUG] 2019-10-02 11:44:01.197 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@38bb9d7a
[DEBUG] 2019-10-02 11:44:01.197 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@38bb9d7a
[DEBUG] 2019-10-02 11:44:01.198 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1e469dfd
[DEBUG] 2019-10-02 11:44:01.199 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5b9396d3
[DEBUG] 2019-10-02 11:44:01.204 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@767191b1
[DEBUG] 2019-10-02 11:44:01.209 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4047d2d9
[DEBUG] 2019-10-02 11:44:01.209 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4047d2d9
[DEBUG] 2019-10-02 11:44:01.210 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5c77ba8f
[DEBUG] 2019-10-02 11:44:01.210 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@660f0c
[DEBUG] 2019-10-02 11:44:01.210 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7a0ef219
[DEBUG] 2019-10-02 11:44:01.211 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1b1f5012
[DEBUG] 2019-10-02 11:44:01.211 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7add323c
[DEBUG] 2019-10-02 11:44:01.211 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a734c04
[DEBUG] 2019-10-02 11:44:01.211 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4760f169
[DEBUG] 2019-10-02 11:44:01.211 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@261ea657
[DEBUG] 2019-10-02 11:44:01.296 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 11:44:01.298 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 11:44:01.302 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 11:44:01.304 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 11:44:01.306 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 11:44:01.308 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 11:44:01.308 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 11:44:01.311 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 11:44:01.312 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 11:44:01.313 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 11:44:01.314 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 11:44:01.315 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 11:44:01.315 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 11:44:01.317 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 11:44:01.325 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 11:44:01.326 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 11:44:01.326 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 11:44:01.580 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 11:44:01.866 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 11:44:01.868 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 11:44:01.868 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 11:44:01.955 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 11:44:02.007 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 11:44:02.053 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 11:44:02.153 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 11:44:02.164 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f5ce0bb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@47e51549]
[DEBUG] 2019-10-02 11:44:02.277 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:44:02.318 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 11:44:02.326 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 11:44:02.330 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 11:44:02.371 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:44:02.375 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 11:44:02.378 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 11:44:02.384 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 11:44:02.387 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 11:44:02.392 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 11:44:02.395 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:44:02.396 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 11:44:02.396 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 11:44:02.398 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 11:44:02.398 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 11:44:02.398 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:44:02.399 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 11:44:02.399 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 11:44:02.399 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 11:44:02.399 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 11:44:02.399 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:44:02.400 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 11:44:02.400 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 11:44:02.400 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 11:44:02.400 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 11:44:02.402 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='owner'}
[DEBUG] 2019-10-02 11:44:02.403 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:44:02.411 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:44:02.426 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:44:02.427 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:44:02.428 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 11:44:02.429 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='owner'}
[DEBUG] 2019-10-02 11:44:02.430 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='owner'}
[DEBUG] 2019-10-02 11:44:02.430 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:44:02.433 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 11:44:02.434 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:44:02.434 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 11:44:02.434 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 11:44:02.434 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 11:44:02.434 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 11:44:02.436 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:44:02.436 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 11:44:02.436 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 11:44:02.437 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 11:44:02.442 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:44:02.442 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 11:44:02.442 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 11:44:02.443 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 11:44:02.443 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 11:44:02.443 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 11:44:02.443 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:44:02.443 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 11:44:02.444 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 11:44:02.444 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 11:44:02.444 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 11:44:02.444 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:44:02.444 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 11:44:02.444 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 11:44:02.444 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 11:44:02.444 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 11:44:02.445 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:44:02.445 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 11:44:02.445 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 11:44:02.446 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 11:44:02.446 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 11:44:02.446 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 11:44:02.446 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=owner, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:44:02.450 [main] PropertyBinder - Building property owner
[DEBUG] 2019-10-02 11:44:02.453 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 11:44:02.453 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 11:44:02.453 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 11:44:02.454 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 11:44:02.454 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 11:44:02.454 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 11:44:02.455 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 11:44:02.456 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 11:44:02.457 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 11:44:02.464 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 11:44:02.465 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 11:44:02.465 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:44:02.466 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 11:44:02.467 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 11:44:02.468 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.owner
[DEBUG] 2019-10-02 11:44:02.469 [main] CollectionSecondPass - Mapped collection key: owner_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:44:02.469 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:44:02.477 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:44:02.539 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 11:44:02.543 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 11:44:02.543 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 11:44:02.543 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 11:44:02.543 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 11:44:02.543 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 11:44:02.543 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 11:44:02.543 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 11:44:02.543 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 11:44:02.544 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 11:44:02.544 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 11:44:02.544 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 11:44:02.544 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 11:44:02.544 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 11:44:02.544 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 11:44:02.544 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 11:44:02.544 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 11:44:02.544 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 11:44:02.544 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 11:44:02.545 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 11:44:02.545 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 11:44:02.545 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 11:44:02.545 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 11:44:02.545 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 11:44:02.545 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 11:44:02.545 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 11:44:02.545 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 11:44:02.545 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 11:44:02.546 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 11:44:02.546 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 11:44:02.546 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 11:44:02.546 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 11:44:02.546 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 11:44:02.546 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 11:44:02.546 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 11:44:02.546 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 11:44:02.547 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 11:44:02.547 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 11:44:02.547 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 11:44:02.658 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 11:44:02.685 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 11:44:02.685 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.UserDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7f0b93b4, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 11:44:02.708 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 11:44:02.709 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 11:44:02.710 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 11:44:02.710 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f5ce0bb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7d0100ea]
[DEBUG] 2019-10-02 11:44:02.776 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 11:44:02.776 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:44:02.804 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 11:44:02.804 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:44:03.121 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 11:44:03.121 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:44:03.121 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 11:44:03.121 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:44:03.188 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:44:03.188 [main] AbstractCollectionPersister -  Row insert: update recipes set owner_id=? where id=?
[DEBUG] 2019-10-02 11:44:03.188 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 11:44:03.188 [main] AbstractCollectionPersister -  Row delete: update recipes set owner_id=null where owner_id=? and id=?
[DEBUG] 2019-10-02 11:44:03.188 [main] AbstractCollectionPersister -  One-shot delete: update recipes set owner_id=null where owner_id=?
[DEBUG] 2019-10-02 11:44:03.193 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:44:03.193 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 11:44:03.193 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 11:44:03.194 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 11:44:03.194 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 11:44:03.194 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 11:44:03.194 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:44:03.224 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cf01c2e]
[DEBUG] 2019-10-02 11:44:03.225 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 11:44:03.225 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 11:44:03.225 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 11:44:03.225 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 11:44:03.231 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@433ef204]
[DEBUG] 2019-10-02 11:44:03.234 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66756662]
[DEBUG] 2019-10-02 11:44:03.236 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 11:44:03.236 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 11:44:03.236 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 11:44:03.236 [main] MetamodelGraphWalker - Visiting attribute path : recipes.owner
[DEBUG] 2019-10-02 11:44:03.236 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.owner
[DEBUG] 2019-10-02 11:44:03.237 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 11:44:03.237 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:44:03.253 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:44:03.261 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {owner_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 11:44:03.264 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.owner_id as owner_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.owner_id as owner_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.owner_id where user0_.id=?
[DEBUG] 2019-10-02 11:44:03.264 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e362407]
[DEBUG] 2019-10-02 11:44:03.264 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 11:44:03.264 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 11:44:03.264 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 11:44:03.264 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 11:44:03.264 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@440ef8d]
[DEBUG] 2019-10-02 11:44:03.265 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17fbfb02]
[DEBUG] 2019-10-02 11:44:03.265 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 11:44:03.265 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 11:44:03.265 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 11:44:03.265 [main] MetamodelGraphWalker - Visiting attribute path : recipes.owner
[DEBUG] 2019-10-02 11:44:03.265 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.owner
[DEBUG] 2019-10-02 11:44:03.265 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 11:44:03.265 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:44:03.265 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:44:03.266 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {owner_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 11:44:03.266 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.owner_id as owner_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.owner_id as owner_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.owner_id where user0_.id=?
[DEBUG] 2019-10-02 11:44:03.284 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.owner_id as owner_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.owner_id as owner_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.owner_id where user0_.id=?
[DEBUG] 2019-10-02 11:44:03.284 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.owner_id as owner_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.owner_id as owner_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.owner_id where user0_.id=?
[DEBUG] 2019-10-02 11:44:03.284 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:44:03.284 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 11:44:03.284 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.owner_id as owner_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 11:44:03.285 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, owner_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 11:44:03.285 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, owner_id=? where id=?
[DEBUG] 2019-10-02 11:44:03.285 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 11:44:03.285 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, owner_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:44:03.285 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a04ab05]
[DEBUG] 2019-10-02 11:44:03.285 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:44:03.285 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:44:03.285 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:44:03.285 [main] MetamodelGraphWalker - Visiting attribute path : owner
[DEBUG] 2019-10-02 11:44:03.285 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a056b26]
[DEBUG] 2019-10-02 11:44:03.286 [main] MetamodelGraphWalker - Visiting attribute path : owner.email
[DEBUG] 2019-10-02 11:44:03.286 [main] MetamodelGraphWalker - Visiting attribute path : owner.firstName
[DEBUG] 2019-10-02 11:44:03.286 [main] MetamodelGraphWalker - Visiting attribute path : owner.lastName
[DEBUG] 2019-10-02 11:44:03.286 [main] MetamodelGraphWalker - Visiting attribute path : owner.recipes
[DEBUG] 2019-10-02 11:44:03.286 [main] MetamodelGraphWalker - Property path deemed to be circular : owner.recipes
[DEBUG] 2019-10-02 11:44:03.286 [main] MetamodelGraphWalker - Visiting attribute path : owner.userName
[DEBUG] 2019-10-02 11:44:03.286 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:44:03.287 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:44:03.287 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.owner)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(owner)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 11:44:03.287 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.owner_id as owner_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.owner_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 11:44:03.287 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15a8cebd]
[DEBUG] 2019-10-02 11:44:03.288 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:44:03.288 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:44:03.288 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:44:03.288 [main] MetamodelGraphWalker - Visiting attribute path : owner
[DEBUG] 2019-10-02 11:44:03.288 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c82031b]
[DEBUG] 2019-10-02 11:44:03.288 [main] MetamodelGraphWalker - Visiting attribute path : owner.email
[DEBUG] 2019-10-02 11:44:03.288 [main] MetamodelGraphWalker - Visiting attribute path : owner.firstName
[DEBUG] 2019-10-02 11:44:03.289 [main] MetamodelGraphWalker - Visiting attribute path : owner.lastName
[DEBUG] 2019-10-02 11:44:03.289 [main] MetamodelGraphWalker - Visiting attribute path : owner.recipes
[DEBUG] 2019-10-02 11:44:03.289 [main] MetamodelGraphWalker - Property path deemed to be circular : owner.recipes
[DEBUG] 2019-10-02 11:44:03.289 [main] MetamodelGraphWalker - Visiting attribute path : owner.userName
[DEBUG] 2019-10-02 11:44:03.289 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:44:03.290 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:44:03.291 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.owner)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(owner)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 11:44:03.291 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.owner_id as owner_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.owner_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 11:44:03.292 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.owner_id as owner_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 11:44:03.292 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.owner_id as owner_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 11:44:03.299 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f12094d]
[DEBUG] 2019-10-02 11:44:03.300 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@589fb74d]
[DEBUG] 2019-10-02 11:44:03.300 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:44:03.300 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:44:03.300 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:44:03.300 [main] MetamodelGraphWalker - Visiting attribute path : owner
[DEBUG] 2019-10-02 11:44:03.300 [main] MetamodelGraphWalker - Property path deemed to be circular : owner
[DEBUG] 2019-10-02 11:44:03.300 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:44:03.303 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:44:03.304 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {owner_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 11:44:03.305 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.owner_id as owner_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.owner_id as owner_id5_0_1_ from recipes recipes0_ where recipes0_.owner_id=?
[DEBUG] 2019-10-02 11:44:03.348 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 11:44:03.348 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 11:44:03.349 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 11:44:03.357 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 11:44:03.357 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 11:44:03.359 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 11:44:03.359 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 11:44:03.362 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4567fb2b
[DEBUG] 2019-10-02 11:44:03.364 [main] SessionFactoryRegistry - Registering SessionFactory: ed11664d-390a-4b1b-b681-8fe8dad86c9e (<unnamed>)
[DEBUG] 2019-10-02 11:44:03.364 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 11:44:03.461 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 11:44:03.473 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 11:44:03.473 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 11:44:03.498 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 11:44:03.503 [main] SQL - insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:44:03.538 [main] IdentifierGeneratorHelper - Natively generated identity: 7
[DEBUG] 2019-10-02 11:44:03.538 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:44:03.545 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 11:44:03.545 [main] SQL - insert into recipes (directions, ingredients, name, owner_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:44:03.598 [main] SqlExceptionHelper - could not execute statement [n/a]
java.sql.SQLSyntaxErrorException: Unknown column 'owner_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1094) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1042) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1345) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:1027) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeUpdate(NewProxyPreparedStatement.java:410) ~[c3p0-0.9.5.3.jar:0.9.5.3]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:175) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3112) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3705) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:335) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:292) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:198) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:128) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:193) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:178) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:99) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:663) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:655) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.spi.CascadingActions$5.cascade(CascadingActions.java:219) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.internal.Cascade.cascadeToOne(Cascade.java:492) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:416) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.internal.Cascade.cascadeCollectionElements(Cascade.java:525) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.internal.Cascade.cascadeCollection(Cascade.java:456) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.internal.Cascade.cascadeAssociation(Cascade.java:419) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.internal.Cascade.cascadeProperty(Cascade.java:218) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:151) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.cascadeAfterSave(AbstractSaveEventListener.java:464) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:298) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:198) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:128) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:193) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:178) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:697) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:689) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:684) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at com.alexmalotky.persistence.UserDao.insert(UserDao.java:36) [classes/:?]
	at com.alexmalotky.persistence.UserDaoTest.insertNewRecipeTest(UserDaoTest.java:74) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) [junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69) [junit5-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
[WARN ] 2019-10-02 11:44:03.601 [main] SqlExceptionHelper - SQL Error: 1054, SQLState: 42S22
[ERROR] 2019-10-02 11:44:03.601 [main] SqlExceptionHelper - Unknown column 'owner_id' in 'field list'
[DEBUG] 2019-10-02 11:44:54.430 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2019-10-02 11:44:54.454 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@273dec10
[DEBUG] 2019-10-02 11:44:54.494 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.User as generatedAlias0
[DEBUG] 2019-10-02 11:44:54.504 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 11:44:54.518 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'alexmalotky'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-10-02 11:44:54.559 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-02 11:44:54.586 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.User (generatedAlias0) -> user0_
[DEBUG] 2019-10-02 11:44:54.588 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-10-02 11:44:54.591 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-02 11:44:54.591 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} users user0_ ) )
[DEBUG] 2019-10-02 11:44:54.604 [main] JoinProcessor - Using FROM fragment [users user0_]
[DEBUG] 2019-10-02 11:44:54.605 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-02 11:44:54.606 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_1_' {alias=generatedAlias0, className=com.alexmalotky.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_1_, user0_.first_name as first_na3_1_, user0_.last_name as last_nam4_1_, user0_.user_name as user_nam5_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.alexmalotky.entity.User}}

[DEBUG] 2019-10-02 11:44:54.606 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 11:44:54.615 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.User as generatedAlias0
[DEBUG] 2019-10-02 11:44:54.615 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_1_, user0_.email as email2_1_, user0_.first_name as first_na3_1_, user0_.last_name as last_nam4_1_, user0_.user_name as user_nam5_1_ from users user0_
[DEBUG] 2019-10-02 11:44:54.615 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 11:44:54.632 [main] SQL - select user0_.id as id1_1_, user0_.email as email2_1_, user0_.first_name as first_na3_1_, user0_.last_name as last_nam4_1_, user0_.user_name as user_nam5_1_ from users user0_
[DEBUG] 2019-10-02 11:44:54.638 [main] Loader - Result set row: 0
[DEBUG] 2019-10-02 11:44:54.641 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 11:44:54.644 [main] Loader - Result set row: 1
[DEBUG] 2019-10-02 11:44:54.644 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 11:44:54.644 [main] Loader - Result set row: 2
[DEBUG] 2019-10-02 11:44:54.644 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 11:44:54.646 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 11:44:54.646 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 11:44:54.646 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:44:54.646 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 11:44:54.646 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:44:54.646 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 11:44:54.646 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:44:54.646 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:44:54.646 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:44:54.648 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 11:44:54.649 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:44:54.649 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 11:44:54.649 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 11:44:54.649 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 11:44:54.649 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:44:54.649 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 11:44:54.649 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:44:54.649 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 11:44:54.649 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:44:54.649 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:44:54.649 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:44:54.649 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-02 11:44:54.650 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:44:54.650 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 11:44:54.650 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 11:44:54.650 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 11:44:54.650 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:44:54.650 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 11:44:54.650 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:44:54.650 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 11:44:54.650 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:44:54.650 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:44:54.650 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:44:54.650 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 11:44:54.650 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:44:54.650 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 11:44:54.653 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 11:44:54.653 [main] SQL - select recipes0_.owner_id as owner_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.owner_id as owner_id5_0_1_ from recipes recipes0_ where recipes0_.owner_id=?
[DEBUG] 2019-10-02 11:44:54.665 [main] SqlExceptionHelper - could not extract ResultSet [n/a]
java.sql.SQLSyntaxErrorException: Unknown column 'recipes0_.owner_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1005) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:379) ~[c3p0-0.9.5.3.jar:0.9.5.3]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.getResultSet(AbstractLoadPlanBasedLoader.java:418) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeQueryStatement(AbstractLoadPlanBasedLoader.java:191) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:121) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:86) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.collection.plan.AbstractLoadPlanBasedCollectionInitializer.initialize(AbstractLoadPlanBasedCollectionInitializer.java:87) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.persister.collection.AbstractCollectionPersister.initialize(AbstractCollectionPersister.java:706) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultInitializeCollectionEventListener.onInitializeCollection(DefaultInitializeCollectionEventListener.java:76) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.initializeCollection(SessionImpl.java:2295) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection$4.doWork(AbstractPersistentCollection.java:589) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:264) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.forceInitialization(AbstractPersistentCollection.java:777) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.internal.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:952) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:359) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2810) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2792) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2624) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.Loader.list(Loader.java:2619) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:506) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:396) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:219) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1547) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1557) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1525) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.query.Query.getResultList(Query.java:165) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getResultList(CriteriaQueryTypeQueryAdapter.java:76) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at com.alexmalotky.persistence.UserDao.getAllUsers(UserDao.java:20) [classes/:?]
	at com.alexmalotky.persistence.UserDaoTest.testGetAllUsers(UserDaoTest.java:27) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) [junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69) [junit5-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
[WARN ] 2019-10-02 11:44:54.667 [main] SqlExceptionHelper - SQL Error: 1054, SQLState: 42S22
[ERROR] 2019-10-02 11:44:54.667 [main] SqlExceptionHelper - Unknown column 'recipes0_.owner_id' in 'field list'
[DEBUG] 2019-10-02 11:44:54.668 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:44:54.670 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 11:45:45.407 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.owner_id as owner_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.owner_id as owner_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.owner_id where user0_.id=?
[DEBUG] 2019-10-02 11:45:45.419 [main] SqlExceptionHelper - could not extract ResultSet [n/a]
java.sql.SQLSyntaxErrorException: Unknown column 'recipes1_.owner_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1005) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:379) ~[c3p0-0.9.5.3.jar:0.9.5.3]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.getResultSet(AbstractLoadPlanBasedLoader.java:418) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeQueryStatement(AbstractLoadPlanBasedLoader.java:191) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:121) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:86) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:197) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4312) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:570) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:538) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:208) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:333) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:108) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:74) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1298) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1286) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.access$2100(SessionImpl.java:203) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2945) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.lambda$load$1(SessionImpl.java:2926) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.perform(SessionImpl.java:2882) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2926) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.get(SessionImpl.java:1081) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at com.alexmalotky.persistence.UserDao.getUserById(UserDao.java:27) [classes/:?]
	at com.alexmalotky.persistence.UserDaoTest.testGetUserById(UserDaoTest.java:33) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) [junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69) [junit5-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
[WARN ] 2019-10-02 11:45:45.422 [main] SqlExceptionHelper - SQL Error: 1054, SQLState: 42S22
[ERROR] 2019-10-02 11:45:45.422 [main] SqlExceptionHelper - Unknown column 'recipes1_.owner_id' in 'field list'
[INFO ] 2019-10-02 11:45:45.423 [main] DefaultLoadEventListener - HHH000327: Error performing load command : org.hibernate.exception.SQLGrammarException: could not extract ResultSet
[DEBUG] 2019-10-02 11:45:45.423 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:46:36.460 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.owner_id as owner_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.owner_id as owner_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.owner_id where user0_.id=?
[DEBUG] 2019-10-02 11:49:15.600 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 11:49:15.604 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 11:49:15.613 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 11:49:15.737 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 11:49:15.740 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 11:49:16.018 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 11:49:16.020 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 11:49:16.028 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 11:49:16.466 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 11:49:16.494 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 11:49:16.495 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 11:49:16.520 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 11:49:16.561 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7dd611c8
[DEBUG] 2019-10-02 11:49:16.562 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7dd611c8
[DEBUG] 2019-10-02 11:49:16.562 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7dd611c8
[DEBUG] 2019-10-02 11:49:16.562 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@278667fd
[DEBUG] 2019-10-02 11:49:16.563 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@e042c99
[DEBUG] 2019-10-02 11:49:16.564 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f4f5330
[DEBUG] 2019-10-02 11:49:16.565 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2b34e38c
[DEBUG] 2019-10-02 11:49:16.565 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2b34e38c
[DEBUG] 2019-10-02 11:49:16.565 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2b34e38c
[DEBUG] 2019-10-02 11:49:16.567 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@468dda3e
[DEBUG] 2019-10-02 11:49:16.567 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@468dda3e
[DEBUG] 2019-10-02 11:49:16.567 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@468dda3e
[DEBUG] 2019-10-02 11:49:16.568 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@67f3d192
[DEBUG] 2019-10-02 11:49:16.569 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@67f3d192
[DEBUG] 2019-10-02 11:49:16.569 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@67f3d192
[DEBUG] 2019-10-02 11:49:16.570 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6b4283c4
[DEBUG] 2019-10-02 11:49:16.570 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6b4283c4
[DEBUG] 2019-10-02 11:49:16.570 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6b4283c4
[DEBUG] 2019-10-02 11:49:16.571 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7e744f43
[DEBUG] 2019-10-02 11:49:16.572 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7e744f43
[DEBUG] 2019-10-02 11:49:16.572 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e744f43
[DEBUG] 2019-10-02 11:49:16.573 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@49ec6a9f
[DEBUG] 2019-10-02 11:49:16.573 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@49ec6a9f
[DEBUG] 2019-10-02 11:49:16.573 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@49ec6a9f
[DEBUG] 2019-10-02 11:49:16.574 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@70cccd8f
[DEBUG] 2019-10-02 11:49:16.574 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@70cccd8f
[DEBUG] 2019-10-02 11:49:16.575 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@70cccd8f
[DEBUG] 2019-10-02 11:49:16.576 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1a0b5323
[DEBUG] 2019-10-02 11:49:16.576 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1a0b5323
[DEBUG] 2019-10-02 11:49:16.587 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@41fe8e5f
[DEBUG] 2019-10-02 11:49:16.587 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@41fe8e5f
[DEBUG] 2019-10-02 11:49:16.589 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@51a6cc2a
[DEBUG] 2019-10-02 11:49:16.589 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@51a6cc2a
[DEBUG] 2019-10-02 11:49:16.590 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28cb3a25
[DEBUG] 2019-10-02 11:49:16.591 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@9aa2002
[DEBUG] 2019-10-02 11:49:16.592 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@49ede9c7
[DEBUG] 2019-10-02 11:49:16.592 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@49ede9c7
[DEBUG] 2019-10-02 11:49:16.594 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@45404d5
[DEBUG] 2019-10-02 11:49:16.594 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@45404d5
[DEBUG] 2019-10-02 11:49:16.605 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@59ed3e6c
[DEBUG] 2019-10-02 11:49:16.605 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@59ed3e6c
[DEBUG] 2019-10-02 11:49:16.608 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4195105b
[DEBUG] 2019-10-02 11:49:16.608 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4195105b
[DEBUG] 2019-10-02 11:49:16.610 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6cd5122d
[DEBUG] 2019-10-02 11:49:16.610 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6cd5122d
[DEBUG] 2019-10-02 11:49:16.613 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@70c53dbe
[DEBUG] 2019-10-02 11:49:16.613 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@70c53dbe
[DEBUG] 2019-10-02 11:49:16.616 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@109a2025
[DEBUG] 2019-10-02 11:49:16.616 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@109a2025
[DEBUG] 2019-10-02 11:49:16.619 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6c9320c2
[DEBUG] 2019-10-02 11:49:16.619 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6c9320c2
[DEBUG] 2019-10-02 11:49:16.623 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@14823f76
[DEBUG] 2019-10-02 11:49:16.624 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@14823f76
[DEBUG] 2019-10-02 11:49:16.626 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@124ac145
[DEBUG] 2019-10-02 11:49:16.627 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@124ac145
[DEBUG] 2019-10-02 11:49:16.629 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4af70944
[DEBUG] 2019-10-02 11:49:16.629 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4af70944
[DEBUG] 2019-10-02 11:49:16.631 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7661b5a
[DEBUG] 2019-10-02 11:49:16.631 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7661b5a
[DEBUG] 2019-10-02 11:49:16.631 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7661b5a
[DEBUG] 2019-10-02 11:49:16.634 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e08acf9
[DEBUG] 2019-10-02 11:49:16.635 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5ec4ff02
[DEBUG] 2019-10-02 11:49:16.636 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5ec4ff02
[DEBUG] 2019-10-02 11:49:16.636 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5ec4ff02
[DEBUG] 2019-10-02 11:49:16.637 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@612e21b9
[DEBUG] 2019-10-02 11:49:16.639 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1a865273
[DEBUG] 2019-10-02 11:49:16.639 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a865273
[DEBUG] 2019-10-02 11:49:16.640 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@fcc6023
[DEBUG] 2019-10-02 11:49:16.641 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@fcc6023
[DEBUG] 2019-10-02 11:49:16.642 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@46185a1b
[DEBUG] 2019-10-02 11:49:16.642 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@46185a1b
[DEBUG] 2019-10-02 11:49:16.644 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4ee5b2d9
[DEBUG] 2019-10-02 11:49:16.644 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ee5b2d9
[DEBUG] 2019-10-02 11:49:16.646 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@290d10ef
[DEBUG] 2019-10-02 11:49:16.646 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@290d10ef
[DEBUG] 2019-10-02 11:49:16.647 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13d9261f
[DEBUG] 2019-10-02 11:49:16.649 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2436ea2f
[DEBUG] 2019-10-02 11:49:16.649 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2436ea2f
[DEBUG] 2019-10-02 11:49:16.649 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2436ea2f
[DEBUG] 2019-10-02 11:49:16.651 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59f93db8
[DEBUG] 2019-10-02 11:49:16.652 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59f93db8
[DEBUG] 2019-10-02 11:49:16.652 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59f93db8
[DEBUG] 2019-10-02 11:49:16.654 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@292158f8
[DEBUG] 2019-10-02 11:49:16.654 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5d5c04f9
[DEBUG] 2019-10-02 11:49:16.656 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6724cdec
[DEBUG] 2019-10-02 11:49:16.656 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6724cdec
[DEBUG] 2019-10-02 11:49:16.656 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6724cdec
[DEBUG] 2019-10-02 11:49:16.658 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60783105
[DEBUG] 2019-10-02 11:49:16.658 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60783105
[DEBUG] 2019-10-02 11:49:16.658 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60783105
[DEBUG] 2019-10-02 11:49:16.659 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2a3194c6
[DEBUG] 2019-10-02 11:49:16.660 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1e8ab90f
[DEBUG] 2019-10-02 11:49:16.663 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1907874b
[DEBUG] 2019-10-02 11:49:16.663 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1907874b
[DEBUG] 2019-10-02 11:49:16.664 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2d9dff65
[DEBUG] 2019-10-02 11:49:16.666 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@fab35b1
[DEBUG] 2019-10-02 11:49:16.667 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@fab35b1
[DEBUG] 2019-10-02 11:49:16.669 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@587a1cfb
[DEBUG] 2019-10-02 11:49:16.670 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@587a1cfb
[DEBUG] 2019-10-02 11:49:16.671 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@48d293ee
[DEBUG] 2019-10-02 11:49:16.672 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@660f0c
[DEBUG] 2019-10-02 11:49:16.674 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@76563d26
[DEBUG] 2019-10-02 11:49:16.678 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@10a0fe30
[DEBUG] 2019-10-02 11:49:16.679 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@10a0fe30
[DEBUG] 2019-10-02 11:49:16.680 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@262816a8
[DEBUG] 2019-10-02 11:49:16.680 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1effd53c
[DEBUG] 2019-10-02 11:49:16.680 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@46c269e0
[DEBUG] 2019-10-02 11:49:16.680 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6920614
[DEBUG] 2019-10-02 11:49:16.680 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6069dd38
[DEBUG] 2019-10-02 11:49:16.680 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5fa23c
[DEBUG] 2019-10-02 11:49:16.681 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@558756be
[DEBUG] 2019-10-02 11:49:16.681 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@433348bc
[DEBUG] 2019-10-02 11:49:16.750 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 11:49:16.751 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 11:49:16.752 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 11:49:16.753 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 11:49:16.754 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 11:49:16.756 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 11:49:16.756 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 11:49:16.758 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 11:49:16.759 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 11:49:16.760 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 11:49:16.760 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 11:49:16.761 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 11:49:16.761 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 11:49:16.762 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 11:49:16.771 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 11:49:16.772 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 11:49:16.772 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 11:49:17.075 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 11:49:17.548 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 11:49:17.548 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 11:49:17.548 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 11:49:17.587 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 11:49:17.612 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 11:49:17.664 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 11:49:17.751 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 11:49:17.757 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18539cb1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@748f93bb]
[DEBUG] 2019-10-02 11:49:17.821 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:49:17.850 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 11:49:17.857 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 11:49:17.861 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 11:49:17.895 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:17.898 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 11:49:17.900 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 11:49:17.903 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 11:49:17.905 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 11:49:17.910 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 11:49:17.912 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:17.912 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 11:49:17.912 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 11:49:17.912 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 11:49:17.913 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 11:49:17.913 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:17.913 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 11:49:17.913 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 11:49:17.913 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 11:49:17.914 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 11:49:17.914 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:17.914 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 11:49:17.914 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 11:49:17.914 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 11:49:17.914 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 11:49:17.917 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 11:49:17.917 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:17.921 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:17.934 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:17.935 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:17.937 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 11:49:17.939 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 11:49:17.940 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 11:49:17.940 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:17.943 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 11:49:17.944 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:17.944 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 11:49:17.944 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 11:49:17.944 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 11:49:17.944 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 11:49:17.947 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:49:17.947 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 11:49:17.948 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 11:49:17.948 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 11:49:17.951 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:17.951 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 11:49:17.951 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 11:49:17.951 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 11:49:17.951 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 11:49:17.951 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 11:49:17.952 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:17.952 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 11:49:17.952 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 11:49:17.952 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 11:49:17.952 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 11:49:17.952 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:17.952 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 11:49:17.952 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 11:49:17.952 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 11:49:17.953 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 11:49:17.953 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:17.953 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 11:49:17.953 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 11:49:17.953 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 11:49:17.953 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 11:49:17.953 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 11:49:17.954 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:17.955 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 11:49:17.958 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 11:49:17.958 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 11:49:17.958 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 11:49:17.958 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 11:49:17.958 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 11:49:17.958 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 11:49:17.958 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 11:49:17.958 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 11:49:17.959 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 11:49:17.964 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 11:49:17.964 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 11:49:17.965 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:17.965 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 11:49:17.966 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 11:49:17.967 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 11:49:17.967 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:49:17.968 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:49:17.972 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:49:18.015 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 11:49:18.016 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 11:49:18.016 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 11:49:18.017 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 11:49:18.017 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 11:49:18.017 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 11:49:18.017 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 11:49:18.017 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 11:49:18.017 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 11:49:18.017 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 11:49:18.017 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 11:49:18.017 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 11:49:18.017 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 11:49:18.017 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 11:49:18.018 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 11:49:18.018 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 11:49:18.018 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 11:49:18.018 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 11:49:18.018 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 11:49:18.018 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 11:49:18.018 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 11:49:18.018 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 11:49:18.018 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 11:49:18.018 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 11:49:18.018 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 11:49:18.018 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 11:49:18.018 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 11:49:18.019 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 11:49:18.019 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 11:49:18.019 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 11:49:18.019 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 11:49:18.019 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 11:49:18.019 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 11:49:18.019 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 11:49:18.019 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 11:49:18.019 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 11:49:18.019 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 11:49:18.019 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 11:49:18.019 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 11:49:18.084 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 11:49:18.112 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 11:49:18.112 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.UserDaoTest,testGetAllUsers, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3249e278, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 11:49:18.133 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 11:49:18.133 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 11:49:18.134 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 11:49:18.135 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18539cb1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4f281aaf]
[DEBUG] 2019-10-02 11:49:18.197 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 11:49:18.197 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:49:18.221 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 11:49:18.221 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:49:18.516 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 11:49:18.516 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:49:18.517 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 11:49:18.517 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:49:18.555 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:18.555 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 11:49:18.555 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 11:49:18.555 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 11:49:18.555 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 11:49:18.562 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:49:18.562 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 11:49:18.562 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 11:49:18.562 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 11:49:18.562 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 11:49:18.562 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 11:49:18.562 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:49:18.590 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@96abc76]
[DEBUG] 2019-10-02 11:49:18.592 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 11:49:18.592 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 11:49:18.592 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 11:49:18.592 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 11:49:18.598 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35fa450f]
[DEBUG] 2019-10-02 11:49:18.601 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26275b46]
[DEBUG] 2019-10-02 11:49:18.603 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 11:49:18.603 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 11:49:18.603 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 11:49:18.603 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 11:49:18.603 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 11:49:18.604 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 11:49:18.604 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:49:18.619 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:49:18.627 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 11:49:18.629 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:49:18.630 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b5021d1]
[DEBUG] 2019-10-02 11:49:18.630 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 11:49:18.630 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 11:49:18.630 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 11:49:18.630 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 11:49:18.630 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21d9cd04]
[DEBUG] 2019-10-02 11:49:18.630 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@799f354a]
[DEBUG] 2019-10-02 11:49:18.630 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 11:49:18.630 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 11:49:18.630 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 11:49:18.630 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 11:49:18.631 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 11:49:18.631 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 11:49:18.631 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:49:18.631 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:49:18.632 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 11:49:18.632 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:49:18.648 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:49:18.648 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:49:18.649 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:49:18.649 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 11:49:18.649 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 11:49:18.649 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 11:49:18.649 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 11:49:18.649 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 11:49:18.649 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:49:18.649 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23564dd2]
[DEBUG] 2019-10-02 11:49:18.649 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:49:18.649 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:49:18.649 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:49:18.650 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 11:49:18.650 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd0a0d0]
[DEBUG] 2019-10-02 11:49:18.650 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 11:49:18.650 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 11:49:18.651 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 11:49:18.651 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 11:49:18.651 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 11:49:18.651 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 11:49:18.651 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:49:18.651 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:49:18.652 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 11:49:18.652 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 11:49:18.652 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f12094d]
[DEBUG] 2019-10-02 11:49:18.652 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:49:18.652 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:49:18.652 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:49:18.652 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 11:49:18.652 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@200d1a3d]
[DEBUG] 2019-10-02 11:49:18.653 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 11:49:18.653 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 11:49:18.653 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 11:49:18.653 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 11:49:18.653 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 11:49:18.653 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 11:49:18.653 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:49:18.653 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:49:18.654 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 11:49:18.654 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 11:49:18.654 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 11:49:18.654 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 11:49:18.660 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a2546d6]
[DEBUG] 2019-10-02 11:49:18.660 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7282af25]
[DEBUG] 2019-10-02 11:49:18.660 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:49:18.660 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:49:18.660 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:49:18.660 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 11:49:18.661 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 11:49:18.661 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:49:18.663 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:49:18.664 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 11:49:18.664 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 11:49:18.702 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 11:49:18.702 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 11:49:18.703 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 11:49:18.710 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 11:49:18.710 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 11:49:18.711 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 11:49:18.711 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 11:49:18.713 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@389a5022
[DEBUG] 2019-10-02 11:49:18.715 [main] SessionFactoryRegistry - Registering SessionFactory: 0ae85baa-9dc5-4d4d-b0d7-8d911146f958 (<unnamed>)
[DEBUG] 2019-10-02 11:49:18.715 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 11:49:18.808 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 11:49:18.839 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2019-10-02 11:49:18.857 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@ce561cc
[DEBUG] 2019-10-02 11:49:18.886 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.User as generatedAlias0
[DEBUG] 2019-10-02 11:49:18.894 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 11:49:18.904 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'alexmalotky'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-10-02 11:49:18.932 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-02 11:49:18.950 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.User (generatedAlias0) -> user0_
[DEBUG] 2019-10-02 11:49:18.951 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-10-02 11:49:18.953 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-02 11:49:18.954 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} users user0_ ) )
[DEBUG] 2019-10-02 11:49:18.966 [main] JoinProcessor - Using FROM fragment [users user0_]
[DEBUG] 2019-10-02 11:49:18.966 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-02 11:49:18.967 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_1_' {alias=generatedAlias0, className=com.alexmalotky.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_1_, user0_.first_name as first_na3_1_, user0_.last_name as last_nam4_1_, user0_.user_name as user_nam5_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.alexmalotky.entity.User}}

[DEBUG] 2019-10-02 11:49:18.967 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 11:49:18.975 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.User as generatedAlias0
[DEBUG] 2019-10-02 11:49:18.975 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_1_, user0_.email as email2_1_, user0_.first_name as first_na3_1_, user0_.last_name as last_nam4_1_, user0_.user_name as user_nam5_1_ from users user0_
[DEBUG] 2019-10-02 11:49:18.975 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 11:49:19.005 [main] SQL - select user0_.id as id1_1_, user0_.email as email2_1_, user0_.first_name as first_na3_1_, user0_.last_name as last_nam4_1_, user0_.user_name as user_nam5_1_ from users user0_
[DEBUG] 2019-10-02 11:49:19.045 [main] Loader - Result set row: 0
[DEBUG] 2019-10-02 11:49:19.048 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 11:49:19.057 [main] Loader - Result set row: 1
[DEBUG] 2019-10-02 11:49:19.057 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 11:49:19.057 [main] Loader - Result set row: 2
[DEBUG] 2019-10-02 11:49:19.058 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 11:49:19.059 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 11:49:19.060 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 11:49:19.060 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:19.061 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 11:49:19.061 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:19.061 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 11:49:19.061 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:19.061 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:49:19.061 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:19.072 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 11:49:19.072 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:19.073 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 11:49:19.073 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 11:49:19.073 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 11:49:19.073 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:19.073 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 11:49:19.074 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:19.074 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 11:49:19.074 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:19.074 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:49:19.074 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:19.074 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-02 11:49:19.074 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:19.074 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 11:49:19.074 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 11:49:19.074 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 11:49:19.074 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:19.074 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 11:49:19.074 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:19.074 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 11:49:19.074 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:19.074 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:49:19.075 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:19.075 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 11:49:19.075 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:19.075 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 11:49:19.078 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 11:49:19.079 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 11:49:19.084 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 11:49:19.089 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:19.089 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 11:49:19.089 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:19.089 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:49:19.090 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 11:49:19.090 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 11:49:19.090 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 11:49:19.092 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 11:49:19.092 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 11:49:19.095 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 11:49:19.099 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 11:49:19.100 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-02 11:49:19.100 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:19.100 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-02 11:49:19.100 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:19.100 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-02 11:49:19.100 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:19.100 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-02 11:49:19.100 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:19.100 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 11:49:19.100 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:19.101 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 11:49:19.101 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:19.101 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:49:19.101 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 11:49:19.101 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 11:49:19.101 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 11:49:19.103 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 11:49:19.103 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:19.103 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 11:49:19.103 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:19.103 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:49:19.104 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 11:49:19.106 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:49:32.228 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 11:49:32.232 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 11:49:32.239 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 11:49:32.362 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 11:49:32.365 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 11:49:32.651 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 11:49:32.653 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 11:49:32.661 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 11:49:33.133 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 11:49:33.160 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 11:49:33.161 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 11:49:33.189 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 11:49:33.244 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1702830d
[DEBUG] 2019-10-02 11:49:33.244 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1702830d
[DEBUG] 2019-10-02 11:49:33.244 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1702830d
[DEBUG] 2019-10-02 11:49:33.245 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6b52dd31
[DEBUG] 2019-10-02 11:49:33.246 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@42b6d0cc
[DEBUG] 2019-10-02 11:49:33.247 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@750ff7d3
[DEBUG] 2019-10-02 11:49:33.250 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7fd26ad8
[DEBUG] 2019-10-02 11:49:33.250 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7fd26ad8
[DEBUG] 2019-10-02 11:49:33.250 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7fd26ad8
[DEBUG] 2019-10-02 11:49:33.252 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@54cf7c6a
[DEBUG] 2019-10-02 11:49:33.252 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@54cf7c6a
[DEBUG] 2019-10-02 11:49:33.252 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@54cf7c6a
[DEBUG] 2019-10-02 11:49:33.254 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@73010765
[DEBUG] 2019-10-02 11:49:33.254 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@73010765
[DEBUG] 2019-10-02 11:49:33.254 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73010765
[DEBUG] 2019-10-02 11:49:33.256 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@636bbbbb
[DEBUG] 2019-10-02 11:49:33.257 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@636bbbbb
[DEBUG] 2019-10-02 11:49:33.257 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@636bbbbb
[DEBUG] 2019-10-02 11:49:33.259 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6a4ccef7
[DEBUG] 2019-10-02 11:49:33.259 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6a4ccef7
[DEBUG] 2019-10-02 11:49:33.260 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6a4ccef7
[DEBUG] 2019-10-02 11:49:33.262 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5f7da3d3
[DEBUG] 2019-10-02 11:49:33.262 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5f7da3d3
[DEBUG] 2019-10-02 11:49:33.263 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5f7da3d3
[DEBUG] 2019-10-02 11:49:33.264 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@77ec6a3d
[DEBUG] 2019-10-02 11:49:33.264 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@77ec6a3d
[DEBUG] 2019-10-02 11:49:33.264 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@77ec6a3d
[DEBUG] 2019-10-02 11:49:33.266 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@245ec1a6
[DEBUG] 2019-10-02 11:49:33.266 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@245ec1a6
[DEBUG] 2019-10-02 11:49:33.268 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2016f509
[DEBUG] 2019-10-02 11:49:33.268 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2016f509
[DEBUG] 2019-10-02 11:49:33.270 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2123064f
[DEBUG] 2019-10-02 11:49:33.270 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2123064f
[DEBUG] 2019-10-02 11:49:33.271 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6cfd9a54
[DEBUG] 2019-10-02 11:49:33.272 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@73d4066e
[DEBUG] 2019-10-02 11:49:33.274 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3dd4a6fa
[DEBUG] 2019-10-02 11:49:33.274 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3dd4a6fa
[DEBUG] 2019-10-02 11:49:33.275 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5cbe2654
[DEBUG] 2019-10-02 11:49:33.276 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5cbe2654
[DEBUG] 2019-10-02 11:49:33.289 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@317e9c3c
[DEBUG] 2019-10-02 11:49:33.289 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@317e9c3c
[DEBUG] 2019-10-02 11:49:33.292 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@47ffe971
[DEBUG] 2019-10-02 11:49:33.292 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@47ffe971
[DEBUG] 2019-10-02 11:49:33.294 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10c07b8d
[DEBUG] 2019-10-02 11:49:33.295 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10c07b8d
[DEBUG] 2019-10-02 11:49:33.297 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21c815e4
[DEBUG] 2019-10-02 11:49:33.297 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21c815e4
[DEBUG] 2019-10-02 11:49:33.299 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@761956ac
[DEBUG] 2019-10-02 11:49:33.299 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@761956ac
[DEBUG] 2019-10-02 11:49:33.302 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@36cc9385
[DEBUG] 2019-10-02 11:49:33.302 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@36cc9385
[DEBUG] 2019-10-02 11:49:33.306 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ed16657
[DEBUG] 2019-10-02 11:49:33.306 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ed16657
[DEBUG] 2019-10-02 11:49:33.308 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@24e83d19
[DEBUG] 2019-10-02 11:49:33.309 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@24e83d19
[DEBUG] 2019-10-02 11:49:33.310 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@397ef2
[DEBUG] 2019-10-02 11:49:33.311 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@397ef2
[DEBUG] 2019-10-02 11:49:33.312 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@65c33b92
[DEBUG] 2019-10-02 11:49:33.312 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@65c33b92
[DEBUG] 2019-10-02 11:49:33.313 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@65c33b92
[DEBUG] 2019-10-02 11:49:33.315 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@78cd163b
[DEBUG] 2019-10-02 11:49:33.317 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2b2f5fcf
[DEBUG] 2019-10-02 11:49:33.317 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2b2f5fcf
[DEBUG] 2019-10-02 11:49:33.317 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2b2f5fcf
[DEBUG] 2019-10-02 11:49:33.318 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7efd28bd
[DEBUG] 2019-10-02 11:49:33.320 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4068102e
[DEBUG] 2019-10-02 11:49:33.320 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4068102e
[DEBUG] 2019-10-02 11:49:33.323 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@36417a54
[DEBUG] 2019-10-02 11:49:33.323 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@36417a54
[DEBUG] 2019-10-02 11:49:33.324 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@60cf62ad
[DEBUG] 2019-10-02 11:49:33.324 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@60cf62ad
[DEBUG] 2019-10-02 11:49:33.325 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@323f3c96
[DEBUG] 2019-10-02 11:49:33.326 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@323f3c96
[DEBUG] 2019-10-02 11:49:33.327 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@644ded04
[DEBUG] 2019-10-02 11:49:33.327 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@644ded04
[DEBUG] 2019-10-02 11:49:33.328 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5300cac
[DEBUG] 2019-10-02 11:49:33.330 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@20cece0b
[DEBUG] 2019-10-02 11:49:33.330 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@20cece0b
[DEBUG] 2019-10-02 11:49:33.330 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@20cece0b
[DEBUG] 2019-10-02 11:49:33.331 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@73c9e8e8
[DEBUG] 2019-10-02 11:49:33.331 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@73c9e8e8
[DEBUG] 2019-10-02 11:49:33.331 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@73c9e8e8
[DEBUG] 2019-10-02 11:49:33.333 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@58ff8d79
[DEBUG] 2019-10-02 11:49:33.334 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4b790d86
[DEBUG] 2019-10-02 11:49:33.336 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@52e04737
[DEBUG] 2019-10-02 11:49:33.336 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@52e04737
[DEBUG] 2019-10-02 11:49:33.336 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@52e04737
[DEBUG] 2019-10-02 11:49:33.338 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@35d5ac51
[DEBUG] 2019-10-02 11:49:33.339 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@35d5ac51
[DEBUG] 2019-10-02 11:49:33.339 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@35d5ac51
[DEBUG] 2019-10-02 11:49:33.340 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@30364216
[DEBUG] 2019-10-02 11:49:33.341 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7a729f84
[DEBUG] 2019-10-02 11:49:33.344 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5b3a7ef5
[DEBUG] 2019-10-02 11:49:33.344 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5b3a7ef5
[DEBUG] 2019-10-02 11:49:33.345 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5633ed82
[DEBUG] 2019-10-02 11:49:33.348 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65bdd558
[DEBUG] 2019-10-02 11:49:33.349 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65bdd558
[DEBUG] 2019-10-02 11:49:33.351 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5e1d03d7
[DEBUG] 2019-10-02 11:49:33.352 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5e1d03d7
[DEBUG] 2019-10-02 11:49:33.353 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@22587507
[DEBUG] 2019-10-02 11:49:33.354 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1b1f5012
[DEBUG] 2019-10-02 11:49:33.356 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@3d904e9c
[DEBUG] 2019-10-02 11:49:33.363 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@60f70249
[DEBUG] 2019-10-02 11:49:33.364 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@60f70249
[DEBUG] 2019-10-02 11:49:33.365 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@46c269e0
[DEBUG] 2019-10-02 11:49:33.365 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6920614
[DEBUG] 2019-10-02 11:49:33.365 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6069dd38
[DEBUG] 2019-10-02 11:49:33.365 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5fa23c
[DEBUG] 2019-10-02 11:49:33.365 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@558756be
[DEBUG] 2019-10-02 11:49:33.366 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@433348bc
[DEBUG] 2019-10-02 11:49:33.366 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d1dcdff
[DEBUG] 2019-10-02 11:49:33.366 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@102ecc22
[DEBUG] 2019-10-02 11:49:33.448 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 11:49:33.449 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 11:49:33.450 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 11:49:33.450 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 11:49:33.451 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 11:49:33.455 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 11:49:33.455 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 11:49:33.457 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 11:49:33.458 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 11:49:33.459 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 11:49:33.460 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 11:49:33.461 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 11:49:33.461 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 11:49:33.462 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 11:49:33.471 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 11:49:33.471 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 11:49:33.471 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 11:49:33.710 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 11:49:33.932 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 11:49:33.933 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 11:49:33.933 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 11:49:33.998 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 11:49:34.036 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 11:49:34.082 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 11:49:34.157 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 11:49:34.164 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7f2d31af] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2e7157c7]
[DEBUG] 2019-10-02 11:49:34.270 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:49:34.314 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 11:49:34.324 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 11:49:34.330 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 11:49:34.376 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:34.380 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 11:49:34.383 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 11:49:34.386 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 11:49:34.391 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 11:49:34.396 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 11:49:34.399 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:34.401 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 11:49:34.402 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 11:49:34.402 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 11:49:34.402 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 11:49:34.403 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:34.403 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 11:49:34.403 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 11:49:34.404 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 11:49:34.404 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 11:49:34.404 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:34.404 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 11:49:34.404 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 11:49:34.405 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 11:49:34.405 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 11:49:34.407 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 11:49:34.408 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:34.411 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:34.429 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:34.430 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:34.431 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 11:49:34.433 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 11:49:34.434 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 11:49:34.434 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:34.439 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 11:49:34.439 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:34.440 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 11:49:34.440 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 11:49:34.440 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 11:49:34.440 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 11:49:34.442 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:49:34.443 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 11:49:34.443 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 11:49:34.443 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 11:49:34.446 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:34.446 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 11:49:34.446 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 11:49:34.446 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 11:49:34.446 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 11:49:34.447 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 11:49:34.447 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:34.447 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 11:49:34.447 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 11:49:34.447 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 11:49:34.447 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 11:49:34.447 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:34.448 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 11:49:34.448 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 11:49:34.448 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 11:49:34.448 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 11:49:34.448 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:34.448 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 11:49:34.449 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 11:49:34.449 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 11:49:34.449 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 11:49:34.449 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 11:49:34.450 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:49:34.452 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 11:49:34.455 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 11:49:34.455 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 11:49:34.456 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 11:49:34.456 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 11:49:34.456 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 11:49:34.456 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 11:49:34.456 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 11:49:34.456 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 11:49:34.456 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 11:49:34.466 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 11:49:34.466 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 11:49:34.467 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:34.468 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 11:49:34.469 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 11:49:34.471 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 11:49:34.471 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:49:34.472 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:49:34.476 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:49:34.532 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 11:49:34.534 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 11:49:34.534 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 11:49:34.534 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 11:49:34.534 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 11:49:34.534 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 11:49:34.534 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 11:49:34.534 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 11:49:34.534 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 11:49:34.535 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 11:49:34.535 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 11:49:34.535 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 11:49:34.535 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 11:49:34.535 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 11:49:34.535 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 11:49:34.535 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 11:49:34.535 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 11:49:34.535 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 11:49:34.535 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 11:49:34.536 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 11:49:34.536 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 11:49:34.536 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 11:49:34.536 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 11:49:34.536 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 11:49:34.536 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 11:49:34.536 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 11:49:34.536 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 11:49:34.536 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 11:49:34.536 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 11:49:34.536 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 11:49:34.536 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 11:49:34.536 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 11:49:34.537 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 11:49:34.537 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 11:49:34.537 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 11:49:34.537 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 11:49:34.537 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 11:49:34.537 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 11:49:34.537 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 11:49:34.618 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 11:49:34.653 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 11:49:34.653 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.UserDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@456f7d9e, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 11:49:34.679 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 11:49:34.679 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 11:49:34.680 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 11:49:34.681 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7f2d31af] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@f2b90fc]
[DEBUG] 2019-10-02 11:49:34.761 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 11:49:34.761 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:49:34.786 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 11:49:34.786 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:49:35.202 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 11:49:35.202 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:49:35.202 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 11:49:35.202 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:49:35.276 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:35.276 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 11:49:35.276 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 11:49:35.277 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 11:49:35.277 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 11:49:35.286 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:49:35.286 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 11:49:35.286 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 11:49:35.287 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 11:49:35.287 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 11:49:35.287 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 11:49:35.287 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:49:35.324 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@437281c5]
[DEBUG] 2019-10-02 11:49:35.325 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 11:49:35.325 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 11:49:35.326 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 11:49:35.326 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 11:49:35.332 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9b3be1c]
[DEBUG] 2019-10-02 11:49:35.335 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f15a964]
[DEBUG] 2019-10-02 11:49:35.336 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 11:49:35.337 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 11:49:35.337 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 11:49:35.337 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 11:49:35.337 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 11:49:35.338 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 11:49:35.338 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:49:35.358 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:49:35.368 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 11:49:35.371 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:49:35.371 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21d9cd04]
[DEBUG] 2019-10-02 11:49:35.371 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 11:49:35.371 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 11:49:35.371 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 11:49:35.371 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 11:49:35.372 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33bdd01]
[DEBUG] 2019-10-02 11:49:35.372 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@159ac15f]
[DEBUG] 2019-10-02 11:49:35.372 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 11:49:35.372 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 11:49:35.372 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 11:49:35.372 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 11:49:35.372 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 11:49:35.372 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 11:49:35.372 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:49:35.372 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:49:35.374 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 11:49:35.374 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:49:35.392 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:49:35.393 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:49:35.393 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:49:35.393 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 11:49:35.393 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 11:49:35.393 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 11:49:35.393 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 11:49:35.394 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 11:49:35.394 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:49:35.394 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd0a0d0]
[DEBUG] 2019-10-02 11:49:35.394 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:49:35.394 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:49:35.394 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:49:35.394 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 11:49:35.394 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1796b2d4]
[DEBUG] 2019-10-02 11:49:35.395 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 11:49:35.396 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 11:49:35.396 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 11:49:35.396 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 11:49:35.396 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 11:49:35.396 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 11:49:35.396 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:49:35.396 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:49:35.398 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 11:49:35.398 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 11:49:35.398 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@200d1a3d]
[DEBUG] 2019-10-02 11:49:35.398 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:49:35.398 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:49:35.399 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:49:35.399 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 11:49:35.399 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12567179]
[DEBUG] 2019-10-02 11:49:35.399 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 11:49:35.399 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 11:49:35.399 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 11:49:35.399 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 11:49:35.399 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 11:49:35.399 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 11:49:35.400 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:49:35.400 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:49:35.400 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 11:49:35.401 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 11:49:35.401 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 11:49:35.402 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 11:49:35.408 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7661e474]
[DEBUG] 2019-10-02 11:49:35.408 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20ffb8d5]
[DEBUG] 2019-10-02 11:49:35.409 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:49:35.409 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:49:35.409 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:49:35.409 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 11:49:35.409 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 11:49:35.409 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:49:35.413 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:49:35.413 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 11:49:35.414 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 11:49:35.458 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 11:49:35.458 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 11:49:35.459 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 11:49:35.467 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 11:49:35.467 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 11:49:35.469 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 11:49:35.469 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 11:49:35.471 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5b44318
[DEBUG] 2019-10-02 11:49:35.472 [main] SessionFactoryRegistry - Registering SessionFactory: ef9be1ea-01ee-47e3-a49d-358f23eae817 (<unnamed>)
[DEBUG] 2019-10-02 11:49:35.473 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 11:49:35.605 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 11:49:35.615 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 11:49:35.615 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 11:49:35.638 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 11:49:35.643 [main] SQL - insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:49:35.673 [main] IdentifierGeneratorHelper - Natively generated identity: 8
[DEBUG] 2019-10-02 11:49:35.673 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:49:35.677 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 11:49:35.677 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:49:35.682 [main] IdentifierGeneratorHelper - Natively generated identity: 2
[DEBUG] 2019-10-02 11:49:35.682 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:49:35.685 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 11:49:35.686 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 11:49:35.687 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 11:49:35.692 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#8], was: [<unreferenced>] (initialized)
[DEBUG] 2019-10-02 11:49:35.694 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2019-10-02 11:49:35.694 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-02 11:49:35.696 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 11:49:35.696 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=, name=TestRecipe, ingredients=, id=2, user=null}
[DEBUG] 2019-10-02 11:49:35.697 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Alex, lastName=Malotky, recipes=[com.alexmalotky.entity.Recipe#2], id=8, userName=ajmalotky, email=}
[DEBUG] 2019-10-02 11:49:35.702 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:49:35.704 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:49:35.781 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2019-10-02 11:49:35.801 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@d28c214
[DEBUG] 2019-10-02 11:49:35.835 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.User as generatedAlias0
[DEBUG] 2019-10-02 11:49:35.844 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 11:49:35.853 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'alexmalotky'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-10-02 11:49:35.882 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-02 11:49:35.903 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.User (generatedAlias0) -> user0_
[DEBUG] 2019-10-02 11:49:35.905 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-10-02 11:49:35.908 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-02 11:49:35.908 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} users user0_ ) )
[DEBUG] 2019-10-02 11:49:35.921 [main] JoinProcessor - Using FROM fragment [users user0_]
[DEBUG] 2019-10-02 11:49:35.922 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-02 11:49:35.922 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_1_' {alias=generatedAlias0, className=com.alexmalotky.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_1_, user0_.first_name as first_na3_1_, user0_.last_name as last_nam4_1_, user0_.user_name as user_nam5_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.alexmalotky.entity.User}}

[DEBUG] 2019-10-02 11:49:35.922 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 11:49:35.930 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.User as generatedAlias0
[DEBUG] 2019-10-02 11:49:35.931 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_1_, user0_.email as email2_1_, user0_.first_name as first_na3_1_, user0_.last_name as last_nam4_1_, user0_.user_name as user_nam5_1_ from users user0_
[DEBUG] 2019-10-02 11:49:35.931 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 11:49:35.948 [main] SQL - select user0_.id as id1_1_, user0_.email as email2_1_, user0_.first_name as first_na3_1_, user0_.last_name as last_nam4_1_, user0_.user_name as user_nam5_1_ from users user0_
[DEBUG] 2019-10-02 11:49:35.953 [main] Loader - Result set row: 0
[DEBUG] 2019-10-02 11:49:35.955 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 11:49:35.958 [main] Loader - Result set row: 1
[DEBUG] 2019-10-02 11:49:35.958 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 11:49:35.959 [main] Loader - Result set row: 2
[DEBUG] 2019-10-02 11:49:35.959 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 11:49:35.960 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 11:49:35.960 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 11:49:35.960 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:35.961 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 11:49:35.961 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:35.961 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 11:49:35.961 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:35.961 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:49:35.961 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:35.963 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 11:49:35.964 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:35.964 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 11:49:35.964 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 11:49:35.964 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 11:49:35.964 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:35.964 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 11:49:35.964 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:35.964 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 11:49:35.964 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:35.964 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:49:35.964 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:35.964 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-02 11:49:35.965 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:35.965 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 11:49:35.965 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 11:49:35.965 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 11:49:35.965 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:35.965 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 11:49:35.965 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:35.965 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 11:49:35.965 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:35.965 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:49:35.965 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:35.966 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 11:49:35.966 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:35.966 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 11:49:35.969 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 11:49:35.970 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 11:49:35.974 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 11:49:35.979 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:35.979 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 11:49:35.979 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:35.979 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:49:35.979 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 11:49:35.980 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 11:49:35.980 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 11:49:35.982 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 11:49:35.982 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 11:49:35.985 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 11:49:35.992 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 11:49:35.992 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-02 11:49:35.992 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:35.992 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-02 11:49:35.993 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:35.993 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-02 11:49:35.993 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:35.993 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-02 11:49:35.993 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:35.993 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 11:49:35.993 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:35.993 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 11:49:35.993 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:35.994 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:49:35.994 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 11:49:35.994 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 11:49:35.994 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 11:49:35.996 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 11:49:35.997 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:35.997 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 11:49:35.997 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:35.997 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:49:35.997 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 11:49:36.000 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:49:36.065 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:49:36.071 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 11:49:36.071 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 11:49:36.072 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 11:49:36.072 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 11:49:36.072 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 11:49:36.073 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.073 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 11:49:36.073 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.073 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 11:49:36.073 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.073 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:49:36.073 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.073 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-02 11:49:36.073 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.073 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 11:49:36.074 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 11:49:36.074 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-02 11:49:36.074 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.074 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-02 11:49:36.074 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.074 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-02 11:49:36.074 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.074 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-02 11:49:36.074 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.074 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 11:49:36.075 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:36.075 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 11:49:36.075 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:36.075 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:49:36.076 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#2
[DEBUG] 2019-10-02 11:49:36.076 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:49:36.129 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:49:36.132 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 11:49:36.133 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 11:49:36.133 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 11:49:36.133 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 11:49:36.134 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 11:49:36.134 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.134 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 11:49:36.134 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.134 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 11:49:36.134 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.134 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:49:36.134 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.134 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 11:49:36.134 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.134 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 11:49:36.134 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:36.134 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 11:49:36.134 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:36.135 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:49:36.135 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#3
[DEBUG] 2019-10-02 11:49:36.135 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:49:36.137 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 11:49:36.138 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 11:49:36.147 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 11:49:36.147 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 11:49:36.147 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 11:49:36.148 [main] Collections - Collection dereferenced: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 11:49:36.148 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2019-10-02 11:49:36.148 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2019-10-02 11:49:36.148 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 11:49:36.149 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Ben, lastName=Wyatt, recipes=[], id=3, userName=test3, email=null}
[DEBUG] 2019-10-02 11:49:36.163 [main] SQL - delete from users where id=?
[DEBUG] 2019-10-02 11:49:36.171 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:49:36.172 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:49:36.172 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2019-10-02 11:49:36.172 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:49:36.176 [main] CollectionLoadContext - No collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:36.176 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:49:36.177 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#3
[DEBUG] 2019-10-02 11:49:36.177 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:49:36.224 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 11:49:36.225 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 11:49:36.227 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 11:49:36.227 [main] SQL - insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:49:36.229 [main] IdentifierGeneratorHelper - Natively generated identity: 9
[DEBUG] 2019-10-02 11:49:36.230 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:49:36.230 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 11:49:36.230 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 11:49:36.230 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 11:49:36.230 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#9], was: [<unreferenced>] (initialized)
[DEBUG] 2019-10-02 11:49:36.231 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-10-02 11:49:36.231 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-02 11:49:36.231 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 11:49:36.231 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Leroy, lastName=Jenkins, recipes=[], id=9, userName=Blah Blah Blah, email=null}
[DEBUG] 2019-10-02 11:49:36.235 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:49:36.237 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:49:36.237 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:49:36.242 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 11:49:36.243 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 11:49:36.243 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.alexmalotky.entity.User.recipes#9]
[DEBUG] 2019-10-02 11:49:36.243 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#9]
[DEBUG] 2019-10-02 11:49:36.243 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 11:49:36.243 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.243 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Leroy
[DEBUG] 2019-10-02 11:49:36.244 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.244 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jenkins
[DEBUG] 2019-10-02 11:49:36.244 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.244 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:49:36.244 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.244 [main] TwoPhaseLoad - Processing attribute `userName` : value = Blah Blah Blah
[DEBUG] 2019-10-02 11:49:36.244 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.244 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#9]
[DEBUG] 2019-10-02 11:49:36.244 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:36.244 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#9]
[DEBUG] 2019-10-02 11:49:36.244 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:36.245 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:49:36.245 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#9
[DEBUG] 2019-10-02 11:49:36.245 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:49:36.294 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:49:36.302 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 11:49:36.302 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 11:49:36.303 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 11:49:36.303 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 11:49:36.303 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 11:49:36.303 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.303 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 11:49:36.303 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.303 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 11:49:36.303 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.303 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:49:36.303 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.303 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 11:49:36.304 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:49:36.304 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 11:49:36.304 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:36.304 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 11:49:36.304 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:49:36.304 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:49:36.304 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#3
[DEBUG] 2019-10-02 11:49:36.304 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:49:36.313 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 11:49:36.314 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 11:49:36.315 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 11:49:36.316 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 11:49:36.316 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 11:49:36.316 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#3], was: [com.alexmalotky.entity.User.recipes#3] (initialized)
[DEBUG] 2019-10-02 11:49:36.317 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2019-10-02 11:49:36.317 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-02 11:49:36.317 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 11:49:36.317 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Ben, lastName=Wyatt, recipes=[], id=3, userName=test3, email=CalzoneZone@gmail.com}
[DEBUG] 2019-10-02 11:49:36.317 [main] SQL - update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 11:49:36.323 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:49:36.324 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:51:19.081 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 11:51:19.085 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 11:51:19.091 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 11:51:19.208 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 11:51:19.211 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 11:51:19.503 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 11:51:19.504 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 11:51:19.512 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 11:51:19.920 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 11:51:19.953 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 11:51:19.954 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 11:51:19.982 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 11:51:20.037 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@704641e3
[DEBUG] 2019-10-02 11:51:20.037 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@704641e3
[DEBUG] 2019-10-02 11:51:20.037 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@704641e3
[DEBUG] 2019-10-02 11:51:20.039 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5d7ca698
[DEBUG] 2019-10-02 11:51:20.040 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@16e7b402
[DEBUG] 2019-10-02 11:51:20.041 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@24db6ce
[DEBUG] 2019-10-02 11:51:20.043 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6c931d35
[DEBUG] 2019-10-02 11:51:20.043 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6c931d35
[DEBUG] 2019-10-02 11:51:20.043 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6c931d35
[DEBUG] 2019-10-02 11:51:20.045 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@476ee5b3
[DEBUG] 2019-10-02 11:51:20.046 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@476ee5b3
[DEBUG] 2019-10-02 11:51:20.046 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@476ee5b3
[DEBUG] 2019-10-02 11:51:20.047 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2dd2e270
[DEBUG] 2019-10-02 11:51:20.047 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2dd2e270
[DEBUG] 2019-10-02 11:51:20.048 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2dd2e270
[DEBUG] 2019-10-02 11:51:20.049 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@339a3670
[DEBUG] 2019-10-02 11:51:20.049 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@339a3670
[DEBUG] 2019-10-02 11:51:20.050 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@339a3670
[DEBUG] 2019-10-02 11:51:20.051 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5d51e129
[DEBUG] 2019-10-02 11:51:20.052 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5d51e129
[DEBUG] 2019-10-02 11:51:20.052 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5d51e129
[DEBUG] 2019-10-02 11:51:20.053 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@743e66f7
[DEBUG] 2019-10-02 11:51:20.054 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@743e66f7
[DEBUG] 2019-10-02 11:51:20.054 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@743e66f7
[DEBUG] 2019-10-02 11:51:20.055 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2133661d
[DEBUG] 2019-10-02 11:51:20.055 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2133661d
[DEBUG] 2019-10-02 11:51:20.056 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2133661d
[DEBUG] 2019-10-02 11:51:20.057 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3ad4a7d6
[DEBUG] 2019-10-02 11:51:20.057 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3ad4a7d6
[DEBUG] 2019-10-02 11:51:20.059 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@48840594
[DEBUG] 2019-10-02 11:51:20.059 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@48840594
[DEBUG] 2019-10-02 11:51:20.060 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1c7f96b1
[DEBUG] 2019-10-02 11:51:20.060 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1c7f96b1
[DEBUG] 2019-10-02 11:51:20.061 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7b6e5c12
[DEBUG] 2019-10-02 11:51:20.062 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@24e83d19
[DEBUG] 2019-10-02 11:51:20.063 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@35267fd4
[DEBUG] 2019-10-02 11:51:20.064 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@35267fd4
[DEBUG] 2019-10-02 11:51:20.065 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7661b5a
[DEBUG] 2019-10-02 11:51:20.065 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7661b5a
[DEBUG] 2019-10-02 11:51:20.077 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@13d9261f
[DEBUG] 2019-10-02 11:51:20.077 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@13d9261f
[DEBUG] 2019-10-02 11:51:20.079 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@25d93198
[DEBUG] 2019-10-02 11:51:20.080 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@25d93198
[DEBUG] 2019-10-02 11:51:20.082 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2e8a1ab4
[DEBUG] 2019-10-02 11:51:20.082 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2e8a1ab4
[DEBUG] 2019-10-02 11:51:20.084 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@64984b0f
[DEBUG] 2019-10-02 11:51:20.084 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@64984b0f
[DEBUG] 2019-10-02 11:51:20.086 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4b790d86
[DEBUG] 2019-10-02 11:51:20.086 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4b790d86
[DEBUG] 2019-10-02 11:51:20.088 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@52e04737
[DEBUG] 2019-10-02 11:51:20.088 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@52e04737
[DEBUG] 2019-10-02 11:51:20.111 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7a729f84
[DEBUG] 2019-10-02 11:51:20.111 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7a729f84
[DEBUG] 2019-10-02 11:51:20.113 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@8851ce1
[DEBUG] 2019-10-02 11:51:20.114 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@8851ce1
[DEBUG] 2019-10-02 11:51:20.115 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6eb17ec8
[DEBUG] 2019-10-02 11:51:20.115 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6eb17ec8
[DEBUG] 2019-10-02 11:51:20.117 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@6b2e46af
[DEBUG] 2019-10-02 11:51:20.117 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6b2e46af
[DEBUG] 2019-10-02 11:51:20.117 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6b2e46af
[DEBUG] 2019-10-02 11:51:20.118 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2af69643
[DEBUG] 2019-10-02 11:51:20.120 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5c77ba8f
[DEBUG] 2019-10-02 11:51:20.120 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5c77ba8f
[DEBUG] 2019-10-02 11:51:20.120 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5c77ba8f
[DEBUG] 2019-10-02 11:51:20.122 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a734c04
[DEBUG] 2019-10-02 11:51:20.124 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4ac86d6a
[DEBUG] 2019-10-02 11:51:20.124 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4ac86d6a
[DEBUG] 2019-10-02 11:51:20.126 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@23b8d9f3
[DEBUG] 2019-10-02 11:51:20.127 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@23b8d9f3
[DEBUG] 2019-10-02 11:51:20.128 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2127e66e
[DEBUG] 2019-10-02 11:51:20.128 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2127e66e
[DEBUG] 2019-10-02 11:51:20.130 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@60f70249
[DEBUG] 2019-10-02 11:51:20.136 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60f70249
[DEBUG] 2019-10-02 11:51:20.137 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5fa23c
[DEBUG] 2019-10-02 11:51:20.138 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5fa23c
[DEBUG] 2019-10-02 11:51:20.139 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@102ecc22
[DEBUG] 2019-10-02 11:51:20.141 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4eba373c
[DEBUG] 2019-10-02 11:51:20.141 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4eba373c
[DEBUG] 2019-10-02 11:51:20.141 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4eba373c
[DEBUG] 2019-10-02 11:51:20.143 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@75ae4a1f
[DEBUG] 2019-10-02 11:51:20.143 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@75ae4a1f
[DEBUG] 2019-10-02 11:51:20.143 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@75ae4a1f
[DEBUG] 2019-10-02 11:51:20.145 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@60bbacfc
[DEBUG] 2019-10-02 11:51:20.146 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7a0e7ecd
[DEBUG] 2019-10-02 11:51:20.148 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5b852b49
[DEBUG] 2019-10-02 11:51:20.148 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5b852b49
[DEBUG] 2019-10-02 11:51:20.148 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5b852b49
[DEBUG] 2019-10-02 11:51:20.150 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@80bfdc6
[DEBUG] 2019-10-02 11:51:20.150 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@80bfdc6
[DEBUG] 2019-10-02 11:51:20.150 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@80bfdc6
[DEBUG] 2019-10-02 11:51:20.151 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6981f8f3
[DEBUG] 2019-10-02 11:51:20.151 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@68a4dcc6
[DEBUG] 2019-10-02 11:51:20.154 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@55e42449
[DEBUG] 2019-10-02 11:51:20.154 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@55e42449
[DEBUG] 2019-10-02 11:51:20.155 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@cb7fa71
[DEBUG] 2019-10-02 11:51:20.156 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@77774571
[DEBUG] 2019-10-02 11:51:20.156 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@77774571
[DEBUG] 2019-10-02 11:51:20.159 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@68d7a2df
[DEBUG] 2019-10-02 11:51:20.159 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@68d7a2df
[DEBUG] 2019-10-02 11:51:20.159 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3ed7821
[DEBUG] 2019-10-02 11:51:20.160 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3ee0b4f7
[DEBUG] 2019-10-02 11:51:20.161 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6f94a5a5
[DEBUG] 2019-10-02 11:51:20.167 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6e0c6a7a
[DEBUG] 2019-10-02 11:51:20.167 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6e0c6a7a
[DEBUG] 2019-10-02 11:51:20.167 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@611a990b
[DEBUG] 2019-10-02 11:51:20.168 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7cbeac65
[DEBUG] 2019-10-02 11:51:20.168 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7fe82967
[DEBUG] 2019-10-02 11:51:20.168 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@50850539
[DEBUG] 2019-10-02 11:51:20.168 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65e21ce3
[DEBUG] 2019-10-02 11:51:20.168 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6c3659be
[DEBUG] 2019-10-02 11:51:20.168 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@522bf64e
[DEBUG] 2019-10-02 11:51:20.168 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2aff9dff
[DEBUG] 2019-10-02 11:51:20.222 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 11:51:20.223 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 11:51:20.225 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 11:51:20.225 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 11:51:20.226 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 11:51:20.228 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 11:51:20.229 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 11:51:20.231 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 11:51:20.233 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 11:51:20.234 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 11:51:20.235 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 11:51:20.235 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 11:51:20.235 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 11:51:20.237 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 11:51:20.246 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 11:51:20.246 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 11:51:20.247 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 11:51:20.539 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 11:51:20.811 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 11:51:20.812 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 11:51:20.812 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 11:51:20.874 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 11:51:20.905 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 11:51:20.950 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 11:51:21.051 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 11:51:21.059 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4f2d995e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@75156240]
[DEBUG] 2019-10-02 11:51:21.154 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:51:21.192 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 11:51:21.201 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 11:51:21.205 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 11:51:21.250 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:51:21.256 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 11:51:21.259 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 11:51:21.263 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 11:51:21.267 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 11:51:21.275 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 11:51:21.277 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:51:21.278 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 11:51:21.278 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 11:51:21.278 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 11:51:21.278 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 11:51:21.278 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:51:21.278 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 11:51:21.279 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 11:51:21.279 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 11:51:21.279 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 11:51:21.279 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:51:21.279 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 11:51:21.279 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 11:51:21.279 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 11:51:21.280 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 11:51:21.281 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 11:51:21.281 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:51:21.284 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:51:21.297 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:51:21.298 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:51:21.299 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 11:51:21.303 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 11:51:21.303 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 11:51:21.304 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:51:21.309 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 11:51:21.310 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:51:21.310 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 11:51:21.310 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 11:51:21.310 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 11:51:21.310 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 11:51:21.313 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:51:21.313 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 11:51:21.313 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 11:51:21.313 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 11:51:21.317 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:51:21.317 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 11:51:21.317 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 11:51:21.317 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 11:51:21.318 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 11:51:21.318 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 11:51:21.318 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:51:21.318 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 11:51:21.318 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 11:51:21.319 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 11:51:21.319 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 11:51:21.319 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:51:21.319 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 11:51:21.319 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 11:51:21.319 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 11:51:21.319 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 11:51:21.320 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:51:21.320 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 11:51:21.320 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 11:51:21.320 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 11:51:21.320 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 11:51:21.320 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 11:51:21.321 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:51:21.324 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 11:51:21.326 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 11:51:21.326 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 11:51:21.327 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 11:51:21.327 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 11:51:21.327 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 11:51:21.327 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 11:51:21.327 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 11:51:21.327 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 11:51:21.327 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 11:51:21.333 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 11:51:21.333 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 11:51:21.333 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:51:21.334 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 11:51:21.335 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 11:51:21.336 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 11:51:21.336 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:51:21.336 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:51:21.340 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:51:21.390 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 11:51:21.391 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 11:51:21.391 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 11:51:21.391 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 11:51:21.391 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 11:51:21.392 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 11:51:21.392 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 11:51:21.392 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 11:51:21.392 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 11:51:21.392 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 11:51:21.392 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 11:51:21.392 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 11:51:21.392 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 11:51:21.392 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 11:51:21.392 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 11:51:21.392 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 11:51:21.393 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 11:51:21.393 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 11:51:21.393 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 11:51:21.393 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 11:51:21.393 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 11:51:21.393 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 11:51:21.393 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 11:51:21.393 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 11:51:21.393 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 11:51:21.393 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 11:51:21.393 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 11:51:21.393 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 11:51:21.393 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 11:51:21.394 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 11:51:21.394 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 11:51:21.394 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 11:51:21.394 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 11:51:21.394 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 11:51:21.394 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 11:51:21.394 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 11:51:21.394 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 11:51:21.394 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 11:51:21.394 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 11:51:21.468 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 11:51:21.500 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 11:51:21.500 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.UserDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@faea4da, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 11:51:21.529 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 11:51:21.529 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 11:51:21.531 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 11:51:21.531 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4f2d995e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4877919f]
[DEBUG] 2019-10-02 11:51:21.607 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 11:51:21.608 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:51:21.633 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 11:51:21.633 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:51:22.036 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 11:51:22.036 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:51:22.037 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 11:51:22.037 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:51:22.090 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:51:22.090 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 11:51:22.090 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 11:51:22.091 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 11:51:22.091 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 11:51:22.096 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:51:22.096 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 11:51:22.096 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 11:51:22.096 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 11:51:22.096 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 11:51:22.096 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 11:51:22.096 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:51:22.127 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ef4cbe1]
[DEBUG] 2019-10-02 11:51:22.129 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 11:51:22.129 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 11:51:22.129 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 11:51:22.129 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 11:51:22.136 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14457a95]
[DEBUG] 2019-10-02 11:51:22.140 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e9bf744]
[DEBUG] 2019-10-02 11:51:22.142 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 11:51:22.142 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 11:51:22.142 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 11:51:22.142 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 11:51:22.142 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 11:51:22.143 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 11:51:22.143 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:51:22.163 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:51:22.175 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 11:51:22.179 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:51:22.179 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20ffb8d5]
[DEBUG] 2019-10-02 11:51:22.179 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 11:51:22.180 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 11:51:22.180 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 11:51:22.180 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 11:51:22.180 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57e03347]
[DEBUG] 2019-10-02 11:51:22.180 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2edb2f8b]
[DEBUG] 2019-10-02 11:51:22.180 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 11:51:22.180 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 11:51:22.180 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 11:51:22.180 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 11:51:22.180 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 11:51:22.181 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 11:51:22.181 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:51:22.181 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:51:22.182 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 11:51:22.182 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:51:22.203 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:51:22.203 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:51:22.204 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:51:22.204 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 11:51:22.204 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 11:51:22.204 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 11:51:22.204 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 11:51:22.204 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 11:51:22.204 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:51:22.204 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cc1bf20]
[DEBUG] 2019-10-02 11:51:22.204 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:51:22.204 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:51:22.204 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:51:22.204 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 11:51:22.205 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46cf8c07]
[DEBUG] 2019-10-02 11:51:22.205 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 11:51:22.206 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 11:51:22.206 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 11:51:22.206 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 11:51:22.206 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 11:51:22.206 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 11:51:22.206 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:51:22.206 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:51:22.207 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 11:51:22.207 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 11:51:22.207 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a136383]
[DEBUG] 2019-10-02 11:51:22.208 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:51:22.208 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:51:22.208 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:51:22.208 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 11:51:22.208 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38c460e8]
[DEBUG] 2019-10-02 11:51:22.208 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 11:51:22.208 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 11:51:22.208 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 11:51:22.209 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 11:51:22.209 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 11:51:22.209 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 11:51:22.209 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:51:22.209 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:51:22.210 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 11:51:22.210 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 11:51:22.210 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 11:51:22.211 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 11:51:22.219 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c472300]
[DEBUG] 2019-10-02 11:51:22.219 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f6494c0]
[DEBUG] 2019-10-02 11:51:22.219 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:51:22.219 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:51:22.220 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:51:22.220 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 11:51:22.220 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 11:51:22.220 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:51:22.223 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:51:22.223 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 11:51:22.224 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 11:51:22.271 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 11:51:22.271 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 11:51:22.272 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 11:51:22.281 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 11:51:22.281 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 11:51:22.283 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 11:51:22.283 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 11:51:22.285 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@305b43ca
[DEBUG] 2019-10-02 11:51:22.287 [main] SessionFactoryRegistry - Registering SessionFactory: ad9e2f18-2380-485f-9ef0-d28a2f828d1c (<unnamed>)
[DEBUG] 2019-10-02 11:51:22.287 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 11:51:22.386 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 11:51:22.398 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 11:51:22.398 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 11:51:22.422 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 11:51:22.427 [main] SQL - insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:51:22.458 [main] IdentifierGeneratorHelper - Natively generated identity: 10
[DEBUG] 2019-10-02 11:51:22.459 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:51:22.463 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 11:51:22.463 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:51:22.466 [main] IdentifierGeneratorHelper - Natively generated identity: 3
[DEBUG] 2019-10-02 11:51:22.467 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:51:22.469 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 11:51:22.470 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 11:51:22.472 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 11:51:22.477 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#10], was: [<unreferenced>] (initialized)
[DEBUG] 2019-10-02 11:51:22.479 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2019-10-02 11:51:22.479 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-02 11:51:22.481 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 11:51:22.482 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Alex, lastName=Malotky, recipes=[com.alexmalotky.entity.Recipe#3], id=10, userName=ajmalotky, email=}
[DEBUG] 2019-10-02 11:51:22.482 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=, name=TestRecipe, ingredients=, id=3, user=null}
[DEBUG] 2019-10-02 11:51:22.487 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:51:22.489 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:51:22.628 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2019-10-02 11:51:22.652 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2712e8f4
[DEBUG] 2019-10-02 11:51:22.706 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.User as generatedAlias0
[DEBUG] 2019-10-02 11:51:22.715 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 11:51:22.728 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'alexmalotky'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-10-02 11:51:22.768 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-02 11:51:22.790 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.User (generatedAlias0) -> user0_
[DEBUG] 2019-10-02 11:51:22.792 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-10-02 11:51:22.795 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-02 11:51:22.795 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} users user0_ ) )
[DEBUG] 2019-10-02 11:51:22.807 [main] JoinProcessor - Using FROM fragment [users user0_]
[DEBUG] 2019-10-02 11:51:22.808 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-02 11:51:22.809 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_1_' {alias=generatedAlias0, className=com.alexmalotky.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_1_, user0_.first_name as first_na3_1_, user0_.last_name as last_nam4_1_, user0_.user_name as user_nam5_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.alexmalotky.entity.User}}

[DEBUG] 2019-10-02 11:51:22.809 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 11:51:22.820 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.User as generatedAlias0
[DEBUG] 2019-10-02 11:51:22.820 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_1_, user0_.email as email2_1_, user0_.first_name as first_na3_1_, user0_.last_name as last_nam4_1_, user0_.user_name as user_nam5_1_ from users user0_
[DEBUG] 2019-10-02 11:51:22.820 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 11:51:22.847 [main] SQL - select user0_.id as id1_1_, user0_.email as email2_1_, user0_.first_name as first_na3_1_, user0_.last_name as last_nam4_1_, user0_.user_name as user_nam5_1_ from users user0_
[DEBUG] 2019-10-02 11:51:22.852 [main] Loader - Result set row: 0
[DEBUG] 2019-10-02 11:51:22.855 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 11:51:22.861 [main] Loader - Result set row: 1
[DEBUG] 2019-10-02 11:51:22.861 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 11:51:22.861 [main] Loader - Result set row: 2
[DEBUG] 2019-10-02 11:51:22.861 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 11:51:22.863 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 11:51:22.864 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 11:51:22.864 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.864 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 11:51:22.864 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.864 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 11:51:22.864 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.864 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:51:22.864 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.867 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 11:51:22.867 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.867 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 11:51:22.868 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 11:51:22.868 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 11:51:22.868 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.868 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 11:51:22.868 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.868 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 11:51:22.868 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.868 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:51:22.868 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.868 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-02 11:51:22.868 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.869 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 11:51:22.869 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 11:51:22.869 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 11:51:22.869 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.869 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 11:51:22.869 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.869 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 11:51:22.869 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.869 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:51:22.869 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.870 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 11:51:22.870 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.870 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 11:51:22.873 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 11:51:22.874 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 11:51:22.878 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 11:51:22.883 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:51:22.884 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 11:51:22.884 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:51:22.884 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:51:22.884 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 11:51:22.884 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 11:51:22.885 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 11:51:22.887 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 11:51:22.887 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 11:51:22.890 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 11:51:22.898 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 11:51:22.898 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-02 11:51:22.899 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.899 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-02 11:51:22.899 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.899 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-02 11:51:22.899 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.899 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-02 11:51:22.899 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.899 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 11:51:22.899 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:51:22.899 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 11:51:22.899 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:51:22.900 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:51:22.900 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 11:51:22.900 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 11:51:22.900 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 11:51:22.902 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 11:51:22.903 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:51:22.903 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 11:51:22.903 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:51:22.903 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:51:22.903 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 11:51:22.906 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:51:22.974 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:51:22.979 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 11:51:22.980 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 11:51:22.980 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 11:51:22.981 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 11:51:22.981 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 11:51:22.981 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.981 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 11:51:22.981 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.981 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 11:51:22.981 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.981 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:51:22.981 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.981 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-02 11:51:22.982 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.982 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 11:51:22.982 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 11:51:22.982 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-02 11:51:22.982 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.982 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-02 11:51:22.982 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.982 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-02 11:51:22.982 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.982 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-02 11:51:22.982 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:22.983 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 11:51:22.983 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:51:22.983 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 11:51:22.983 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:51:22.983 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:51:22.984 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#2
[DEBUG] 2019-10-02 11:51:22.984 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:51:23.035 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:51:23.039 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 11:51:23.040 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 11:51:23.040 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 11:51:23.041 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 11:51:23.041 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 11:51:23.041 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:23.041 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 11:51:23.041 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:23.041 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 11:51:23.041 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:23.041 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:51:23.041 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:23.042 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 11:51:23.042 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:23.042 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 11:51:23.042 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:51:23.042 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 11:51:23.042 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:51:23.042 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:51:23.043 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#3
[DEBUG] 2019-10-02 11:51:23.043 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:51:23.044 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 11:51:23.045 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 11:51:23.053 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 11:51:23.054 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 11:51:23.054 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 11:51:23.054 [main] Collections - Collection dereferenced: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 11:51:23.054 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2019-10-02 11:51:23.055 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2019-10-02 11:51:23.058 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 11:51:23.059 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Ben, lastName=Wyatt, recipes=[], id=3, userName=test3, email=null}
[DEBUG] 2019-10-02 11:51:23.068 [main] SQL - delete from users where id=?
[DEBUG] 2019-10-02 11:51:23.077 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:51:23.079 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:51:23.079 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2019-10-02 11:51:23.079 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:51:23.086 [main] CollectionLoadContext - No collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:51:23.086 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:51:23.087 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#3
[DEBUG] 2019-10-02 11:51:23.087 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:51:23.143 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 11:51:23.143 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 11:51:23.145 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 11:51:23.145 [main] SQL - insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:51:23.148 [main] IdentifierGeneratorHelper - Natively generated identity: 11
[DEBUG] 2019-10-02 11:51:23.148 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:51:23.149 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 11:51:23.149 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 11:51:23.149 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 11:51:23.149 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#11], was: [<unreferenced>] (initialized)
[DEBUG] 2019-10-02 11:51:23.149 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-10-02 11:51:23.150 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-02 11:51:23.150 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 11:51:23.150 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Leroy, lastName=Jenkins, recipes=[], id=11, userName=Blah Blah Blah, email=null}
[DEBUG] 2019-10-02 11:51:23.154 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:51:23.156 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:51:23.157 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:51:23.160 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 11:51:23.160 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 11:51:23.161 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.alexmalotky.entity.User.recipes#11]
[DEBUG] 2019-10-02 11:51:23.161 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#11]
[DEBUG] 2019-10-02 11:51:23.161 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 11:51:23.161 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:23.162 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Leroy
[DEBUG] 2019-10-02 11:51:23.162 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:23.162 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jenkins
[DEBUG] 2019-10-02 11:51:23.162 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:23.162 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:51:23.162 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:23.162 [main] TwoPhaseLoad - Processing attribute `userName` : value = Blah Blah Blah
[DEBUG] 2019-10-02 11:51:23.162 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:23.162 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#11]
[DEBUG] 2019-10-02 11:51:23.162 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:51:23.163 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#11]
[DEBUG] 2019-10-02 11:51:23.163 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:51:23.163 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:51:23.163 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#11
[DEBUG] 2019-10-02 11:51:23.163 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:51:23.207 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:51:23.210 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 11:51:23.210 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 11:51:23.210 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 11:51:23.210 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 11:51:23.210 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 11:51:23.210 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:23.211 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 11:51:23.211 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:23.211 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 11:51:23.211 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:23.211 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:51:23.211 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:23.211 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 11:51:23.211 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:51:23.211 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 11:51:23.211 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:51:23.211 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 11:51:23.211 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:51:23.211 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:51:23.212 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#3
[DEBUG] 2019-10-02 11:51:23.212 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:51:23.214 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 11:51:23.214 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 11:51:23.215 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 11:51:23.216 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 11:51:23.216 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 11:51:23.216 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#3], was: [com.alexmalotky.entity.User.recipes#3] (initialized)
[DEBUG] 2019-10-02 11:51:23.216 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2019-10-02 11:51:23.217 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-02 11:51:23.217 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 11:51:23.217 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Ben, lastName=Wyatt, recipes=[], id=3, userName=test3, email=CalzoneZone@gmail.com}
[DEBUG] 2019-10-02 11:51:23.217 [main] SQL - update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 11:51:23.222 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:51:23.223 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:57:22.620 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 11:57:22.624 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 11:57:22.631 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 11:57:22.767 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 11:57:22.771 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 11:57:23.138 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 11:57:23.139 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 11:57:23.166 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 11:57:23.782 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 11:57:23.831 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 11:57:23.833 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 11:57:23.876 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 11:57:23.934 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2a367e93
[DEBUG] 2019-10-02 11:57:23.934 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2a367e93
[DEBUG] 2019-10-02 11:57:23.935 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2a367e93
[DEBUG] 2019-10-02 11:57:23.935 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@70211df5
[DEBUG] 2019-10-02 11:57:23.936 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@78b612c6
[DEBUG] 2019-10-02 11:57:23.937 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@69d23296
[DEBUG] 2019-10-02 11:57:23.939 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@187e5235
[DEBUG] 2019-10-02 11:57:23.939 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@187e5235
[DEBUG] 2019-10-02 11:57:23.939 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@187e5235
[DEBUG] 2019-10-02 11:57:23.941 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3f1ef9d6
[DEBUG] 2019-10-02 11:57:23.941 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3f1ef9d6
[DEBUG] 2019-10-02 11:57:23.942 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3f1ef9d6
[DEBUG] 2019-10-02 11:57:23.943 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5b3bb1f7
[DEBUG] 2019-10-02 11:57:23.943 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5b3bb1f7
[DEBUG] 2019-10-02 11:57:23.944 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5b3bb1f7
[DEBUG] 2019-10-02 11:57:23.945 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7d0d91a1
[DEBUG] 2019-10-02 11:57:23.945 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7d0d91a1
[DEBUG] 2019-10-02 11:57:23.945 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7d0d91a1
[DEBUG] 2019-10-02 11:57:23.947 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3d64c581
[DEBUG] 2019-10-02 11:57:23.947 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3d64c581
[DEBUG] 2019-10-02 11:57:23.947 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3d64c581
[DEBUG] 2019-10-02 11:57:23.949 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2fdf17dc
[DEBUG] 2019-10-02 11:57:23.949 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2fdf17dc
[DEBUG] 2019-10-02 11:57:23.949 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2fdf17dc
[DEBUG] 2019-10-02 11:57:23.950 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7ff8a9dc
[DEBUG] 2019-10-02 11:57:23.951 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7ff8a9dc
[DEBUG] 2019-10-02 11:57:23.951 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7ff8a9dc
[DEBUG] 2019-10-02 11:57:23.953 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@71e35c4
[DEBUG] 2019-10-02 11:57:23.953 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@71e35c4
[DEBUG] 2019-10-02 11:57:23.954 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@51d719bc
[DEBUG] 2019-10-02 11:57:23.955 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@51d719bc
[DEBUG] 2019-10-02 11:57:23.956 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7847ef2c
[DEBUG] 2019-10-02 11:57:23.957 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7847ef2c
[DEBUG] 2019-10-02 11:57:23.957 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@41dc0598
[DEBUG] 2019-10-02 11:57:23.958 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@60d40ff4
[DEBUG] 2019-10-02 11:57:23.960 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5d96bdf8
[DEBUG] 2019-10-02 11:57:23.960 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5d96bdf8
[DEBUG] 2019-10-02 11:57:23.961 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@441b8382
[DEBUG] 2019-10-02 11:57:23.962 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@441b8382
[DEBUG] 2019-10-02 11:57:23.976 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4fa822ad
[DEBUG] 2019-10-02 11:57:23.977 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4fa822ad
[DEBUG] 2019-10-02 11:57:23.979 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@24d61e4
[DEBUG] 2019-10-02 11:57:23.979 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@24d61e4
[DEBUG] 2019-10-02 11:57:23.982 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2d5ef498
[DEBUG] 2019-10-02 11:57:23.982 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2d5ef498
[DEBUG] 2019-10-02 11:57:23.984 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@506a1372
[DEBUG] 2019-10-02 11:57:23.984 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@506a1372
[DEBUG] 2019-10-02 11:57:23.986 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4fe64d23
[DEBUG] 2019-10-02 11:57:23.987 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4fe64d23
[DEBUG] 2019-10-02 11:57:23.989 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4ba6ec50
[DEBUG] 2019-10-02 11:57:23.989 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4ba6ec50
[DEBUG] 2019-10-02 11:57:23.993 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f324455
[DEBUG] 2019-10-02 11:57:23.993 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@f324455
[DEBUG] 2019-10-02 11:57:23.995 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@54067fdc
[DEBUG] 2019-10-02 11:57:23.996 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@54067fdc
[DEBUG] 2019-10-02 11:57:23.997 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@49c17ba4
[DEBUG] 2019-10-02 11:57:23.998 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@49c17ba4
[DEBUG] 2019-10-02 11:57:23.999 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4a37191a
[DEBUG] 2019-10-02 11:57:23.999 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4a37191a
[DEBUG] 2019-10-02 11:57:23.999 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4a37191a
[DEBUG] 2019-10-02 11:57:24.002 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@b112b13
[DEBUG] 2019-10-02 11:57:24.004 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@58a2b917
[DEBUG] 2019-10-02 11:57:24.004 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@58a2b917
[DEBUG] 2019-10-02 11:57:24.004 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@58a2b917
[DEBUG] 2019-10-02 11:57:24.005 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1386313f
[DEBUG] 2019-10-02 11:57:24.007 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@35e26d05
[DEBUG] 2019-10-02 11:57:24.007 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35e26d05
[DEBUG] 2019-10-02 11:57:24.009 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@61f6d381
[DEBUG] 2019-10-02 11:57:24.009 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61f6d381
[DEBUG] 2019-10-02 11:57:24.010 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7d57dbb5
[DEBUG] 2019-10-02 11:57:24.010 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7d57dbb5
[DEBUG] 2019-10-02 11:57:24.011 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@39e69ea7
[DEBUG] 2019-10-02 11:57:24.012 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@39e69ea7
[DEBUG] 2019-10-02 11:57:24.013 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@61ab89b0
[DEBUG] 2019-10-02 11:57:24.013 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@61ab89b0
[DEBUG] 2019-10-02 11:57:24.014 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7e4c72d6
[DEBUG] 2019-10-02 11:57:24.016 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1921994e
[DEBUG] 2019-10-02 11:57:24.016 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1921994e
[DEBUG] 2019-10-02 11:57:24.017 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1921994e
[DEBUG] 2019-10-02 11:57:24.018 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2e09c51
[DEBUG] 2019-10-02 11:57:24.019 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2e09c51
[DEBUG] 2019-10-02 11:57:24.019 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2e09c51
[DEBUG] 2019-10-02 11:57:24.034 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1a3e8e24
[DEBUG] 2019-10-02 11:57:24.034 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3bc4ef12
[DEBUG] 2019-10-02 11:57:24.036 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@75e09567
[DEBUG] 2019-10-02 11:57:24.036 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@75e09567
[DEBUG] 2019-10-02 11:57:24.037 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@75e09567
[DEBUG] 2019-10-02 11:57:24.038 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ddeaa5f
[DEBUG] 2019-10-02 11:57:24.039 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ddeaa5f
[DEBUG] 2019-10-02 11:57:24.039 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ddeaa5f
[DEBUG] 2019-10-02 11:57:24.040 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@210d2a6c
[DEBUG] 2019-10-02 11:57:24.041 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2e3572e8
[DEBUG] 2019-10-02 11:57:24.044 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@44d64d4e
[DEBUG] 2019-10-02 11:57:24.044 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@44d64d4e
[DEBUG] 2019-10-02 11:57:24.045 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@47ac613b
[DEBUG] 2019-10-02 11:57:24.048 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3902bd2c
[DEBUG] 2019-10-02 11:57:24.055 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3902bd2c
[DEBUG] 2019-10-02 11:57:24.063 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@51a18b21
[DEBUG] 2019-10-02 11:57:24.063 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51a18b21
[DEBUG] 2019-10-02 11:57:24.064 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2806d6da
[DEBUG] 2019-10-02 11:57:24.071 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6bccd036
[DEBUG] 2019-10-02 11:57:24.073 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@52bf7bf6
[DEBUG] 2019-10-02 11:57:24.080 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1b2df3aa
[DEBUG] 2019-10-02 11:57:24.080 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1b2df3aa
[DEBUG] 2019-10-02 11:57:24.081 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@551e4c6d
[DEBUG] 2019-10-02 11:57:24.082 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@625a9c5d
[DEBUG] 2019-10-02 11:57:24.082 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5d1e0fbb
[DEBUG] 2019-10-02 11:57:24.082 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2eed37f4
[DEBUG] 2019-10-02 11:57:24.082 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@9b76b60
[DEBUG] 2019-10-02 11:57:24.082 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3fb9a67f
[DEBUG] 2019-10-02 11:57:24.083 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@127705e4
[DEBUG] 2019-10-02 11:57:24.083 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5562c2c9
[DEBUG] 2019-10-02 11:57:24.136 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 11:57:24.137 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 11:57:24.139 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 11:57:24.139 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 11:57:24.140 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 11:57:24.142 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 11:57:24.143 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 11:57:24.150 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 11:57:24.151 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 11:57:24.152 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 11:57:24.153 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 11:57:24.154 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 11:57:24.154 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 11:57:24.156 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 11:57:24.168 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 11:57:24.168 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 11:57:24.168 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 11:57:24.541 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 11:57:24.830 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 11:57:24.830 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 11:57:24.830 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 11:57:24.879 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 11:57:24.918 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 11:57:24.989 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 11:57:25.132 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 11:57:25.140 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e29f4f6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@41b64020]
[DEBUG] 2019-10-02 11:57:25.262 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:57:25.338 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 11:57:25.350 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 11:57:25.358 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 11:57:25.470 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:25.478 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 11:57:25.483 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 11:57:25.488 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 11:57:25.496 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 11:57:25.504 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 11:57:25.507 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:25.507 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 11:57:25.507 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 11:57:25.507 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 11:57:25.508 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 11:57:25.508 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:25.508 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 11:57:25.509 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 11:57:25.509 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 11:57:25.509 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 11:57:25.510 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:25.510 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 11:57:25.510 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 11:57:25.517 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 11:57:25.519 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 11:57:25.524 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 11:57:25.527 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:25.535 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:25.557 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:25.558 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:25.561 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 11:57:25.565 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 11:57:25.565 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 11:57:25.567 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:57:25.572 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 11:57:25.573 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:25.573 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 11:57:25.573 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 11:57:25.573 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 11:57:25.574 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 11:57:25.577 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:57:25.577 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 11:57:25.578 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 11:57:25.578 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 11:57:25.583 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:25.583 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 11:57:25.583 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 11:57:25.583 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 11:57:25.584 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 11:57:25.584 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 11:57:25.584 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:25.584 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 11:57:25.585 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 11:57:25.585 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 11:57:25.585 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 11:57:25.586 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:25.586 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 11:57:25.586 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 11:57:25.586 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 11:57:25.586 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 11:57:25.586 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:25.587 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 11:57:25.587 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 11:57:25.587 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 11:57:25.587 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 11:57:25.587 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 11:57:25.588 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:25.590 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 11:57:25.594 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 11:57:25.594 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 11:57:25.594 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 11:57:25.595 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 11:57:25.595 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 11:57:25.595 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 11:57:25.595 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 11:57:25.595 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 11:57:25.595 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 11:57:25.604 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 11:57:25.605 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 11:57:25.605 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:57:25.607 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 11:57:25.608 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 11:57:25.610 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 11:57:25.611 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:57:25.611 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:57:25.617 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:57:25.688 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 11:57:25.690 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 11:57:25.690 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 11:57:25.691 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 11:57:25.691 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 11:57:25.691 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 11:57:25.691 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 11:57:25.691 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 11:57:25.691 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 11:57:25.691 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 11:57:25.691 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 11:57:25.691 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 11:57:25.691 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 11:57:25.692 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 11:57:25.692 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 11:57:25.692 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 11:57:25.692 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 11:57:25.692 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 11:57:25.692 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 11:57:25.692 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 11:57:25.692 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 11:57:25.692 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 11:57:25.692 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 11:57:25.693 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 11:57:25.693 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 11:57:25.693 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 11:57:25.693 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 11:57:25.693 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 11:57:25.693 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 11:57:25.693 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 11:57:25.693 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 11:57:25.693 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 11:57:25.694 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 11:57:25.694 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 11:57:25.694 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 11:57:25.694 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 11:57:25.694 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 11:57:25.694 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 11:57:25.694 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 11:57:25.818 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 11:57:25.858 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 11:57:25.858 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.UserDaoTest,testInsertNewRecipe, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, jboss.modules.system.pkgs=com.intellij.rt, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5d194314, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 11:57:25.900 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 11:57:25.900 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 11:57:25.902 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 11:57:25.902 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e29f4f6] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6094de13]
[DEBUG] 2019-10-02 11:57:25.997 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 11:57:25.997 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:57:26.060 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 11:57:26.060 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:57:26.525 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 11:57:26.525 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:57:26.526 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 11:57:26.526 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:57:26.568 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:57:26.568 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 11:57:26.568 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 11:57:26.568 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 11:57:26.568 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 11:57:26.574 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:57:26.574 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 11:57:26.574 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 11:57:26.574 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 11:57:26.575 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 11:57:26.575 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 11:57:26.575 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:57:26.608 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31f31b20]
[DEBUG] 2019-10-02 11:57:26.610 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 11:57:26.610 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 11:57:26.610 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 11:57:26.610 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 11:57:26.620 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e3ee128]
[DEBUG] 2019-10-02 11:57:26.623 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c6927f0]
[DEBUG] 2019-10-02 11:57:26.626 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 11:57:26.626 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 11:57:26.626 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 11:57:26.626 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 11:57:26.626 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 11:57:26.627 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 11:57:26.627 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:57:26.646 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:57:26.656 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 11:57:26.659 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:57:26.659 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56d822dc]
[DEBUG] 2019-10-02 11:57:26.660 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 11:57:26.660 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 11:57:26.660 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 11:57:26.660 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 11:57:26.660 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21b744ec]
[DEBUG] 2019-10-02 11:57:26.660 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@697a92af]
[DEBUG] 2019-10-02 11:57:26.660 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 11:57:26.660 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 11:57:26.660 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 11:57:26.660 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 11:57:26.660 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 11:57:26.660 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 11:57:26.660 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:57:26.661 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:57:26.661 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 11:57:26.662 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:57:26.680 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:57:26.681 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:57:26.681 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:57:26.681 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 11:57:26.681 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 11:57:26.681 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 11:57:26.681 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 11:57:26.681 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 11:57:26.681 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:57:26.682 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53dba9cd]
[DEBUG] 2019-10-02 11:57:26.682 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:57:26.682 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:57:26.682 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:57:26.682 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 11:57:26.682 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5834198f]
[DEBUG] 2019-10-02 11:57:26.683 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 11:57:26.683 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 11:57:26.683 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 11:57:26.683 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 11:57:26.683 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 11:57:26.683 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 11:57:26.683 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:57:26.684 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:57:26.684 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 11:57:26.684 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 11:57:26.684 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1573e8a5]
[DEBUG] 2019-10-02 11:57:26.685 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:57:26.685 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:57:26.685 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:57:26.685 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 11:57:26.685 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69f9b561]
[DEBUG] 2019-10-02 11:57:26.685 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 11:57:26.685 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 11:57:26.685 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 11:57:26.685 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 11:57:26.685 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 11:57:26.685 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 11:57:26.685 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:57:26.686 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:57:26.686 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 11:57:26.686 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 11:57:26.686 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 11:57:26.687 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 11:57:26.694 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@559fd5ec]
[DEBUG] 2019-10-02 11:57:26.695 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bb12f41]
[DEBUG] 2019-10-02 11:57:26.695 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:57:26.695 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:57:26.695 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:57:26.695 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 11:57:26.695 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 11:57:26.695 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:57:26.699 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:57:26.700 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 11:57:26.701 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 11:57:26.748 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 11:57:26.748 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 11:57:26.749 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 11:57:26.757 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 11:57:26.758 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 11:57:26.760 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 11:57:26.760 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 11:57:26.762 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5a8d676e
[DEBUG] 2019-10-02 11:57:26.765 [main] SessionFactoryRegistry - Registering SessionFactory: 6d7f8914-a6b3-419c-b306-6e345b395a55 (<unnamed>)
[DEBUG] 2019-10-02 11:57:26.765 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 11:57:26.876 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 11:57:26.888 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 11:57:26.888 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 11:57:26.915 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 11:57:26.922 [main] SQL - insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:57:26.956 [main] IdentifierGeneratorHelper - Natively generated identity: 12
[DEBUG] 2019-10-02 11:57:26.956 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:57:26.961 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 11:57:26.961 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:57:26.966 [main] IdentifierGeneratorHelper - Natively generated identity: 4
[DEBUG] 2019-10-02 11:57:26.966 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:57:26.969 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 11:57:26.970 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 11:57:26.972 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 11:57:26.980 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#12], was: [<unreferenced>] (initialized)
[DEBUG] 2019-10-02 11:57:26.982 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2019-10-02 11:57:26.983 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-02 11:57:26.985 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 11:57:26.985 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Alex, lastName=Malotky, recipes=[com.alexmalotky.entity.Recipe#4], id=12, userName=ajmalotky, email=}
[DEBUG] 2019-10-02 11:57:26.985 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=, name=TestRecipe, ingredients=, id=4, user=null}
[DEBUG] 2019-10-02 11:57:26.991 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:57:26.992 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:57:27.007 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:57:27.015 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 11:57:27.018 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 11:57:27.022 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.alexmalotky.entity.User.recipes#12]
[DEBUG] 2019-10-02 11:57:27.027 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#12]
[DEBUG] 2019-10-02 11:57:27.027 [main] TwoPhaseLoad - Processing attribute `email` : value = 
[DEBUG] 2019-10-02 11:57:27.028 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:57:27.028 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 11:57:27.028 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:57:27.028 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 11:57:27.028 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:57:27.028 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:57:27.028 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:57:27.028 [main] TwoPhaseLoad - Processing attribute `userName` : value = ajmalotky
[DEBUG] 2019-10-02 11:57:27.028 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:57:27.028 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#12]
[DEBUG] 2019-10-02 11:57:27.029 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:57:27.029 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#12]
[DEBUG] 2019-10-02 11:57:27.029 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:57:27.029 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:57:27.030 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#12
[DEBUG] 2019-10-02 11:57:27.030 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:57:39.368 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 11:57:39.372 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 11:57:39.379 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 11:57:39.506 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 11:57:39.509 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 11:57:39.783 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 11:57:39.785 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 11:57:39.795 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 11:57:40.210 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 11:57:40.248 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 11:57:40.250 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 11:57:40.292 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 11:57:40.350 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6850b758
[DEBUG] 2019-10-02 11:57:40.350 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6850b758
[DEBUG] 2019-10-02 11:57:40.351 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6850b758
[DEBUG] 2019-10-02 11:57:40.352 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4207609e
[DEBUG] 2019-10-02 11:57:40.352 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c6c82aa
[DEBUG] 2019-10-02 11:57:40.353 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3bddc676
[DEBUG] 2019-10-02 11:57:40.356 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@22e5f96e
[DEBUG] 2019-10-02 11:57:40.356 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@22e5f96e
[DEBUG] 2019-10-02 11:57:40.356 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@22e5f96e
[DEBUG] 2019-10-02 11:57:40.358 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3b4d50b
[DEBUG] 2019-10-02 11:57:40.359 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3b4d50b
[DEBUG] 2019-10-02 11:57:40.359 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3b4d50b
[DEBUG] 2019-10-02 11:57:40.360 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@31a3f4de
[DEBUG] 2019-10-02 11:57:40.361 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@31a3f4de
[DEBUG] 2019-10-02 11:57:40.361 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@31a3f4de
[DEBUG] 2019-10-02 11:57:40.363 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@14fa92af
[DEBUG] 2019-10-02 11:57:40.363 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@14fa92af
[DEBUG] 2019-10-02 11:57:40.363 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14fa92af
[DEBUG] 2019-10-02 11:57:40.365 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@360bc645
[DEBUG] 2019-10-02 11:57:40.365 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@360bc645
[DEBUG] 2019-10-02 11:57:40.365 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@360bc645
[DEBUG] 2019-10-02 11:57:40.366 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2a331b46
[DEBUG] 2019-10-02 11:57:40.366 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2a331b46
[DEBUG] 2019-10-02 11:57:40.366 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2a331b46
[DEBUG] 2019-10-02 11:57:40.368 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@304d0259
[DEBUG] 2019-10-02 11:57:40.368 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@304d0259
[DEBUG] 2019-10-02 11:57:40.368 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@304d0259
[DEBUG] 2019-10-02 11:57:40.369 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7915bca3
[DEBUG] 2019-10-02 11:57:40.369 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7915bca3
[DEBUG] 2019-10-02 11:57:40.371 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@eca6a74
[DEBUG] 2019-10-02 11:57:40.371 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@eca6a74
[DEBUG] 2019-10-02 11:57:40.372 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1442f788
[DEBUG] 2019-10-02 11:57:40.372 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1442f788
[DEBUG] 2019-10-02 11:57:40.374 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7a04fea7
[DEBUG] 2019-10-02 11:57:40.374 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@124ac145
[DEBUG] 2019-10-02 11:57:40.376 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@37e0292a
[DEBUG] 2019-10-02 11:57:40.376 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@37e0292a
[DEBUG] 2019-10-02 11:57:40.377 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@9b21bd3
[DEBUG] 2019-10-02 11:57:40.377 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@9b21bd3
[DEBUG] 2019-10-02 11:57:40.389 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@644ded04
[DEBUG] 2019-10-02 11:57:40.389 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@644ded04
[DEBUG] 2019-10-02 11:57:40.392 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@62e93c3a
[DEBUG] 2019-10-02 11:57:40.392 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@62e93c3a
[DEBUG] 2019-10-02 11:57:40.394 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5f038248
[DEBUG] 2019-10-02 11:57:40.395 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5f038248
[DEBUG] 2019-10-02 11:57:40.397 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1deceb67
[DEBUG] 2019-10-02 11:57:40.397 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1deceb67
[DEBUG] 2019-10-02 11:57:40.399 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d5c04f9
[DEBUG] 2019-10-02 11:57:40.399 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d5c04f9
[DEBUG] 2019-10-02 11:57:40.416 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6724cdec
[DEBUG] 2019-10-02 11:57:40.417 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6724cdec
[DEBUG] 2019-10-02 11:57:40.422 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e8ab90f
[DEBUG] 2019-10-02 11:57:40.422 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e8ab90f
[DEBUG] 2019-10-02 11:57:40.425 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5e65afb6
[DEBUG] 2019-10-02 11:57:40.426 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5e65afb6
[DEBUG] 2019-10-02 11:57:40.428 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5d21202d
[DEBUG] 2019-10-02 11:57:40.428 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d21202d
[DEBUG] 2019-10-02 11:57:40.430 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1dba4e06
[DEBUG] 2019-10-02 11:57:40.437 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1dba4e06
[DEBUG] 2019-10-02 11:57:40.438 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1dba4e06
[DEBUG] 2019-10-02 11:57:40.440 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2f37f1f9
[DEBUG] 2019-10-02 11:57:40.442 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@146dcfe6
[DEBUG] 2019-10-02 11:57:40.443 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@146dcfe6
[DEBUG] 2019-10-02 11:57:40.443 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@146dcfe6
[DEBUG] 2019-10-02 11:57:40.445 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1b1f5012
[DEBUG] 2019-10-02 11:57:40.447 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@25290bca
[DEBUG] 2019-10-02 11:57:40.447 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@25290bca
[DEBUG] 2019-10-02 11:57:40.449 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@210308d5
[DEBUG] 2019-10-02 11:57:40.450 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@210308d5
[DEBUG] 2019-10-02 11:57:40.451 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6ede46f6
[DEBUG] 2019-10-02 11:57:40.452 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6ede46f6
[DEBUG] 2019-10-02 11:57:40.453 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@10a0fe30
[DEBUG] 2019-10-02 11:57:40.453 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10a0fe30
[DEBUG] 2019-10-02 11:57:40.455 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6920614
[DEBUG] 2019-10-02 11:57:40.455 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6920614
[DEBUG] 2019-10-02 11:57:40.456 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@433348bc
[DEBUG] 2019-10-02 11:57:40.458 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6403e24c
[DEBUG] 2019-10-02 11:57:40.458 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6403e24c
[DEBUG] 2019-10-02 11:57:40.458 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6403e24c
[DEBUG] 2019-10-02 11:57:40.460 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@227a47
[DEBUG] 2019-10-02 11:57:40.460 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@227a47
[DEBUG] 2019-10-02 11:57:40.460 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@227a47
[DEBUG] 2019-10-02 11:57:40.462 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@421056e5
[DEBUG] 2019-10-02 11:57:40.463 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@255eaa6b
[DEBUG] 2019-10-02 11:57:40.464 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7aac8884
[DEBUG] 2019-10-02 11:57:40.464 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7aac8884
[DEBUG] 2019-10-02 11:57:40.465 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7aac8884
[DEBUG] 2019-10-02 11:57:40.467 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@895416d
[DEBUG] 2019-10-02 11:57:40.467 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@895416d
[DEBUG] 2019-10-02 11:57:40.467 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@895416d
[DEBUG] 2019-10-02 11:57:40.468 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4c6007fb
[DEBUG] 2019-10-02 11:57:40.469 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2eae4349
[DEBUG] 2019-10-02 11:57:40.472 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6dd1c3ed
[DEBUG] 2019-10-02 11:57:40.472 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6dd1c3ed
[DEBUG] 2019-10-02 11:57:40.473 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6dfa915a
[DEBUG] 2019-10-02 11:57:40.475 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1e7ab390
[DEBUG] 2019-10-02 11:57:40.476 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1e7ab390
[DEBUG] 2019-10-02 11:57:40.478 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4b200971
[DEBUG] 2019-10-02 11:57:40.479 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b200971
[DEBUG] 2019-10-02 11:57:40.479 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12fcc71f
[DEBUG] 2019-10-02 11:57:40.480 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4f0f7849
[DEBUG] 2019-10-02 11:57:40.483 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@25ad4f71
[DEBUG] 2019-10-02 11:57:40.489 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@62dbe64e
[DEBUG] 2019-10-02 11:57:40.489 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62dbe64e
[DEBUG] 2019-10-02 11:57:40.490 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7baf1f5a
[DEBUG] 2019-10-02 11:57:40.490 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6cc86152
[DEBUG] 2019-10-02 11:57:40.491 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@611a990b
[DEBUG] 2019-10-02 11:57:40.491 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7cbeac65
[DEBUG] 2019-10-02 11:57:40.491 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7fe82967
[DEBUG] 2019-10-02 11:57:40.491 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@50850539
[DEBUG] 2019-10-02 11:57:40.491 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@65e21ce3
[DEBUG] 2019-10-02 11:57:40.492 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6c3659be
[DEBUG] 2019-10-02 11:57:40.544 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 11:57:40.545 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 11:57:40.546 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 11:57:40.547 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 11:57:40.548 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 11:57:40.550 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 11:57:40.551 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 11:57:40.553 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 11:57:40.555 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 11:57:40.556 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 11:57:40.557 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 11:57:40.558 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 11:57:40.558 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 11:57:40.560 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 11:57:40.568 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 11:57:40.569 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 11:57:40.569 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 11:57:40.868 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 11:57:41.096 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 11:57:41.097 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 11:57:41.097 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 11:57:41.157 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 11:57:41.206 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 11:57:41.313 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 11:57:41.407 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 11:57:41.416 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4a3bd45b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@34c70b5e]
[DEBUG] 2019-10-02 11:57:41.516 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:57:41.564 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 11:57:41.576 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 11:57:41.583 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 11:57:41.643 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:41.647 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 11:57:41.649 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 11:57:41.657 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 11:57:41.661 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 11:57:41.667 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 11:57:41.669 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:41.669 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 11:57:41.670 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 11:57:41.670 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 11:57:41.670 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 11:57:41.671 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:41.671 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 11:57:41.671 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 11:57:41.671 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 11:57:41.671 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 11:57:41.671 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:41.672 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 11:57:41.672 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 11:57:41.672 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 11:57:41.672 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 11:57:41.675 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 11:57:41.675 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:41.680 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:41.698 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:41.699 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:41.700 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 11:57:41.704 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 11:57:41.704 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 11:57:41.706 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:57:41.710 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 11:57:41.712 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:41.712 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 11:57:41.712 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 11:57:41.712 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 11:57:41.712 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 11:57:41.715 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:57:41.715 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 11:57:41.715 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 11:57:41.716 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 11:57:41.720 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:41.720 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 11:57:41.720 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 11:57:41.720 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 11:57:41.720 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 11:57:41.721 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 11:57:41.721 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:41.721 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 11:57:41.721 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 11:57:41.721 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 11:57:41.722 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 11:57:41.722 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:41.722 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 11:57:41.722 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 11:57:41.722 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 11:57:41.722 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 11:57:41.723 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:41.723 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 11:57:41.723 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 11:57:41.723 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 11:57:41.723 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 11:57:41.723 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 11:57:41.724 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:57:41.726 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 11:57:41.730 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 11:57:41.731 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 11:57:41.731 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 11:57:41.731 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 11:57:41.731 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 11:57:41.731 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 11:57:41.731 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 11:57:41.731 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 11:57:41.731 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 11:57:41.740 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 11:57:41.740 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 11:57:41.740 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:57:41.741 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 11:57:41.742 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 11:57:41.744 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 11:57:41.744 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:57:41.745 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:57:41.749 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:57:41.811 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 11:57:41.813 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 11:57:41.814 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 11:57:41.814 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 11:57:41.814 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 11:57:41.814 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 11:57:41.814 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 11:57:41.814 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 11:57:41.814 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 11:57:41.814 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 11:57:41.815 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 11:57:41.815 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 11:57:41.815 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 11:57:41.815 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 11:57:41.815 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 11:57:41.815 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 11:57:41.815 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 11:57:41.815 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 11:57:41.815 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 11:57:41.815 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 11:57:41.815 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 11:57:41.815 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 11:57:41.815 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 11:57:41.815 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 11:57:41.815 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 11:57:41.815 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 11:57:41.815 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 11:57:41.815 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 11:57:41.816 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 11:57:41.816 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 11:57:41.816 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 11:57:41.816 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 11:57:41.816 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 11:57:41.816 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 11:57:41.816 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 11:57:41.816 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 11:57:41.816 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 11:57:41.816 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 11:57:41.817 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 11:57:41.894 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 11:57:41.926 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 11:57:41.926 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.UserDaoTest,testInsertNewRecipe, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3292d91a, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 11:57:41.958 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 11:57:41.958 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 11:57:41.959 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 11:57:41.959 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4a3bd45b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4e0cc334]
[DEBUG] 2019-10-02 11:57:42.029 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 11:57:42.030 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:57:42.061 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 11:57:42.061 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:57:42.419 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 11:57:42.419 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:57:42.419 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 11:57:42.419 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:57:42.459 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:57:42.459 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 11:57:42.459 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 11:57:42.459 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 11:57:42.459 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 11:57:42.464 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:57:42.464 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 11:57:42.464 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 11:57:42.465 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 11:57:42.465 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 11:57:42.465 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 11:57:42.465 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:57:42.493 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3db6dd52]
[DEBUG] 2019-10-02 11:57:42.494 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 11:57:42.495 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 11:57:42.495 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 11:57:42.495 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 11:57:42.501 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ac044ef]
[DEBUG] 2019-10-02 11:57:42.504 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24e5389c]
[DEBUG] 2019-10-02 11:57:42.506 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 11:57:42.506 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 11:57:42.506 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 11:57:42.506 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 11:57:42.507 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 11:57:42.507 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 11:57:42.508 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:57:42.523 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:57:42.531 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 11:57:42.534 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:57:42.534 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7282af25]
[DEBUG] 2019-10-02 11:57:42.534 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 11:57:42.534 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 11:57:42.534 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 11:57:42.534 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 11:57:42.534 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20ffb8d5]
[DEBUG] 2019-10-02 11:57:42.534 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@307c59ea]
[DEBUG] 2019-10-02 11:57:42.534 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 11:57:42.534 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 11:57:42.534 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 11:57:42.535 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 11:57:42.535 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 11:57:42.535 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 11:57:42.535 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:57:42.535 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:57:42.536 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 11:57:42.536 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:57:42.553 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:57:42.553 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:57:42.554 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:57:42.554 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 11:57:42.554 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 11:57:42.554 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 11:57:42.554 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 11:57:42.554 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 11:57:42.554 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:57:42.554 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42c54bad]
[DEBUG] 2019-10-02 11:57:42.554 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:57:42.554 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:57:42.554 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:57:42.554 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 11:57:42.555 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cc1bf20]
[DEBUG] 2019-10-02 11:57:42.555 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 11:57:42.555 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 11:57:42.555 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 11:57:42.556 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 11:57:42.556 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 11:57:42.556 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 11:57:42.556 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:57:42.556 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:57:42.557 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 11:57:42.557 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 11:57:42.557 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@375084c9]
[DEBUG] 2019-10-02 11:57:42.557 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:57:42.557 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:57:42.557 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:57:42.557 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 11:57:42.558 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a136383]
[DEBUG] 2019-10-02 11:57:42.558 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 11:57:42.558 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 11:57:42.558 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 11:57:42.558 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 11:57:42.558 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 11:57:42.558 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 11:57:42.558 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:57:42.558 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:57:42.559 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 11:57:42.559 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 11:57:42.559 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 11:57:42.560 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 11:57:42.567 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@421ead7e]
[DEBUG] 2019-10-02 11:57:42.568 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dcf0772]
[DEBUG] 2019-10-02 11:57:42.568 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:57:42.568 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:57:42.568 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:57:42.569 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 11:57:42.569 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 11:57:42.569 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:57:42.573 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:57:42.574 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 11:57:42.575 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 11:57:42.619 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 11:57:42.619 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 11:57:42.619 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 11:57:42.626 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 11:57:42.626 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 11:57:42.628 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 11:57:42.628 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 11:57:42.630 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6e0d16a4
[DEBUG] 2019-10-02 11:57:42.632 [main] SessionFactoryRegistry - Registering SessionFactory: 9719ce56-fcda-4a79-ba8b-6869b09c854c (<unnamed>)
[DEBUG] 2019-10-02 11:57:42.632 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 11:57:42.726 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 11:57:42.739 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 11:57:42.739 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 11:57:42.763 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 11:57:42.768 [main] SQL - insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:57:42.805 [main] IdentifierGeneratorHelper - Natively generated identity: 13
[DEBUG] 2019-10-02 11:57:42.806 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:57:42.813 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 11:57:42.814 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:57:42.821 [main] IdentifierGeneratorHelper - Natively generated identity: 5
[DEBUG] 2019-10-02 11:57:42.822 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:57:42.827 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 11:57:42.829 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 11:57:42.832 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 11:57:42.845 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#13], was: [<unreferenced>] (initialized)
[DEBUG] 2019-10-02 11:57:42.849 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2019-10-02 11:57:42.849 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-02 11:57:42.852 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 11:57:42.853 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Alex, lastName=Malotky, recipes=[com.alexmalotky.entity.Recipe#5], id=13, userName=ajmalotky, email=}
[DEBUG] 2019-10-02 11:57:42.853 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=, name=TestRecipe, ingredients=, id=5, user=null}
[DEBUG] 2019-10-02 11:57:42.859 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:57:42.861 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:57:42.885 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:57:42.893 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 11:57:42.895 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 11:57:42.900 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.alexmalotky.entity.User.recipes#13]
[DEBUG] 2019-10-02 11:57:42.905 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#13]
[DEBUG] 2019-10-02 11:57:42.905 [main] TwoPhaseLoad - Processing attribute `email` : value = 
[DEBUG] 2019-10-02 11:57:42.905 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:57:42.905 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 11:57:42.905 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:57:42.905 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 11:57:42.905 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:57:42.905 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:57:42.905 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:57:42.906 [main] TwoPhaseLoad - Processing attribute `userName` : value = ajmalotky
[DEBUG] 2019-10-02 11:57:42.906 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:57:42.906 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#13]
[DEBUG] 2019-10-02 11:57:42.906 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:57:42.906 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#13]
[DEBUG] 2019-10-02 11:57:42.906 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:57:42.907 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:57:42.907 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#13
[DEBUG] 2019-10-02 11:57:42.907 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:58:43.760 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 11:58:43.763 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 11:58:43.771 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 11:58:43.889 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 11:58:43.892 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 11:58:44.168 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 11:58:44.170 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 11:58:44.178 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 11:58:44.643 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 11:58:44.673 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 11:58:44.674 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 11:58:44.701 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 11:58:44.771 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6850b758
[DEBUG] 2019-10-02 11:58:44.771 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6850b758
[DEBUG] 2019-10-02 11:58:44.772 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6850b758
[DEBUG] 2019-10-02 11:58:44.772 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4207609e
[DEBUG] 2019-10-02 11:58:44.774 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c6c82aa
[DEBUG] 2019-10-02 11:58:44.775 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3bddc676
[DEBUG] 2019-10-02 11:58:44.777 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@22e5f96e
[DEBUG] 2019-10-02 11:58:44.777 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@22e5f96e
[DEBUG] 2019-10-02 11:58:44.777 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@22e5f96e
[DEBUG] 2019-10-02 11:58:44.780 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3b4d50b
[DEBUG] 2019-10-02 11:58:44.780 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3b4d50b
[DEBUG] 2019-10-02 11:58:44.780 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3b4d50b
[DEBUG] 2019-10-02 11:58:44.783 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@31a3f4de
[DEBUG] 2019-10-02 11:58:44.783 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@31a3f4de
[DEBUG] 2019-10-02 11:58:44.783 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@31a3f4de
[DEBUG] 2019-10-02 11:58:44.786 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@14fa92af
[DEBUG] 2019-10-02 11:58:44.786 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@14fa92af
[DEBUG] 2019-10-02 11:58:44.786 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14fa92af
[DEBUG] 2019-10-02 11:58:44.789 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@360bc645
[DEBUG] 2019-10-02 11:58:44.789 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@360bc645
[DEBUG] 2019-10-02 11:58:44.789 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@360bc645
[DEBUG] 2019-10-02 11:58:44.791 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2a331b46
[DEBUG] 2019-10-02 11:58:44.791 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2a331b46
[DEBUG] 2019-10-02 11:58:44.791 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2a331b46
[DEBUG] 2019-10-02 11:58:44.793 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@304d0259
[DEBUG] 2019-10-02 11:58:44.793 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@304d0259
[DEBUG] 2019-10-02 11:58:44.793 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@304d0259
[DEBUG] 2019-10-02 11:58:44.795 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7915bca3
[DEBUG] 2019-10-02 11:58:44.796 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7915bca3
[DEBUG] 2019-10-02 11:58:44.798 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@eca6a74
[DEBUG] 2019-10-02 11:58:44.798 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@eca6a74
[DEBUG] 2019-10-02 11:58:44.800 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1442f788
[DEBUG] 2019-10-02 11:58:44.800 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1442f788
[DEBUG] 2019-10-02 11:58:44.802 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7a04fea7
[DEBUG] 2019-10-02 11:58:44.803 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@124ac145
[DEBUG] 2019-10-02 11:58:44.805 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@37e0292a
[DEBUG] 2019-10-02 11:58:44.806 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@37e0292a
[DEBUG] 2019-10-02 11:58:44.808 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@9b21bd3
[DEBUG] 2019-10-02 11:58:44.809 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@9b21bd3
[DEBUG] 2019-10-02 11:58:44.823 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@644ded04
[DEBUG] 2019-10-02 11:58:44.823 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@644ded04
[DEBUG] 2019-10-02 11:58:44.826 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@62e93c3a
[DEBUG] 2019-10-02 11:58:44.826 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@62e93c3a
[DEBUG] 2019-10-02 11:58:44.829 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5f038248
[DEBUG] 2019-10-02 11:58:44.830 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5f038248
[DEBUG] 2019-10-02 11:58:44.833 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1deceb67
[DEBUG] 2019-10-02 11:58:44.833 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1deceb67
[DEBUG] 2019-10-02 11:58:44.835 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d5c04f9
[DEBUG] 2019-10-02 11:58:44.836 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d5c04f9
[DEBUG] 2019-10-02 11:58:44.838 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6724cdec
[DEBUG] 2019-10-02 11:58:44.838 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6724cdec
[DEBUG] 2019-10-02 11:58:44.864 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e8ab90f
[DEBUG] 2019-10-02 11:58:44.865 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e8ab90f
[DEBUG] 2019-10-02 11:58:44.870 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5e65afb6
[DEBUG] 2019-10-02 11:58:44.870 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5e65afb6
[DEBUG] 2019-10-02 11:58:44.872 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5d21202d
[DEBUG] 2019-10-02 11:58:44.873 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d21202d
[DEBUG] 2019-10-02 11:58:44.875 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1dba4e06
[DEBUG] 2019-10-02 11:58:44.875 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1dba4e06
[DEBUG] 2019-10-02 11:58:44.880 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1dba4e06
[DEBUG] 2019-10-02 11:58:44.883 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2f37f1f9
[DEBUG] 2019-10-02 11:58:44.885 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@146dcfe6
[DEBUG] 2019-10-02 11:58:44.886 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@146dcfe6
[DEBUG] 2019-10-02 11:58:44.887 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@146dcfe6
[DEBUG] 2019-10-02 11:58:44.897 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1b1f5012
[DEBUG] 2019-10-02 11:58:44.899 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@25290bca
[DEBUG] 2019-10-02 11:58:44.900 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@25290bca
[DEBUG] 2019-10-02 11:58:44.903 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@210308d5
[DEBUG] 2019-10-02 11:58:44.903 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@210308d5
[DEBUG] 2019-10-02 11:58:44.905 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6ede46f6
[DEBUG] 2019-10-02 11:58:44.905 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6ede46f6
[DEBUG] 2019-10-02 11:58:44.907 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@10a0fe30
[DEBUG] 2019-10-02 11:58:44.907 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10a0fe30
[DEBUG] 2019-10-02 11:58:44.909 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6920614
[DEBUG] 2019-10-02 11:58:44.909 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6920614
[DEBUG] 2019-10-02 11:58:44.909 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@433348bc
[DEBUG] 2019-10-02 11:58:44.911 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6403e24c
[DEBUG] 2019-10-02 11:58:44.911 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6403e24c
[DEBUG] 2019-10-02 11:58:44.911 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6403e24c
[DEBUG] 2019-10-02 11:58:44.913 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@227a47
[DEBUG] 2019-10-02 11:58:44.913 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@227a47
[DEBUG] 2019-10-02 11:58:44.913 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@227a47
[DEBUG] 2019-10-02 11:58:44.915 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@421056e5
[DEBUG] 2019-10-02 11:58:44.916 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@255eaa6b
[DEBUG] 2019-10-02 11:58:44.918 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7aac8884
[DEBUG] 2019-10-02 11:58:44.918 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7aac8884
[DEBUG] 2019-10-02 11:58:44.919 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7aac8884
[DEBUG] 2019-10-02 11:58:44.921 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@895416d
[DEBUG] 2019-10-02 11:58:44.921 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@895416d
[DEBUG] 2019-10-02 11:58:44.921 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@895416d
[DEBUG] 2019-10-02 11:58:44.922 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4c6007fb
[DEBUG] 2019-10-02 11:58:44.924 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2eae4349
[DEBUG] 2019-10-02 11:58:44.927 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6dd1c3ed
[DEBUG] 2019-10-02 11:58:44.927 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6dd1c3ed
[DEBUG] 2019-10-02 11:58:44.928 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6dfa915a
[DEBUG] 2019-10-02 11:58:44.931 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1e7ab390
[DEBUG] 2019-10-02 11:58:44.932 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1e7ab390
[DEBUG] 2019-10-02 11:58:44.935 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4b200971
[DEBUG] 2019-10-02 11:58:44.935 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b200971
[DEBUG] 2019-10-02 11:58:44.936 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12fcc71f
[DEBUG] 2019-10-02 11:58:44.937 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4f0f7849
[DEBUG] 2019-10-02 11:58:44.940 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@25ad4f71
[DEBUG] 2019-10-02 11:58:44.947 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@62dbe64e
[DEBUG] 2019-10-02 11:58:44.947 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62dbe64e
[DEBUG] 2019-10-02 11:58:44.949 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7baf1f5a
[DEBUG] 2019-10-02 11:58:44.949 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6cc86152
[DEBUG] 2019-10-02 11:58:44.949 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@611a990b
[DEBUG] 2019-10-02 11:58:44.949 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7cbeac65
[DEBUG] 2019-10-02 11:58:44.949 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7fe82967
[DEBUG] 2019-10-02 11:58:44.950 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@50850539
[DEBUG] 2019-10-02 11:58:44.950 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@65e21ce3
[DEBUG] 2019-10-02 11:58:44.950 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6c3659be
[DEBUG] 2019-10-02 11:58:45.007 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 11:58:45.008 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 11:58:45.010 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 11:58:45.010 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 11:58:45.011 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 11:58:45.013 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 11:58:45.015 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 11:58:45.017 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 11:58:45.019 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 11:58:45.020 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 11:58:45.021 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 11:58:45.022 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 11:58:45.022 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 11:58:45.024 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 11:58:45.032 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 11:58:45.033 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 11:58:45.033 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 11:58:45.249 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 11:58:45.510 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 11:58:45.511 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 11:58:45.511 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 11:58:45.565 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 11:58:45.605 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 11:58:45.644 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 11:58:45.721 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 11:58:45.729 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4a3bd45b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@34c70b5e]
[DEBUG] 2019-10-02 11:58:45.839 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:58:45.877 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 11:58:45.884 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 11:58:45.888 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 11:58:45.928 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:58:45.932 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 11:58:45.934 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 11:58:45.938 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 11:58:45.941 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 11:58:45.947 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 11:58:45.949 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:58:45.949 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 11:58:45.950 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 11:58:45.950 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 11:58:45.950 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 11:58:45.950 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:58:45.950 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 11:58:45.950 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 11:58:45.951 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 11:58:45.951 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 11:58:45.951 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:58:45.951 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 11:58:45.952 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 11:58:45.952 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 11:58:45.952 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 11:58:45.954 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 11:58:45.955 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:58:45.958 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:58:45.974 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:58:45.975 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:58:45.976 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 11:58:45.979 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 11:58:45.979 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 11:58:45.980 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:58:45.983 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 11:58:45.984 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:58:45.984 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 11:58:45.985 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 11:58:45.985 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 11:58:45.985 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 11:58:45.988 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:58:45.988 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 11:58:45.988 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 11:58:45.988 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 11:58:45.991 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:58:45.991 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 11:58:45.991 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 11:58:45.991 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 11:58:45.992 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 11:58:45.992 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 11:58:45.992 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:58:45.992 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 11:58:45.992 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 11:58:45.992 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 11:58:45.993 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 11:58:45.993 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:58:45.993 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 11:58:45.993 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 11:58:45.993 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 11:58:45.993 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 11:58:45.993 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:58:45.993 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 11:58:45.994 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 11:58:45.994 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 11:58:45.994 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 11:58:45.994 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 11:58:45.994 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 11:58:45.997 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 11:58:45.999 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 11:58:46.000 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 11:58:46.000 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 11:58:46.000 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 11:58:46.000 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 11:58:46.000 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 11:58:46.000 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 11:58:46.000 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 11:58:46.000 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 11:58:46.009 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 11:58:46.009 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 11:58:46.009 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:58:46.011 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 11:58:46.012 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 11:58:46.014 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 11:58:46.014 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:58:46.014 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:58:46.020 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:58:46.079 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 11:58:46.081 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 11:58:46.081 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 11:58:46.081 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 11:58:46.081 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 11:58:46.081 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 11:58:46.081 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 11:58:46.081 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 11:58:46.081 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 11:58:46.082 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 11:58:46.082 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 11:58:46.082 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 11:58:46.082 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 11:58:46.082 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 11:58:46.082 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 11:58:46.082 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 11:58:46.082 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 11:58:46.082 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 11:58:46.082 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 11:58:46.082 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 11:58:46.083 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 11:58:46.083 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 11:58:46.083 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 11:58:46.083 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 11:58:46.083 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 11:58:46.083 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 11:58:46.083 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 11:58:46.083 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 11:58:46.083 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 11:58:46.083 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 11:58:46.083 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 11:58:46.084 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 11:58:46.084 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 11:58:46.084 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 11:58:46.084 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 11:58:46.084 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 11:58:46.084 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 11:58:46.084 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 11:58:46.084 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 11:58:46.168 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 11:58:46.203 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 11:58:46.203 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.UserDaoTest,testInsertNewRecipe, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3292d91a, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 11:58:46.231 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 11:58:46.231 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 11:58:46.232 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 11:58:46.233 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4a3bd45b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4e0cc334]
[DEBUG] 2019-10-02 11:58:46.311 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 11:58:46.311 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:58:46.343 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 11:58:46.344 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:58:46.733 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 11:58:46.733 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:58:46.734 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 11:58:46.734 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:58:46.784 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:58:46.784 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 11:58:46.784 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 11:58:46.784 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 11:58:46.784 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 11:58:46.789 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 11:58:46.789 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 11:58:46.789 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 11:58:46.789 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 11:58:46.789 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 11:58:46.789 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 11:58:46.790 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:58:46.818 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3db6dd52]
[DEBUG] 2019-10-02 11:58:46.820 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 11:58:46.820 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 11:58:46.820 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 11:58:46.820 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 11:58:46.828 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ac044ef]
[DEBUG] 2019-10-02 11:58:46.832 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24e5389c]
[DEBUG] 2019-10-02 11:58:46.834 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 11:58:46.834 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 11:58:46.834 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 11:58:46.834 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 11:58:46.834 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 11:58:46.835 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 11:58:46.835 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:58:46.851 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:58:46.859 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 11:58:46.862 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:58:46.862 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7282af25]
[DEBUG] 2019-10-02 11:58:46.862 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 11:58:46.862 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 11:58:46.863 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 11:58:46.863 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 11:58:46.863 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20ffb8d5]
[DEBUG] 2019-10-02 11:58:46.863 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@307c59ea]
[DEBUG] 2019-10-02 11:58:46.863 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 11:58:46.863 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 11:58:46.863 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 11:58:46.863 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 11:58:46.863 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 11:58:46.863 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 11:58:46.863 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:58:46.864 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:58:46.864 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 11:58:46.864 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:58:46.880 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:58:46.881 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:58:46.881 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 11:58:46.881 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 11:58:46.881 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 11:58:46.881 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 11:58:46.882 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 11:58:46.882 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 11:58:46.882 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:58:46.882 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42c54bad]
[DEBUG] 2019-10-02 11:58:46.882 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:58:46.882 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:58:46.882 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:58:46.882 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 11:58:46.882 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cc1bf20]
[DEBUG] 2019-10-02 11:58:46.883 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 11:58:46.883 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 11:58:46.883 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 11:58:46.883 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 11:58:46.883 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 11:58:46.883 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 11:58:46.883 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:58:46.884 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:58:46.884 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 11:58:46.885 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 11:58:46.885 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@375084c9]
[DEBUG] 2019-10-02 11:58:46.885 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:58:46.885 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:58:46.885 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:58:46.885 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 11:58:46.885 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a136383]
[DEBUG] 2019-10-02 11:58:46.885 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 11:58:46.886 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 11:58:46.886 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 11:58:46.886 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 11:58:46.886 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 11:58:46.886 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 11:58:46.886 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:58:46.886 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:58:46.887 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 11:58:46.887 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 11:58:46.887 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 11:58:46.887 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 11:58:46.893 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@421ead7e]
[DEBUG] 2019-10-02 11:58:46.893 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dcf0772]
[DEBUG] 2019-10-02 11:58:46.893 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 11:58:46.893 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 11:58:46.893 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 11:58:46.893 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 11:58:46.893 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 11:58:46.894 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 11:58:46.896 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 11:58:46.897 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 11:58:46.897 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 11:58:46.941 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 11:58:46.942 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 11:58:46.942 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 11:58:46.950 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 11:58:46.951 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 11:58:46.952 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 11:58:46.953 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 11:58:46.955 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6e0d16a4
[DEBUG] 2019-10-02 11:58:46.957 [main] SessionFactoryRegistry - Registering SessionFactory: 7cd135e3-8996-40ab-8526-01ec07879fe3 (<unnamed>)
[DEBUG] 2019-10-02 11:58:46.957 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 11:58:47.063 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 11:58:47.076 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 11:58:47.076 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 11:58:47.103 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 11:58:47.109 [main] SQL - insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:58:47.144 [main] IdentifierGeneratorHelper - Natively generated identity: 14
[DEBUG] 2019-10-02 11:58:47.144 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:58:47.148 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 11:58:47.148 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 11:58:47.151 [main] IdentifierGeneratorHelper - Natively generated identity: 6
[DEBUG] 2019-10-02 11:58:47.152 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:58:47.154 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 11:58:47.155 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 11:58:47.156 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 11:58:47.161 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#14], was: [<unreferenced>] (initialized)
[DEBUG] 2019-10-02 11:58:47.163 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2019-10-02 11:58:47.163 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-02 11:58:47.165 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 11:58:47.165 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Alex, lastName=Malotky, recipes=[com.alexmalotky.entity.Recipe#6], id=14, userName=ajmalotky, email=}
[DEBUG] 2019-10-02 11:58:47.165 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=, name=TestRecipe, ingredients=, id=6, user=null}
[DEBUG] 2019-10-02 11:58:47.170 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:58:47.171 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:58:47.185 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 11:58:47.193 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 11:58:47.195 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 11:58:47.200 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.alexmalotky.entity.User.recipes#14]
[DEBUG] 2019-10-02 11:58:47.206 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#14]
[DEBUG] 2019-10-02 11:58:47.206 [main] TwoPhaseLoad - Processing attribute `email` : value = 
[DEBUG] 2019-10-02 11:58:47.206 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:58:47.206 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 11:58:47.206 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:58:47.206 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 11:58:47.206 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:58:47.206 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 11:58:47.207 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:58:47.207 [main] TwoPhaseLoad - Processing attribute `userName` : value = ajmalotky
[DEBUG] 2019-10-02 11:58:47.207 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 11:58:47.207 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#14]
[DEBUG] 2019-10-02 11:58:47.208 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:58:47.208 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#14]
[DEBUG] 2019-10-02 11:58:47.208 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 11:58:47.208 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 11:58:47.209 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#14
[DEBUG] 2019-10-02 11:58:47.209 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 11:59:58.667 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 11:59:58.670 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 11:59:58.677 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 11:59:58.795 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 11:59:58.798 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 11:59:59.059 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 11:59:59.060 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 11:59:59.069 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 11:59:59.488 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 11:59:59.515 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 11:59:59.517 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 11:59:59.544 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 11:59:59.587 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7dd611c8
[DEBUG] 2019-10-02 11:59:59.587 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7dd611c8
[DEBUG] 2019-10-02 11:59:59.587 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7dd611c8
[DEBUG] 2019-10-02 11:59:59.588 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@278667fd
[DEBUG] 2019-10-02 11:59:59.589 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@e042c99
[DEBUG] 2019-10-02 11:59:59.589 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f4f5330
[DEBUG] 2019-10-02 11:59:59.591 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2b34e38c
[DEBUG] 2019-10-02 11:59:59.591 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2b34e38c
[DEBUG] 2019-10-02 11:59:59.591 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2b34e38c
[DEBUG] 2019-10-02 11:59:59.592 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@468dda3e
[DEBUG] 2019-10-02 11:59:59.593 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@468dda3e
[DEBUG] 2019-10-02 11:59:59.593 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@468dda3e
[DEBUG] 2019-10-02 11:59:59.594 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@67f3d192
[DEBUG] 2019-10-02 11:59:59.594 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@67f3d192
[DEBUG] 2019-10-02 11:59:59.594 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@67f3d192
[DEBUG] 2019-10-02 11:59:59.596 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6b4283c4
[DEBUG] 2019-10-02 11:59:59.596 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6b4283c4
[DEBUG] 2019-10-02 11:59:59.596 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6b4283c4
[DEBUG] 2019-10-02 11:59:59.597 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7e744f43
[DEBUG] 2019-10-02 11:59:59.597 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7e744f43
[DEBUG] 2019-10-02 11:59:59.598 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e744f43
[DEBUG] 2019-10-02 11:59:59.599 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@49ec6a9f
[DEBUG] 2019-10-02 11:59:59.599 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@49ec6a9f
[DEBUG] 2019-10-02 11:59:59.599 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@49ec6a9f
[DEBUG] 2019-10-02 11:59:59.600 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@70cccd8f
[DEBUG] 2019-10-02 11:59:59.600 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@70cccd8f
[DEBUG] 2019-10-02 11:59:59.601 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@70cccd8f
[DEBUG] 2019-10-02 11:59:59.602 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1a0b5323
[DEBUG] 2019-10-02 11:59:59.602 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1a0b5323
[DEBUG] 2019-10-02 11:59:59.603 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@41fe8e5f
[DEBUG] 2019-10-02 11:59:59.603 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@41fe8e5f
[DEBUG] 2019-10-02 11:59:59.605 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@51a6cc2a
[DEBUG] 2019-10-02 11:59:59.605 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@51a6cc2a
[DEBUG] 2019-10-02 11:59:59.605 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28cb3a25
[DEBUG] 2019-10-02 11:59:59.606 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@9aa2002
[DEBUG] 2019-10-02 11:59:59.608 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@49ede9c7
[DEBUG] 2019-10-02 11:59:59.608 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@49ede9c7
[DEBUG] 2019-10-02 11:59:59.609 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@45404d5
[DEBUG] 2019-10-02 11:59:59.609 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@45404d5
[DEBUG] 2019-10-02 11:59:59.620 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@59ed3e6c
[DEBUG] 2019-10-02 11:59:59.621 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@59ed3e6c
[DEBUG] 2019-10-02 11:59:59.623 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4195105b
[DEBUG] 2019-10-02 11:59:59.623 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4195105b
[DEBUG] 2019-10-02 11:59:59.625 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6cd5122d
[DEBUG] 2019-10-02 11:59:59.626 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6cd5122d
[DEBUG] 2019-10-02 11:59:59.627 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@70c53dbe
[DEBUG] 2019-10-02 11:59:59.627 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@70c53dbe
[DEBUG] 2019-10-02 11:59:59.629 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@109a2025
[DEBUG] 2019-10-02 11:59:59.629 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@109a2025
[DEBUG] 2019-10-02 11:59:59.631 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6c9320c2
[DEBUG] 2019-10-02 11:59:59.631 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6c9320c2
[DEBUG] 2019-10-02 11:59:59.634 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@14823f76
[DEBUG] 2019-10-02 11:59:59.634 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@14823f76
[DEBUG] 2019-10-02 11:59:59.636 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@124ac145
[DEBUG] 2019-10-02 11:59:59.636 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@124ac145
[DEBUG] 2019-10-02 11:59:59.638 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4af70944
[DEBUG] 2019-10-02 11:59:59.638 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4af70944
[DEBUG] 2019-10-02 11:59:59.640 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7661b5a
[DEBUG] 2019-10-02 11:59:59.640 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7661b5a
[DEBUG] 2019-10-02 11:59:59.640 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7661b5a
[DEBUG] 2019-10-02 11:59:59.641 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e08acf9
[DEBUG] 2019-10-02 11:59:59.643 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5ec4ff02
[DEBUG] 2019-10-02 11:59:59.643 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5ec4ff02
[DEBUG] 2019-10-02 11:59:59.643 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5ec4ff02
[DEBUG] 2019-10-02 11:59:59.644 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@612e21b9
[DEBUG] 2019-10-02 11:59:59.645 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1a865273
[DEBUG] 2019-10-02 11:59:59.645 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a865273
[DEBUG] 2019-10-02 11:59:59.646 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@fcc6023
[DEBUG] 2019-10-02 11:59:59.647 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@fcc6023
[DEBUG] 2019-10-02 11:59:59.648 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@46185a1b
[DEBUG] 2019-10-02 11:59:59.648 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@46185a1b
[DEBUG] 2019-10-02 11:59:59.649 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4ee5b2d9
[DEBUG] 2019-10-02 11:59:59.649 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ee5b2d9
[DEBUG] 2019-10-02 11:59:59.650 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@290d10ef
[DEBUG] 2019-10-02 11:59:59.650 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@290d10ef
[DEBUG] 2019-10-02 11:59:59.651 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13d9261f
[DEBUG] 2019-10-02 11:59:59.652 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2436ea2f
[DEBUG] 2019-10-02 11:59:59.653 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2436ea2f
[DEBUG] 2019-10-02 11:59:59.653 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2436ea2f
[DEBUG] 2019-10-02 11:59:59.654 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59f93db8
[DEBUG] 2019-10-02 11:59:59.655 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59f93db8
[DEBUG] 2019-10-02 11:59:59.655 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59f93db8
[DEBUG] 2019-10-02 11:59:59.656 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@292158f8
[DEBUG] 2019-10-02 11:59:59.657 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5d5c04f9
[DEBUG] 2019-10-02 11:59:59.658 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6724cdec
[DEBUG] 2019-10-02 11:59:59.658 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6724cdec
[DEBUG] 2019-10-02 11:59:59.658 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6724cdec
[DEBUG] 2019-10-02 11:59:59.660 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60783105
[DEBUG] 2019-10-02 11:59:59.660 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60783105
[DEBUG] 2019-10-02 11:59:59.660 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60783105
[DEBUG] 2019-10-02 11:59:59.661 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2a3194c6
[DEBUG] 2019-10-02 11:59:59.661 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1e8ab90f
[DEBUG] 2019-10-02 11:59:59.663 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1907874b
[DEBUG] 2019-10-02 11:59:59.663 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1907874b
[DEBUG] 2019-10-02 11:59:59.664 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2d9dff65
[DEBUG] 2019-10-02 11:59:59.666 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@fab35b1
[DEBUG] 2019-10-02 11:59:59.666 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@fab35b1
[DEBUG] 2019-10-02 11:59:59.668 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@587a1cfb
[DEBUG] 2019-10-02 11:59:59.669 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@587a1cfb
[DEBUG] 2019-10-02 11:59:59.670 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@48d293ee
[DEBUG] 2019-10-02 11:59:59.670 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@660f0c
[DEBUG] 2019-10-02 11:59:59.673 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@76563d26
[DEBUG] 2019-10-02 11:59:59.678 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@10a0fe30
[DEBUG] 2019-10-02 11:59:59.678 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@10a0fe30
[DEBUG] 2019-10-02 11:59:59.679 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@262816a8
[DEBUG] 2019-10-02 11:59:59.679 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1effd53c
[DEBUG] 2019-10-02 11:59:59.679 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@46c269e0
[DEBUG] 2019-10-02 11:59:59.679 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6920614
[DEBUG] 2019-10-02 11:59:59.680 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6069dd38
[DEBUG] 2019-10-02 11:59:59.680 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5fa23c
[DEBUG] 2019-10-02 11:59:59.680 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@558756be
[DEBUG] 2019-10-02 11:59:59.680 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@433348bc
[DEBUG] 2019-10-02 11:59:59.751 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 11:59:59.752 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 11:59:59.753 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 11:59:59.753 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 11:59:59.754 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 11:59:59.756 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 11:59:59.757 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 11:59:59.759 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 11:59:59.761 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 11:59:59.762 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 11:59:59.762 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 11:59:59.763 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 11:59:59.763 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 11:59:59.765 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 11:59:59.774 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 11:59:59.774 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 11:59:59.775 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 12:00:00.002 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 12:00:00.264 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 12:00:00.264 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 12:00:00.265 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 12:00:00.320 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 12:00:00.363 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 12:00:00.405 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 12:00:00.476 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 12:00:00.483 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18539cb1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@748f93bb]
[DEBUG] 2019-10-02 12:00:00.577 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:00:00.616 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 12:00:00.627 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 12:00:00.631 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 12:00:00.671 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:00.677 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 12:00:00.680 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 12:00:00.684 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 12:00:00.689 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 12:00:00.696 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 12:00:00.699 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:00.699 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 12:00:00.700 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 12:00:00.700 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 12:00:00.700 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 12:00:00.700 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:00.701 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 12:00:00.701 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 12:00:00.701 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 12:00:00.701 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 12:00:00.701 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:00.701 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 12:00:00.702 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 12:00:00.702 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 12:00:00.702 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 12:00:00.704 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:00:00.705 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:00.709 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:00.727 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:00.730 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:00.732 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 12:00:00.735 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:00:00.735 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:00:00.736 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:00:00.740 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 12:00:00.740 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:00.740 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 12:00:00.741 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 12:00:00.741 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 12:00:00.741 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 12:00:00.743 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:00:00.744 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 12:00:00.744 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 12:00:00.744 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 12:00:00.748 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:00.748 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 12:00:00.748 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 12:00:00.748 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 12:00:00.748 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 12:00:00.749 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 12:00:00.749 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:00.749 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 12:00:00.749 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 12:00:00.749 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 12:00:00.750 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 12:00:00.750 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:00.750 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 12:00:00.750 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 12:00:00.750 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 12:00:00.750 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 12:00:00.751 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:00.751 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 12:00:00.751 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 12:00:00.751 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 12:00:00.751 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 12:00:00.752 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 12:00:00.752 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:00.755 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 12:00:00.758 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 12:00:00.758 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 12:00:00.758 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 12:00:00.758 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 12:00:00.759 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 12:00:00.759 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 12:00:00.759 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 12:00:00.759 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 12:00:00.759 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 12:00:00.766 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 12:00:00.766 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 12:00:00.766 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:00:00.767 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 12:00:00.769 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 12:00:00.770 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 12:00:00.771 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:00:00.771 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:00:00.775 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:00:00.816 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 12:00:00.817 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 12:00:00.817 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 12:00:00.817 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 12:00:00.817 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 12:00:00.817 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 12:00:00.817 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 12:00:00.817 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 12:00:00.818 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 12:00:00.818 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 12:00:00.818 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 12:00:00.818 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 12:00:00.818 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 12:00:00.818 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 12:00:00.818 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 12:00:00.818 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 12:00:00.818 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 12:00:00.818 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 12:00:00.818 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 12:00:00.818 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 12:00:00.818 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 12:00:00.819 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 12:00:00.819 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 12:00:00.819 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 12:00:00.819 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 12:00:00.819 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 12:00:00.819 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 12:00:00.819 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 12:00:00.819 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 12:00:00.819 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 12:00:00.819 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 12:00:00.819 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 12:00:00.819 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 12:00:00.819 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 12:00:00.819 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 12:00:00.820 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 12:00:00.820 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 12:00:00.820 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 12:00:00.820 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 12:00:00.887 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 12:00:00.912 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 12:00:00.913 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.UserDaoTest,testInsertNewRecipe, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3249e278, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 12:00:00.936 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 12:00:00.936 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 12:00:00.937 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 12:00:00.937 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18539cb1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4f281aaf]
[DEBUG] 2019-10-02 12:00:01.033 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 12:00:01.033 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:00:01.083 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 12:00:01.084 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:00:01.386 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 12:00:01.386 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:00:01.386 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 12:00:01.386 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:00:01.423 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:00:01.423 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 12:00:01.423 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 12:00:01.423 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 12:00:01.423 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 12:00:01.428 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:00:01.428 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 12:00:01.428 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 12:00:01.428 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 12:00:01.429 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 12:00:01.429 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 12:00:01.429 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:00:01.457 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@96abc76]
[DEBUG] 2019-10-02 12:00:01.459 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 12:00:01.459 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 12:00:01.459 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 12:00:01.459 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 12:00:01.465 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35fa450f]
[DEBUG] 2019-10-02 12:00:01.468 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26275b46]
[DEBUG] 2019-10-02 12:00:01.470 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 12:00:01.470 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 12:00:01.470 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 12:00:01.470 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 12:00:01.471 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 12:00:01.471 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 12:00:01.472 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:00:01.489 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:00:01.500 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 12:00:01.504 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:00:01.504 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b5021d1]
[DEBUG] 2019-10-02 12:00:01.504 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 12:00:01.504 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 12:00:01.504 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 12:00:01.504 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 12:00:01.504 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21d9cd04]
[DEBUG] 2019-10-02 12:00:01.505 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@799f354a]
[DEBUG] 2019-10-02 12:00:01.505 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 12:00:01.505 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 12:00:01.505 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 12:00:01.505 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 12:00:01.505 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 12:00:01.505 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 12:00:01.505 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:00:01.506 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:00:01.506 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 12:00:01.507 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:00:01.526 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:00:01.526 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:00:01.526 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:00:01.526 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 12:00:01.526 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 12:00:01.526 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 12:00:01.527 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 12:00:01.527 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 12:00:01.527 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:00:01.527 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23564dd2]
[DEBUG] 2019-10-02 12:00:01.527 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:00:01.527 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:00:01.527 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:00:01.527 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:00:01.527 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd0a0d0]
[DEBUG] 2019-10-02 12:00:01.528 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 12:00:01.528 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 12:00:01.528 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 12:00:01.528 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 12:00:01.528 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 12:00:01.528 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 12:00:01.529 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:00:01.529 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:00:01.529 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 12:00:01.530 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:00:01.530 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f12094d]
[DEBUG] 2019-10-02 12:00:01.530 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:00:01.530 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:00:01.530 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:00:01.530 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:00:01.530 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@200d1a3d]
[DEBUG] 2019-10-02 12:00:01.530 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 12:00:01.530 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 12:00:01.530 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 12:00:01.530 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 12:00:01.530 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 12:00:01.530 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 12:00:01.531 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:00:01.531 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:00:01.531 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 12:00:01.531 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:00:01.532 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 12:00:01.532 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 12:00:01.537 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a2546d6]
[DEBUG] 2019-10-02 12:00:01.537 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7282af25]
[DEBUG] 2019-10-02 12:00:01.537 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:00:01.538 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:00:01.538 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:00:01.538 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:00:01.538 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 12:00:01.538 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:00:01.540 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:00:01.541 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 12:00:01.541 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 12:00:01.581 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 12:00:01.581 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 12:00:01.582 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 12:00:01.589 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 12:00:01.589 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 12:00:01.590 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 12:00:01.590 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 12:00:01.592 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@389a5022
[DEBUG] 2019-10-02 12:00:01.594 [main] SessionFactoryRegistry - Registering SessionFactory: 188aee79-30d9-4410-8b14-a3721695a1df (<unnamed>)
[DEBUG] 2019-10-02 12:00:01.594 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 12:00:01.693 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 12:00:01.705 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 12:00:01.705 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 12:00:01.732 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 12:00:01.739 [main] SQL - insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:00:01.771 [main] IdentifierGeneratorHelper - Natively generated identity: 15
[DEBUG] 2019-10-02 12:00:01.771 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:00:01.776 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 12:00:01.776 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:00:01.780 [main] IdentifierGeneratorHelper - Natively generated identity: 7
[DEBUG] 2019-10-02 12:00:01.780 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:00:01.783 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 12:00:01.784 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 12:00:01.785 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 12:00:01.792 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#15], was: [<unreferenced>] (initialized)
[DEBUG] 2019-10-02 12:00:01.795 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2019-10-02 12:00:01.795 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-02 12:00:01.797 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 12:00:01.797 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Alex, lastName=Malotky, recipes=[com.alexmalotky.entity.Recipe#7], id=15, userName=ajmalotky, email=}
[DEBUG] 2019-10-02 12:00:01.798 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=, name=TestRecipe, ingredients=, id=7, user=null}
[DEBUG] 2019-10-02 12:00:01.803 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:00:01.804 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:00:01.821 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:00:01.829 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 12:00:01.833 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 12:00:01.837 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.alexmalotky.entity.User.recipes#15]
[DEBUG] 2019-10-02 12:00:01.843 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#15]
[DEBUG] 2019-10-02 12:00:01.844 [main] TwoPhaseLoad - Processing attribute `email` : value = 
[DEBUG] 2019-10-02 12:00:01.844 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:00:01.844 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 12:00:01.844 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:00:01.844 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 12:00:01.844 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:00:01.844 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 12:00:01.844 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:00:01.845 [main] TwoPhaseLoad - Processing attribute `userName` : value = ajmalotky
[DEBUG] 2019-10-02 12:00:01.845 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:00:01.845 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#15]
[DEBUG] 2019-10-02 12:00:01.845 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:00:01.846 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#15]
[DEBUG] 2019-10-02 12:00:01.846 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:00:01.846 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:00:01.847 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#15
[DEBUG] 2019-10-02 12:00:01.847 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:00:32.460 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 12:00:32.464 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 12:00:32.471 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 12:00:32.619 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 12:00:32.629 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 12:00:33.060 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 12:00:33.062 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 12:00:33.073 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 12:00:33.608 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 12:00:33.643 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 12:00:33.645 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 12:00:33.677 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 12:00:33.729 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6c5ddccd
[DEBUG] 2019-10-02 12:00:33.729 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6c5ddccd
[DEBUG] 2019-10-02 12:00:33.729 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6c5ddccd
[DEBUG] 2019-10-02 12:00:33.730 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7fb48179
[DEBUG] 2019-10-02 12:00:33.731 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6732726
[DEBUG] 2019-10-02 12:00:33.732 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4190bc8a
[DEBUG] 2019-10-02 12:00:33.734 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2e73d5eb
[DEBUG] 2019-10-02 12:00:33.734 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2e73d5eb
[DEBUG] 2019-10-02 12:00:33.734 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2e73d5eb
[DEBUG] 2019-10-02 12:00:33.736 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3bb87d36
[DEBUG] 2019-10-02 12:00:33.736 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3bb87d36
[DEBUG] 2019-10-02 12:00:33.736 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3bb87d36
[DEBUG] 2019-10-02 12:00:33.738 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@503df2d0
[DEBUG] 2019-10-02 12:00:33.738 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@503df2d0
[DEBUG] 2019-10-02 12:00:33.738 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@503df2d0
[DEBUG] 2019-10-02 12:00:33.740 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@655a01d8
[DEBUG] 2019-10-02 12:00:33.740 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@655a01d8
[DEBUG] 2019-10-02 12:00:33.740 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@655a01d8
[DEBUG] 2019-10-02 12:00:33.742 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@625a4ff
[DEBUG] 2019-10-02 12:00:33.742 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@625a4ff
[DEBUG] 2019-10-02 12:00:33.742 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@625a4ff
[DEBUG] 2019-10-02 12:00:33.744 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@27755487
[DEBUG] 2019-10-02 12:00:33.744 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@27755487
[DEBUG] 2019-10-02 12:00:33.744 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@27755487
[DEBUG] 2019-10-02 12:00:33.745 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@306f6f1d
[DEBUG] 2019-10-02 12:00:33.746 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@306f6f1d
[DEBUG] 2019-10-02 12:00:33.746 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@306f6f1d
[DEBUG] 2019-10-02 12:00:33.747 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5349b246
[DEBUG] 2019-10-02 12:00:33.748 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5349b246
[DEBUG] 2019-10-02 12:00:33.750 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@24841372
[DEBUG] 2019-10-02 12:00:33.750 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@24841372
[DEBUG] 2019-10-02 12:00:33.752 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@46a488c2
[DEBUG] 2019-10-02 12:00:33.752 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@46a488c2
[DEBUG] 2019-10-02 12:00:33.753 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@34b9eb03
[DEBUG] 2019-10-02 12:00:33.754 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28bdbe88
[DEBUG] 2019-10-02 12:00:33.756 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@44b21f9f
[DEBUG] 2019-10-02 12:00:33.756 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@44b21f9f
[DEBUG] 2019-10-02 12:00:33.758 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7c601d50
[DEBUG] 2019-10-02 12:00:33.758 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7c601d50
[DEBUG] 2019-10-02 12:00:33.777 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@43a09ce2
[DEBUG] 2019-10-02 12:00:33.778 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@43a09ce2
[DEBUG] 2019-10-02 12:00:33.781 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6f9c5048
[DEBUG] 2019-10-02 12:00:33.781 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6f9c5048
[DEBUG] 2019-10-02 12:00:33.785 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@370c1968
[DEBUG] 2019-10-02 12:00:33.785 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@370c1968
[DEBUG] 2019-10-02 12:00:33.788 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@795f5d51
[DEBUG] 2019-10-02 12:00:33.788 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@795f5d51
[DEBUG] 2019-10-02 12:00:33.791 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63cd2cd2
[DEBUG] 2019-10-02 12:00:33.791 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63cd2cd2
[DEBUG] 2019-10-02 12:00:33.794 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1a0d96a5
[DEBUG] 2019-10-02 12:00:33.795 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1a0d96a5
[DEBUG] 2019-10-02 12:00:33.800 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6add8e3f
[DEBUG] 2019-10-02 12:00:33.800 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6add8e3f
[DEBUG] 2019-10-02 12:00:33.803 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@45cd7bc5
[DEBUG] 2019-10-02 12:00:33.804 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@45cd7bc5
[DEBUG] 2019-10-02 12:00:33.806 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2538bc06
[DEBUG] 2019-10-02 12:00:33.806 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2538bc06
[DEBUG] 2019-10-02 12:00:33.809 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7d57dbb5
[DEBUG] 2019-10-02 12:00:33.809 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7d57dbb5
[DEBUG] 2019-10-02 12:00:33.809 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7d57dbb5
[DEBUG] 2019-10-02 12:00:33.811 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5f95f1e1
[DEBUG] 2019-10-02 12:00:33.813 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4779aae6
[DEBUG] 2019-10-02 12:00:33.813 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4779aae6
[DEBUG] 2019-10-02 12:00:33.813 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4779aae6
[DEBUG] 2019-10-02 12:00:33.815 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4317850d
[DEBUG] 2019-10-02 12:00:33.817 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3cad68df
[DEBUG] 2019-10-02 12:00:33.817 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3cad68df
[DEBUG] 2019-10-02 12:00:33.819 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@596a7f44
[DEBUG] 2019-10-02 12:00:33.820 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@596a7f44
[DEBUG] 2019-10-02 12:00:33.822 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@770beef5
[DEBUG] 2019-10-02 12:00:33.822 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@770beef5
[DEBUG] 2019-10-02 12:00:33.824 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4693a9ef
[DEBUG] 2019-10-02 12:00:33.824 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4693a9ef
[DEBUG] 2019-10-02 12:00:33.826 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4fd05028
[DEBUG] 2019-10-02 12:00:33.826 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4fd05028
[DEBUG] 2019-10-02 12:00:33.827 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54d1608f
[DEBUG] 2019-10-02 12:00:33.829 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@15d42ccb
[DEBUG] 2019-10-02 12:00:33.830 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@15d42ccb
[DEBUG] 2019-10-02 12:00:33.830 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@15d42ccb
[DEBUG] 2019-10-02 12:00:33.832 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6ed922e1
[DEBUG] 2019-10-02 12:00:33.833 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6ed922e1
[DEBUG] 2019-10-02 12:00:33.833 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6ed922e1
[DEBUG] 2019-10-02 12:00:33.834 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@39909d1a
[DEBUG] 2019-10-02 12:00:33.835 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6f2e1024
[DEBUG] 2019-10-02 12:00:33.837 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@521bb1a4
[DEBUG] 2019-10-02 12:00:33.837 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@521bb1a4
[DEBUG] 2019-10-02 12:00:33.837 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@521bb1a4
[DEBUG] 2019-10-02 12:00:33.839 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4ba02375
[DEBUG] 2019-10-02 12:00:33.839 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4ba02375
[DEBUG] 2019-10-02 12:00:33.840 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4ba02375
[DEBUG] 2019-10-02 12:00:33.840 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@788ba63e
[DEBUG] 2019-10-02 12:00:33.841 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2be95d31
[DEBUG] 2019-10-02 12:00:33.844 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@334ebcaa
[DEBUG] 2019-10-02 12:00:33.844 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@334ebcaa
[DEBUG] 2019-10-02 12:00:33.845 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@696b4a95
[DEBUG] 2019-10-02 12:00:33.848 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6056232d
[DEBUG] 2019-10-02 12:00:33.848 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6056232d
[DEBUG] 2019-10-02 12:00:33.851 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2121d1f9
[DEBUG] 2019-10-02 12:00:33.851 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2121d1f9
[DEBUG] 2019-10-02 12:00:33.871 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2806d6da
[DEBUG] 2019-10-02 12:00:33.872 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6bccd036
[DEBUG] 2019-10-02 12:00:33.875 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@52bf7bf6
[DEBUG] 2019-10-02 12:00:33.902 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@21da4b5f
[DEBUG] 2019-10-02 12:00:33.902 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@21da4b5f
[DEBUG] 2019-10-02 12:00:33.903 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2eed37f4
[DEBUG] 2019-10-02 12:00:33.904 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@9b76b60
[DEBUG] 2019-10-02 12:00:33.904 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3fb9a67f
[DEBUG] 2019-10-02 12:00:33.904 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@127705e4
[DEBUG] 2019-10-02 12:00:33.904 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5562c2c9
[DEBUG] 2019-10-02 12:00:33.905 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@673c4f6e
[DEBUG] 2019-10-02 12:00:33.905 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@15c487a8
[DEBUG] 2019-10-02 12:00:33.905 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3f36e8d1
[DEBUG] 2019-10-02 12:00:33.959 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 12:00:33.959 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 12:00:33.961 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 12:00:33.961 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 12:00:33.962 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 12:00:33.964 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 12:00:33.965 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 12:00:33.967 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 12:00:33.969 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 12:00:33.970 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 12:00:33.971 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 12:00:33.971 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 12:00:33.972 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 12:00:33.973 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 12:00:33.984 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 12:00:33.984 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 12:00:33.985 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 12:00:34.313 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 12:00:34.584 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 12:00:34.584 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 12:00:34.584 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 12:00:34.631 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 12:00:34.664 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 12:00:34.707 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 12:00:34.820 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 12:00:34.829 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@78910096] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@39dec536]
[DEBUG] 2019-10-02 12:00:34.931 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:00:34.978 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 12:00:34.990 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 12:00:34.997 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 12:00:35.049 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:35.053 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 12:00:35.056 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 12:00:35.061 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 12:00:35.067 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 12:00:35.077 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 12:00:35.079 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:35.080 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 12:00:35.080 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 12:00:35.080 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 12:00:35.081 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 12:00:35.081 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:35.081 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 12:00:35.082 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 12:00:35.082 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 12:00:35.082 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 12:00:35.082 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:35.082 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 12:00:35.082 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 12:00:35.083 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 12:00:35.083 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 12:00:35.087 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:00:35.088 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:35.093 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:35.110 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:35.111 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:35.112 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 12:00:35.115 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:00:35.115 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:00:35.116 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:00:35.120 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 12:00:35.121 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:35.121 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 12:00:35.121 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 12:00:35.122 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 12:00:35.122 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 12:00:35.124 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:00:35.124 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 12:00:35.124 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 12:00:35.124 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 12:00:35.128 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:35.129 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 12:00:35.129 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 12:00:35.129 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 12:00:35.129 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 12:00:35.129 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 12:00:35.129 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:35.130 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 12:00:35.130 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 12:00:35.130 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 12:00:35.130 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 12:00:35.130 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:35.130 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 12:00:35.130 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 12:00:35.130 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 12:00:35.130 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 12:00:35.131 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:35.131 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 12:00:35.131 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 12:00:35.131 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 12:00:35.131 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 12:00:35.131 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 12:00:35.131 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:00:35.134 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 12:00:35.138 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 12:00:35.138 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 12:00:35.138 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 12:00:35.138 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 12:00:35.138 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 12:00:35.139 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 12:00:35.139 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 12:00:35.139 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 12:00:35.139 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 12:00:35.147 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 12:00:35.148 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 12:00:35.148 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:00:35.149 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 12:00:35.150 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 12:00:35.152 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 12:00:35.152 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:00:35.152 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:00:35.157 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:00:35.206 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 12:00:35.207 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 12:00:35.207 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 12:00:35.208 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 12:00:35.208 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 12:00:35.208 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 12:00:35.208 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 12:00:35.208 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 12:00:35.208 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 12:00:35.208 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 12:00:35.208 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 12:00:35.208 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 12:00:35.208 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 12:00:35.208 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 12:00:35.208 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 12:00:35.208 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 12:00:35.209 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 12:00:35.209 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 12:00:35.209 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 12:00:35.209 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 12:00:35.209 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 12:00:35.209 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 12:00:35.209 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 12:00:35.209 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 12:00:35.209 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 12:00:35.209 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 12:00:35.209 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 12:00:35.210 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 12:00:35.210 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 12:00:35.210 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 12:00:35.210 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 12:00:35.210 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 12:00:35.210 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 12:00:35.210 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 12:00:35.210 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 12:00:35.210 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 12:00:35.210 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 12:00:35.210 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 12:00:35.210 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 12:00:35.295 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 12:00:35.324 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 12:00:35.324 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.UserDaoTest,testInsertNewRecipe, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, intellij.debug.agent=true, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, jboss.modules.system.pkgs=com.intellij.rt, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@637c840d, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 12:00:35.353 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 12:00:35.354 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 12:00:35.355 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 12:00:35.355 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@78910096] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3e6ec74]
[DEBUG] 2019-10-02 12:00:35.427 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 12:00:35.427 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:00:35.459 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 12:00:35.459 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:00:35.846 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 12:00:35.847 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:00:35.847 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 12:00:35.847 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:00:35.888 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:00:35.888 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 12:00:35.888 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 12:00:35.888 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 12:00:35.888 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 12:00:35.896 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:00:35.896 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 12:00:35.896 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 12:00:35.896 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 12:00:35.896 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 12:00:35.896 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 12:00:35.896 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:00:35.932 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d4cc7]
[DEBUG] 2019-10-02 12:00:35.934 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 12:00:35.934 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 12:00:35.934 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 12:00:35.935 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 12:00:35.942 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1584c019]
[DEBUG] 2019-10-02 12:00:35.946 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f1f9515]
[DEBUG] 2019-10-02 12:00:35.949 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 12:00:35.949 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 12:00:35.949 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 12:00:35.949 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 12:00:35.949 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 12:00:35.950 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 12:00:35.950 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:00:35.968 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:00:35.978 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 12:00:35.981 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:00:35.981 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d3930fe]
[DEBUG] 2019-10-02 12:00:35.981 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 12:00:35.981 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 12:00:35.981 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 12:00:35.981 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 12:00:35.982 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15f2a43f]
[DEBUG] 2019-10-02 12:00:35.982 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c65d8e3]
[DEBUG] 2019-10-02 12:00:35.982 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 12:00:35.982 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 12:00:35.982 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 12:00:35.982 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 12:00:35.982 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 12:00:35.982 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 12:00:35.982 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:00:35.982 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:00:35.983 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 12:00:35.983 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:00:36.002 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:00:36.003 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:00:36.003 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:00:36.003 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 12:00:36.003 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 12:00:36.003 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 12:00:36.003 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 12:00:36.003 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 12:00:36.003 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:00:36.003 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d221b20]
[DEBUG] 2019-10-02 12:00:36.004 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:00:36.004 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:00:36.004 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:00:36.004 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:00:36.004 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ec13984]
[DEBUG] 2019-10-02 12:00:36.005 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 12:00:36.005 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 12:00:36.005 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 12:00:36.005 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 12:00:36.005 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 12:00:36.005 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 12:00:36.005 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:00:36.006 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:00:36.006 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 12:00:36.006 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:00:36.007 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a2df0d5]
[DEBUG] 2019-10-02 12:00:36.007 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:00:36.007 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:00:36.007 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:00:36.007 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:00:36.007 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd3d39d]
[DEBUG] 2019-10-02 12:00:36.007 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 12:00:36.007 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 12:00:36.008 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 12:00:36.008 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 12:00:36.008 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 12:00:36.008 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 12:00:36.008 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:00:36.008 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:00:36.009 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 12:00:36.009 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:00:36.009 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 12:00:36.009 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 12:00:36.018 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c8b10b4]
[DEBUG] 2019-10-02 12:00:36.018 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1410d645]
[DEBUG] 2019-10-02 12:00:36.019 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:00:36.019 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:00:36.019 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:00:36.019 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:00:36.019 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 12:00:36.019 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:00:36.023 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:00:36.024 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 12:00:36.024 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 12:00:36.072 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 12:00:36.072 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 12:00:36.073 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 12:00:36.081 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 12:00:36.081 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 12:00:36.083 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 12:00:36.083 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 12:00:36.085 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@491893f8
[DEBUG] 2019-10-02 12:00:36.088 [main] SessionFactoryRegistry - Registering SessionFactory: f270d704-3915-464e-81d6-8436e1b70ff9 (<unnamed>)
[DEBUG] 2019-10-02 12:00:36.088 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 12:01:44.846 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 12:01:44.849 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 12:01:44.855 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 12:01:44.960 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 12:01:44.964 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 12:01:45.219 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 12:01:45.220 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 12:01:45.228 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 12:01:45.687 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 12:01:45.718 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 12:01:45.720 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 12:01:45.746 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 12:01:45.794 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@8deb645
[DEBUG] 2019-10-02 12:01:45.794 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@8deb645
[DEBUG] 2019-10-02 12:01:45.794 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@8deb645
[DEBUG] 2019-10-02 12:01:45.795 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6a937336
[DEBUG] 2019-10-02 12:01:45.796 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1a2909ae
[DEBUG] 2019-10-02 12:01:45.797 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1000d54d
[DEBUG] 2019-10-02 12:01:45.799 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@a0db585
[DEBUG] 2019-10-02 12:01:45.799 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@a0db585
[DEBUG] 2019-10-02 12:01:45.799 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@a0db585
[DEBUG] 2019-10-02 12:01:45.801 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7cea0110
[DEBUG] 2019-10-02 12:01:45.801 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7cea0110
[DEBUG] 2019-10-02 12:01:45.801 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7cea0110
[DEBUG] 2019-10-02 12:01:45.803 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1729ec00
[DEBUG] 2019-10-02 12:01:45.803 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1729ec00
[DEBUG] 2019-10-02 12:01:45.803 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1729ec00
[DEBUG] 2019-10-02 12:01:45.804 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@459b187a
[DEBUG] 2019-10-02 12:01:45.804 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@459b187a
[DEBUG] 2019-10-02 12:01:45.804 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@459b187a
[DEBUG] 2019-10-02 12:01:45.806 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@716e431d
[DEBUG] 2019-10-02 12:01:45.806 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@716e431d
[DEBUG] 2019-10-02 12:01:45.806 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@716e431d
[DEBUG] 2019-10-02 12:01:45.807 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6884f0d9
[DEBUG] 2019-10-02 12:01:45.808 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6884f0d9
[DEBUG] 2019-10-02 12:01:45.808 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6884f0d9
[DEBUG] 2019-10-02 12:01:45.809 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@64fe9da7
[DEBUG] 2019-10-02 12:01:45.809 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@64fe9da7
[DEBUG] 2019-10-02 12:01:45.809 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@64fe9da7
[DEBUG] 2019-10-02 12:01:45.811 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@36bf84e
[DEBUG] 2019-10-02 12:01:45.811 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@36bf84e
[DEBUG] 2019-10-02 12:01:45.813 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@665522c2
[DEBUG] 2019-10-02 12:01:45.813 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@665522c2
[DEBUG] 2019-10-02 12:01:45.814 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6a0094c9
[DEBUG] 2019-10-02 12:01:45.814 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6a0094c9
[DEBUG] 2019-10-02 12:01:45.815 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4f6b687e
[DEBUG] 2019-10-02 12:01:45.816 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@78c1372d
[DEBUG] 2019-10-02 12:01:45.817 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@22a0d4ea
[DEBUG] 2019-10-02 12:01:45.817 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@22a0d4ea
[DEBUG] 2019-10-02 12:01:45.818 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2412a42b
[DEBUG] 2019-10-02 12:01:45.819 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2412a42b
[DEBUG] 2019-10-02 12:01:45.831 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@476ee5b3
[DEBUG] 2019-10-02 12:01:45.832 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@476ee5b3
[DEBUG] 2019-10-02 12:01:45.835 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dd2e270
[DEBUG] 2019-10-02 12:01:45.835 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dd2e270
[DEBUG] 2019-10-02 12:01:45.837 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@339a3670
[DEBUG] 2019-10-02 12:01:45.837 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@339a3670
[DEBUG] 2019-10-02 12:01:45.839 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5d51e129
[DEBUG] 2019-10-02 12:01:45.839 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5d51e129
[DEBUG] 2019-10-02 12:01:45.841 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@743e66f7
[DEBUG] 2019-10-02 12:01:45.841 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@743e66f7
[DEBUG] 2019-10-02 12:01:45.843 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2133661d
[DEBUG] 2019-10-02 12:01:45.843 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2133661d
[DEBUG] 2019-10-02 12:01:45.846 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49c675f0
[DEBUG] 2019-10-02 12:01:45.846 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49c675f0
[DEBUG] 2019-10-02 12:01:45.848 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4f66ffc8
[DEBUG] 2019-10-02 12:01:45.848 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f66ffc8
[DEBUG] 2019-10-02 12:01:45.849 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@37e0292a
[DEBUG] 2019-10-02 12:01:45.849 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@37e0292a
[DEBUG] 2019-10-02 12:01:45.850 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@a62c7cd
[DEBUG] 2019-10-02 12:01:45.851 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a62c7cd
[DEBUG] 2019-10-02 12:01:45.851 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a62c7cd
[DEBUG] 2019-10-02 12:01:45.852 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7903d448
[DEBUG] 2019-10-02 12:01:45.854 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@336206d8
[DEBUG] 2019-10-02 12:01:45.854 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@336206d8
[DEBUG] 2019-10-02 12:01:45.854 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@336206d8
[DEBUG] 2019-10-02 12:01:45.855 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@711d1a52
[DEBUG] 2019-10-02 12:01:45.856 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@26844abb
[DEBUG] 2019-10-02 12:01:45.856 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@26844abb
[DEBUG] 2019-10-02 12:01:45.858 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@21079a12
[DEBUG] 2019-10-02 12:01:45.858 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@21079a12
[DEBUG] 2019-10-02 12:01:45.859 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@30e9ca13
[DEBUG] 2019-10-02 12:01:45.859 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@30e9ca13
[DEBUG] 2019-10-02 12:01:45.860 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@14982a82
[DEBUG] 2019-10-02 12:01:45.861 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@14982a82
[DEBUG] 2019-10-02 12:01:45.862 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7899de11
[DEBUG] 2019-10-02 12:01:45.862 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7899de11
[DEBUG] 2019-10-02 12:01:45.862 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5292ceca
[DEBUG] 2019-10-02 12:01:45.864 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@25d93198
[DEBUG] 2019-10-02 12:01:45.864 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@25d93198
[DEBUG] 2019-10-02 12:01:45.864 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@25d93198
[DEBUG] 2019-10-02 12:01:45.865 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2e8a1ab4
[DEBUG] 2019-10-02 12:01:45.866 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2e8a1ab4
[DEBUG] 2019-10-02 12:01:45.866 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2e8a1ab4
[DEBUG] 2019-10-02 12:01:45.867 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@64984b0f
[DEBUG] 2019-10-02 12:01:45.868 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7e19755a
[DEBUG] 2019-10-02 12:01:45.869 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@61cd1c71
[DEBUG] 2019-10-02 12:01:45.869 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@61cd1c71
[DEBUG] 2019-10-02 12:01:45.869 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@61cd1c71
[DEBUG] 2019-10-02 12:01:45.870 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4674d90
[DEBUG] 2019-10-02 12:01:45.870 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4674d90
[DEBUG] 2019-10-02 12:01:45.870 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4674d90
[DEBUG] 2019-10-02 12:01:45.871 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@b606cb6
[DEBUG] 2019-10-02 12:01:45.872 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@38bb9d7a
[DEBUG] 2019-10-02 12:01:45.873 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6a472566
[DEBUG] 2019-10-02 12:01:45.873 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6a472566
[DEBUG] 2019-10-02 12:01:45.874 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@8851ce1
[DEBUG] 2019-10-02 12:01:45.875 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@277bf091
[DEBUG] 2019-10-02 12:01:45.876 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@277bf091
[DEBUG] 2019-10-02 12:01:45.877 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2af69643
[DEBUG] 2019-10-02 12:01:45.878 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2af69643
[DEBUG] 2019-10-02 12:01:45.878 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4047d2d9
[DEBUG] 2019-10-02 12:01:45.879 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5c77ba8f
[DEBUG] 2019-10-02 12:01:45.880 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@25290bca
[DEBUG] 2019-10-02 12:01:45.885 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4fc3c165
[DEBUG] 2019-10-02 12:01:45.885 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4fc3c165
[DEBUG] 2019-10-02 12:01:45.886 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@31ee2fdb
[DEBUG] 2019-10-02 12:01:45.886 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@262816a8
[DEBUG] 2019-10-02 12:01:45.886 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1effd53c
[DEBUG] 2019-10-02 12:01:45.887 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@46c269e0
[DEBUG] 2019-10-02 12:01:45.887 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6920614
[DEBUG] 2019-10-02 12:01:45.887 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6069dd38
[DEBUG] 2019-10-02 12:01:45.887 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5fa23c
[DEBUG] 2019-10-02 12:01:45.887 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@558756be
[DEBUG] 2019-10-02 12:01:45.961 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 12:01:45.962 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 12:01:45.964 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 12:01:45.964 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 12:01:45.965 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 12:01:45.967 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 12:01:45.968 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 12:01:45.971 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 12:01:45.973 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 12:01:45.974 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 12:01:45.975 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 12:01:45.976 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 12:01:45.976 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 12:01:45.977 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 12:01:45.986 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 12:01:45.987 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 12:01:45.987 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 12:01:46.247 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 12:01:46.508 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 12:01:46.509 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 12:01:46.509 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 12:01:46.558 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 12:01:46.598 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 12:01:46.647 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 12:01:46.725 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 12:01:46.732 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18539cb1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@748f93bb]
[DEBUG] 2019-10-02 12:01:46.821 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:01:46.864 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 12:01:46.872 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 12:01:46.877 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 12:01:46.911 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:01:46.915 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 12:01:46.918 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 12:01:46.921 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 12:01:46.923 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 12:01:46.928 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 12:01:46.930 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:01:46.930 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 12:01:46.930 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 12:01:46.930 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 12:01:46.930 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 12:01:46.931 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:01:46.931 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 12:01:46.931 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 12:01:46.931 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 12:01:46.931 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 12:01:46.931 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:01:46.932 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 12:01:46.932 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 12:01:46.932 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 12:01:46.932 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 12:01:46.934 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:01:46.935 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:01:46.938 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:01:46.950 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:01:46.951 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:01:46.953 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 12:01:46.955 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:01:46.956 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:01:46.957 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:01:46.960 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 12:01:46.960 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:01:46.961 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 12:01:46.961 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 12:01:46.961 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 12:01:46.961 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 12:01:46.963 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:01:46.963 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 12:01:46.963 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 12:01:46.963 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 12:01:46.968 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:01:46.968 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 12:01:46.968 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 12:01:46.968 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 12:01:46.968 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 12:01:46.969 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 12:01:46.969 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:01:46.969 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 12:01:46.969 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 12:01:46.969 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 12:01:46.970 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 12:01:46.970 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:01:46.970 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 12:01:46.970 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 12:01:46.970 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 12:01:46.970 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 12:01:46.971 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:01:46.971 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 12:01:46.971 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 12:01:46.971 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 12:01:46.971 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 12:01:46.971 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 12:01:46.972 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:01:46.974 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 12:01:46.977 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 12:01:46.978 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 12:01:46.978 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 12:01:46.978 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 12:01:46.978 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 12:01:46.978 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 12:01:46.978 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 12:01:46.978 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 12:01:46.978 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 12:01:46.985 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 12:01:46.985 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 12:01:46.985 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:01:46.986 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 12:01:46.986 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 12:01:46.988 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 12:01:46.988 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:01:46.988 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:01:46.992 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:01:47.034 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 12:01:47.035 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 12:01:47.036 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 12:01:47.036 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 12:01:47.036 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 12:01:47.036 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 12:01:47.036 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 12:01:47.036 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 12:01:47.036 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 12:01:47.036 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 12:01:47.036 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 12:01:47.036 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 12:01:47.036 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 12:01:47.036 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 12:01:47.037 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 12:01:47.037 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 12:01:47.037 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 12:01:47.037 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 12:01:47.037 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 12:01:47.037 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 12:01:47.037 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 12:01:47.037 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 12:01:47.037 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 12:01:47.037 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 12:01:47.037 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 12:01:47.037 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 12:01:47.038 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 12:01:47.038 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 12:01:47.038 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 12:01:47.038 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 12:01:47.038 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 12:01:47.038 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 12:01:47.038 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 12:01:47.038 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 12:01:47.038 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 12:01:47.038 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 12:01:47.039 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 12:01:47.039 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 12:01:47.039 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 12:01:47.104 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 12:01:47.130 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 12:01:47.130 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.UserDaoTest,testInsertNewRecipe, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3249e278, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 12:01:47.151 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 12:01:47.152 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 12:01:47.153 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 12:01:47.153 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18539cb1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4f281aaf]
[DEBUG] 2019-10-02 12:01:47.217 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 12:01:47.217 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:01:47.241 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 12:01:47.241 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:01:47.538 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 12:01:47.538 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:01:47.539 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 12:01:47.539 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:01:47.577 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:01:47.577 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 12:01:47.577 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 12:01:47.577 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 12:01:47.577 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 12:01:47.582 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:01:47.582 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 12:01:47.582 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 12:01:47.582 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 12:01:47.583 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 12:01:47.583 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 12:01:47.583 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:01:47.611 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@96abc76]
[DEBUG] 2019-10-02 12:01:47.613 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 12:01:47.613 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 12:01:47.613 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 12:01:47.613 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 12:01:47.618 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35fa450f]
[DEBUG] 2019-10-02 12:01:47.622 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26275b46]
[DEBUG] 2019-10-02 12:01:47.624 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 12:01:47.624 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 12:01:47.624 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 12:01:47.624 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 12:01:47.624 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 12:01:47.625 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 12:01:47.625 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:01:47.640 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:01:47.647 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 12:01:47.650 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:01:47.650 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b5021d1]
[DEBUG] 2019-10-02 12:01:47.650 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 12:01:47.650 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 12:01:47.650 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 12:01:47.650 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 12:01:47.650 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21d9cd04]
[DEBUG] 2019-10-02 12:01:47.650 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@799f354a]
[DEBUG] 2019-10-02 12:01:47.651 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 12:01:47.651 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 12:01:47.651 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 12:01:47.651 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 12:01:47.651 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 12:01:47.651 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 12:01:47.651 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:01:47.651 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:01:47.652 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 12:01:47.652 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:01:47.668 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:01:47.668 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:01:47.669 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:01:47.669 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 12:01:47.669 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 12:01:47.669 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 12:01:47.669 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 12:01:47.669 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 12:01:47.669 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:01:47.669 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23564dd2]
[DEBUG] 2019-10-02 12:01:47.669 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:01:47.669 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:01:47.669 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:01:47.669 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:01:47.670 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd0a0d0]
[DEBUG] 2019-10-02 12:01:47.671 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 12:01:47.671 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 12:01:47.671 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 12:01:47.671 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 12:01:47.671 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 12:01:47.671 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 12:01:47.671 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:01:47.671 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:01:47.672 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 12:01:47.672 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:01:47.672 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f12094d]
[DEBUG] 2019-10-02 12:01:47.672 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:01:47.672 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:01:47.672 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:01:47.673 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:01:47.673 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@200d1a3d]
[DEBUG] 2019-10-02 12:01:47.673 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 12:01:47.673 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 12:01:47.673 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 12:01:47.673 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 12:01:47.673 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 12:01:47.673 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 12:01:47.673 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:01:47.673 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:01:47.674 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 12:01:47.674 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:01:47.675 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 12:01:47.675 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 12:01:47.681 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a2546d6]
[DEBUG] 2019-10-02 12:01:47.681 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7282af25]
[DEBUG] 2019-10-02 12:01:47.681 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:01:47.682 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:01:47.682 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:01:47.682 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:01:47.682 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 12:01:47.682 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:01:47.685 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:01:47.686 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 12:01:47.687 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 12:01:47.724 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 12:01:47.724 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 12:01:47.724 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 12:01:47.732 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 12:01:47.732 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 12:01:47.733 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 12:01:47.733 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 12:01:47.735 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@389a5022
[DEBUG] 2019-10-02 12:01:47.737 [main] SessionFactoryRegistry - Registering SessionFactory: 865e1d0f-c640-4966-81bc-d988c8a77b39 (<unnamed>)
[DEBUG] 2019-10-02 12:01:47.737 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 12:01:47.830 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 12:01:47.841 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 12:01:47.841 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 12:01:47.866 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 12:01:47.872 [main] SQL - insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:01:47.900 [main] IdentifierGeneratorHelper - Natively generated identity: 16
[DEBUG] 2019-10-02 12:01:47.901 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:01:47.905 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 12:01:47.905 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:01:47.908 [main] IdentifierGeneratorHelper - Natively generated identity: 8
[DEBUG] 2019-10-02 12:01:47.909 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:01:47.911 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 12:01:47.912 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 12:01:47.913 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 12:01:47.919 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#16], was: [<unreferenced>] (initialized)
[DEBUG] 2019-10-02 12:01:47.922 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2019-10-02 12:01:47.922 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-02 12:01:47.924 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 12:01:47.924 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Alex, lastName=Malotky, recipes=[com.alexmalotky.entity.Recipe#8], id=16, userName=ajmalotky, email=}
[DEBUG] 2019-10-02 12:01:47.924 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=, name=TestRecipe, ingredients=, id=8, user=null}
[DEBUG] 2019-10-02 12:01:47.929 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:01:47.931 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:01:47.944 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:01:47.951 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 12:01:47.953 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 12:01:47.958 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.alexmalotky.entity.User.recipes#16]
[DEBUG] 2019-10-02 12:01:47.964 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#16]
[DEBUG] 2019-10-02 12:01:47.964 [main] TwoPhaseLoad - Processing attribute `email` : value = 
[DEBUG] 2019-10-02 12:01:47.965 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:01:47.965 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 12:01:47.965 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:01:47.965 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 12:01:47.965 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:01:47.965 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 12:01:47.965 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:01:47.965 [main] TwoPhaseLoad - Processing attribute `userName` : value = ajmalotky
[DEBUG] 2019-10-02 12:01:47.965 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:01:47.966 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#16]
[DEBUG] 2019-10-02 12:01:47.966 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:01:47.966 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#16]
[DEBUG] 2019-10-02 12:01:47.967 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:01:47.967 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:01:47.967 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#16
[DEBUG] 2019-10-02 12:01:47.967 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:04:15.368 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 12:04:15.372 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 12:04:15.378 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 12:04:15.495 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 12:04:15.498 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 12:04:15.756 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 12:04:15.757 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 12:04:15.763 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 12:04:16.155 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 12:04:16.184 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 12:04:16.186 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 12:04:16.214 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 12:04:16.262 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7dd611c8
[DEBUG] 2019-10-02 12:04:16.262 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7dd611c8
[DEBUG] 2019-10-02 12:04:16.262 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7dd611c8
[DEBUG] 2019-10-02 12:04:16.264 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@278667fd
[DEBUG] 2019-10-02 12:04:16.265 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@e042c99
[DEBUG] 2019-10-02 12:04:16.266 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f4f5330
[DEBUG] 2019-10-02 12:04:16.267 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2b34e38c
[DEBUG] 2019-10-02 12:04:16.267 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2b34e38c
[DEBUG] 2019-10-02 12:04:16.267 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2b34e38c
[DEBUG] 2019-10-02 12:04:16.269 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@468dda3e
[DEBUG] 2019-10-02 12:04:16.269 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@468dda3e
[DEBUG] 2019-10-02 12:04:16.269 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@468dda3e
[DEBUG] 2019-10-02 12:04:16.271 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@67f3d192
[DEBUG] 2019-10-02 12:04:16.271 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@67f3d192
[DEBUG] 2019-10-02 12:04:16.271 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@67f3d192
[DEBUG] 2019-10-02 12:04:16.273 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6b4283c4
[DEBUG] 2019-10-02 12:04:16.274 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6b4283c4
[DEBUG] 2019-10-02 12:04:16.274 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6b4283c4
[DEBUG] 2019-10-02 12:04:16.275 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7e744f43
[DEBUG] 2019-10-02 12:04:16.276 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7e744f43
[DEBUG] 2019-10-02 12:04:16.276 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e744f43
[DEBUG] 2019-10-02 12:04:16.277 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@49ec6a9f
[DEBUG] 2019-10-02 12:04:16.277 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@49ec6a9f
[DEBUG] 2019-10-02 12:04:16.278 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@49ec6a9f
[DEBUG] 2019-10-02 12:04:16.279 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@70cccd8f
[DEBUG] 2019-10-02 12:04:16.279 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@70cccd8f
[DEBUG] 2019-10-02 12:04:16.279 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@70cccd8f
[DEBUG] 2019-10-02 12:04:16.281 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1a0b5323
[DEBUG] 2019-10-02 12:04:16.281 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1a0b5323
[DEBUG] 2019-10-02 12:04:16.283 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@41fe8e5f
[DEBUG] 2019-10-02 12:04:16.283 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@41fe8e5f
[DEBUG] 2019-10-02 12:04:16.285 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@51a6cc2a
[DEBUG] 2019-10-02 12:04:16.285 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@51a6cc2a
[DEBUG] 2019-10-02 12:04:16.286 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28cb3a25
[DEBUG] 2019-10-02 12:04:16.287 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@9aa2002
[DEBUG] 2019-10-02 12:04:16.288 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@49ede9c7
[DEBUG] 2019-10-02 12:04:16.289 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@49ede9c7
[DEBUG] 2019-10-02 12:04:16.290 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@45404d5
[DEBUG] 2019-10-02 12:04:16.290 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@45404d5
[DEBUG] 2019-10-02 12:04:16.303 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@59ed3e6c
[DEBUG] 2019-10-02 12:04:16.303 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@59ed3e6c
[DEBUG] 2019-10-02 12:04:16.307 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4195105b
[DEBUG] 2019-10-02 12:04:16.307 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4195105b
[DEBUG] 2019-10-02 12:04:16.310 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6cd5122d
[DEBUG] 2019-10-02 12:04:16.310 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6cd5122d
[DEBUG] 2019-10-02 12:04:16.312 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@70c53dbe
[DEBUG] 2019-10-02 12:04:16.312 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@70c53dbe
[DEBUG] 2019-10-02 12:04:16.314 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@109a2025
[DEBUG] 2019-10-02 12:04:16.315 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@109a2025
[DEBUG] 2019-10-02 12:04:16.317 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6c9320c2
[DEBUG] 2019-10-02 12:04:16.317 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6c9320c2
[DEBUG] 2019-10-02 12:04:16.322 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@14823f76
[DEBUG] 2019-10-02 12:04:16.322 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@14823f76
[DEBUG] 2019-10-02 12:04:16.324 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@124ac145
[DEBUG] 2019-10-02 12:04:16.324 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@124ac145
[DEBUG] 2019-10-02 12:04:16.326 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4af70944
[DEBUG] 2019-10-02 12:04:16.326 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4af70944
[DEBUG] 2019-10-02 12:04:16.328 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7661b5a
[DEBUG] 2019-10-02 12:04:16.328 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7661b5a
[DEBUG] 2019-10-02 12:04:16.328 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7661b5a
[DEBUG] 2019-10-02 12:04:16.330 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e08acf9
[DEBUG] 2019-10-02 12:04:16.332 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5ec4ff02
[DEBUG] 2019-10-02 12:04:16.332 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5ec4ff02
[DEBUG] 2019-10-02 12:04:16.332 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5ec4ff02
[DEBUG] 2019-10-02 12:04:16.333 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@612e21b9
[DEBUG] 2019-10-02 12:04:16.334 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1a865273
[DEBUG] 2019-10-02 12:04:16.334 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a865273
[DEBUG] 2019-10-02 12:04:16.336 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@fcc6023
[DEBUG] 2019-10-02 12:04:16.336 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@fcc6023
[DEBUG] 2019-10-02 12:04:16.337 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@46185a1b
[DEBUG] 2019-10-02 12:04:16.337 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@46185a1b
[DEBUG] 2019-10-02 12:04:16.338 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4ee5b2d9
[DEBUG] 2019-10-02 12:04:16.338 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ee5b2d9
[DEBUG] 2019-10-02 12:04:16.339 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@290d10ef
[DEBUG] 2019-10-02 12:04:16.340 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@290d10ef
[DEBUG] 2019-10-02 12:04:16.340 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13d9261f
[DEBUG] 2019-10-02 12:04:16.342 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2436ea2f
[DEBUG] 2019-10-02 12:04:16.342 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2436ea2f
[DEBUG] 2019-10-02 12:04:16.342 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2436ea2f
[DEBUG] 2019-10-02 12:04:16.344 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59f93db8
[DEBUG] 2019-10-02 12:04:16.345 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59f93db8
[DEBUG] 2019-10-02 12:04:16.345 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59f93db8
[DEBUG] 2019-10-02 12:04:16.347 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@292158f8
[DEBUG] 2019-10-02 12:04:16.348 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5d5c04f9
[DEBUG] 2019-10-02 12:04:16.349 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6724cdec
[DEBUG] 2019-10-02 12:04:16.349 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6724cdec
[DEBUG] 2019-10-02 12:04:16.349 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6724cdec
[DEBUG] 2019-10-02 12:04:16.351 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60783105
[DEBUG] 2019-10-02 12:04:16.352 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60783105
[DEBUG] 2019-10-02 12:04:16.352 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60783105
[DEBUG] 2019-10-02 12:04:16.353 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2a3194c6
[DEBUG] 2019-10-02 12:04:16.354 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1e8ab90f
[DEBUG] 2019-10-02 12:04:16.357 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1907874b
[DEBUG] 2019-10-02 12:04:16.357 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1907874b
[DEBUG] 2019-10-02 12:04:16.358 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2d9dff65
[DEBUG] 2019-10-02 12:04:16.361 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@fab35b1
[DEBUG] 2019-10-02 12:04:16.361 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@fab35b1
[DEBUG] 2019-10-02 12:04:16.363 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@587a1cfb
[DEBUG] 2019-10-02 12:04:16.364 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@587a1cfb
[DEBUG] 2019-10-02 12:04:16.365 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@48d293ee
[DEBUG] 2019-10-02 12:04:16.366 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@660f0c
[DEBUG] 2019-10-02 12:04:16.368 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@76563d26
[DEBUG] 2019-10-02 12:04:16.374 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@10a0fe30
[DEBUG] 2019-10-02 12:04:16.374 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@10a0fe30
[DEBUG] 2019-10-02 12:04:16.375 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@262816a8
[DEBUG] 2019-10-02 12:04:16.376 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1effd53c
[DEBUG] 2019-10-02 12:04:16.376 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@46c269e0
[DEBUG] 2019-10-02 12:04:16.376 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6920614
[DEBUG] 2019-10-02 12:04:16.376 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6069dd38
[DEBUG] 2019-10-02 12:04:16.376 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5fa23c
[DEBUG] 2019-10-02 12:04:16.376 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@558756be
[DEBUG] 2019-10-02 12:04:16.377 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@433348bc
[DEBUG] 2019-10-02 12:04:16.456 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 12:04:16.457 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 12:04:16.459 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 12:04:16.459 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 12:04:16.460 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 12:04:16.462 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 12:04:16.462 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 12:04:16.464 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 12:04:16.465 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 12:04:16.466 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 12:04:16.467 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 12:04:16.468 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 12:04:16.468 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 12:04:16.469 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 12:04:16.480 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 12:04:16.481 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 12:04:16.481 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 12:04:16.681 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 12:04:16.909 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 12:04:16.909 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 12:04:16.910 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 12:04:16.951 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 12:04:16.995 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 12:04:17.060 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 12:04:17.127 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 12:04:17.133 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18539cb1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@748f93bb]
[DEBUG] 2019-10-02 12:04:17.207 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:04:17.237 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 12:04:17.244 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 12:04:17.248 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 12:04:17.285 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:04:17.290 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 12:04:17.293 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 12:04:17.298 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 12:04:17.303 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 12:04:17.311 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 12:04:17.314 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:04:17.314 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 12:04:17.314 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 12:04:17.315 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 12:04:17.315 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 12:04:17.315 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:04:17.316 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 12:04:17.316 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 12:04:17.316 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 12:04:17.316 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 12:04:17.316 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:04:17.317 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 12:04:17.317 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 12:04:17.317 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 12:04:17.317 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 12:04:17.326 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:04:17.328 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:04:17.332 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:04:17.346 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:04:17.347 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:04:17.351 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 12:04:17.354 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:04:17.355 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:04:17.356 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:04:17.361 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 12:04:17.362 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:04:17.362 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 12:04:17.363 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 12:04:17.363 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 12:04:17.363 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 12:04:17.365 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:04:17.365 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 12:04:17.366 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 12:04:17.366 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 12:04:17.370 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:04:17.370 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 12:04:17.371 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 12:04:17.371 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 12:04:17.371 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 12:04:17.371 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 12:04:17.372 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:04:17.372 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 12:04:17.372 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 12:04:17.372 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 12:04:17.373 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 12:04:17.373 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:04:17.373 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 12:04:17.373 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 12:04:17.373 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 12:04:17.374 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 12:04:17.374 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:04:17.374 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 12:04:17.374 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 12:04:17.375 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 12:04:17.375 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 12:04:17.375 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 12:04:17.375 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:04:17.378 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 12:04:17.380 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 12:04:17.381 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 12:04:17.381 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 12:04:17.381 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 12:04:17.381 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 12:04:17.381 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 12:04:17.381 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 12:04:17.381 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 12:04:17.381 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 12:04:17.389 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 12:04:17.389 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 12:04:17.390 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:04:17.391 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 12:04:17.393 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 12:04:17.395 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 12:04:17.395 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:04:17.396 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:04:17.401 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:04:17.461 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 12:04:17.463 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 12:04:17.464 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 12:04:17.464 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 12:04:17.464 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 12:04:17.464 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 12:04:17.464 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 12:04:17.464 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 12:04:17.464 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 12:04:17.464 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 12:04:17.464 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 12:04:17.465 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 12:04:17.465 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 12:04:17.465 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 12:04:17.465 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 12:04:17.465 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 12:04:17.465 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 12:04:17.465 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 12:04:17.465 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 12:04:17.465 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 12:04:17.465 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 12:04:17.465 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 12:04:17.465 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 12:04:17.466 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 12:04:17.466 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 12:04:17.466 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 12:04:17.466 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 12:04:17.466 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 12:04:17.466 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 12:04:17.466 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 12:04:17.466 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 12:04:17.466 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 12:04:17.466 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 12:04:17.467 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 12:04:17.467 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 12:04:17.467 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 12:04:17.467 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 12:04:17.467 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 12:04:17.467 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 12:04:17.558 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 12:04:17.589 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 12:04:17.589 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.UserDaoTest,testInsertNewRecipe, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3249e278, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 12:04:17.618 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 12:04:17.619 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 12:04:17.620 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 12:04:17.620 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18539cb1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4f281aaf]
[DEBUG] 2019-10-02 12:04:17.711 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 12:04:17.711 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:04:17.741 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 12:04:17.741 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:04:18.146 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 12:04:18.147 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:04:18.147 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 12:04:18.147 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:04:18.188 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:04:18.188 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 12:04:18.188 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 12:04:18.189 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 12:04:18.189 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 12:04:18.193 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:04:18.194 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 12:04:18.194 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 12:04:18.194 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 12:04:18.194 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 12:04:18.194 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 12:04:18.194 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:04:18.222 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@96abc76]
[DEBUG] 2019-10-02 12:04:18.223 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 12:04:18.223 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 12:04:18.224 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 12:04:18.224 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 12:04:18.230 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35fa450f]
[DEBUG] 2019-10-02 12:04:18.235 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26275b46]
[DEBUG] 2019-10-02 12:04:18.237 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 12:04:18.237 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 12:04:18.237 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 12:04:18.237 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 12:04:18.237 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 12:04:18.238 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 12:04:18.238 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:04:18.254 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:04:18.262 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 12:04:18.265 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:04:18.265 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b5021d1]
[DEBUG] 2019-10-02 12:04:18.265 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 12:04:18.265 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 12:04:18.265 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 12:04:18.265 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 12:04:18.265 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21d9cd04]
[DEBUG] 2019-10-02 12:04:18.265 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@799f354a]
[DEBUG] 2019-10-02 12:04:18.266 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 12:04:18.266 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 12:04:18.266 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 12:04:18.266 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 12:04:18.266 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 12:04:18.266 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 12:04:18.266 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:04:18.266 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:04:18.267 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 12:04:18.267 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:04:18.284 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:04:18.285 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:04:18.285 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:04:18.285 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 12:04:18.285 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 12:04:18.285 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 12:04:18.285 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 12:04:18.285 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 12:04:18.285 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:04:18.285 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23564dd2]
[DEBUG] 2019-10-02 12:04:18.285 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:04:18.286 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:04:18.286 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:04:18.286 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:04:18.286 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd0a0d0]
[DEBUG] 2019-10-02 12:04:18.287 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 12:04:18.287 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 12:04:18.287 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 12:04:18.287 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 12:04:18.287 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 12:04:18.287 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 12:04:18.287 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:04:18.288 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:04:18.288 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 12:04:18.289 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:04:18.289 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f12094d]
[DEBUG] 2019-10-02 12:04:18.289 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:04:18.289 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:04:18.289 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:04:18.290 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:04:18.290 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@200d1a3d]
[DEBUG] 2019-10-02 12:04:18.290 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 12:04:18.290 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 12:04:18.290 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 12:04:18.290 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 12:04:18.290 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 12:04:18.290 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 12:04:18.290 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:04:18.291 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:04:18.291 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 12:04:18.292 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:04:18.292 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 12:04:18.292 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 12:04:18.298 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a2546d6]
[DEBUG] 2019-10-02 12:04:18.298 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7282af25]
[DEBUG] 2019-10-02 12:04:18.299 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:04:18.299 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:04:18.299 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:04:18.299 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:04:18.299 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 12:04:18.299 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:04:18.302 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:04:18.303 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 12:04:18.303 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 12:04:18.345 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 12:04:18.346 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 12:04:18.346 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 12:04:18.354 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 12:04:18.354 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 12:04:18.356 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 12:04:18.356 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 12:04:18.358 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@389a5022
[DEBUG] 2019-10-02 12:04:18.360 [main] SessionFactoryRegistry - Registering SessionFactory: 37de3c7a-c452-445b-a1ba-87396c82e9bd (<unnamed>)
[DEBUG] 2019-10-02 12:04:18.360 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 12:04:18.454 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 12:04:18.464 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 12:04:18.464 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 12:04:18.488 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 12:04:18.494 [main] SQL - insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:04:18.521 [main] IdentifierGeneratorHelper - Natively generated identity: 17
[DEBUG] 2019-10-02 12:04:18.521 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:04:18.525 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 12:04:18.526 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:04:18.529 [main] IdentifierGeneratorHelper - Natively generated identity: 9
[DEBUG] 2019-10-02 12:04:18.529 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:04:18.532 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 12:04:18.533 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 12:04:18.534 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 12:04:18.540 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#17], was: [<unreferenced>] (initialized)
[DEBUG] 2019-10-02 12:04:18.542 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2019-10-02 12:04:18.542 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-02 12:04:18.543 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 12:04:18.544 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Alex, lastName=Malotky, recipes=[com.alexmalotky.entity.Recipe#9], id=17, userName=ajmalotky, email=}
[DEBUG] 2019-10-02 12:04:18.544 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=, name=TestRecipe, ingredients=, id=9, user=null}
[DEBUG] 2019-10-02 12:04:18.548 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:04:18.550 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:04:18.563 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:04:18.571 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 12:04:18.573 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 12:04:18.577 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.alexmalotky.entity.User.recipes#17]
[DEBUG] 2019-10-02 12:04:18.583 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#17]
[DEBUG] 2019-10-02 12:04:18.583 [main] TwoPhaseLoad - Processing attribute `email` : value = 
[DEBUG] 2019-10-02 12:04:18.583 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:04:18.583 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 12:04:18.583 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:04:18.583 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 12:04:18.584 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:04:18.584 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 12:04:18.584 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:04:18.584 [main] TwoPhaseLoad - Processing attribute `userName` : value = ajmalotky
[DEBUG] 2019-10-02 12:04:18.584 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:04:18.584 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#17]
[DEBUG] 2019-10-02 12:04:18.584 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:04:18.584 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#17]
[DEBUG] 2019-10-02 12:04:18.584 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:04:18.585 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:04:18.585 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#17
[DEBUG] 2019-10-02 12:04:18.585 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:05:27.087 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 12:05:27.091 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 12:05:27.099 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 12:05:27.219 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 12:05:27.223 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 12:05:27.502 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 12:05:27.503 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 12:05:27.511 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 12:05:27.937 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 12:05:27.964 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 12:05:27.966 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 12:05:27.993 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 12:05:28.044 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7dd611c8
[DEBUG] 2019-10-02 12:05:28.044 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7dd611c8
[DEBUG] 2019-10-02 12:05:28.044 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7dd611c8
[DEBUG] 2019-10-02 12:05:28.045 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@278667fd
[DEBUG] 2019-10-02 12:05:28.045 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@e042c99
[DEBUG] 2019-10-02 12:05:28.046 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f4f5330
[DEBUG] 2019-10-02 12:05:28.048 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2b34e38c
[DEBUG] 2019-10-02 12:05:28.048 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2b34e38c
[DEBUG] 2019-10-02 12:05:28.048 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2b34e38c
[DEBUG] 2019-10-02 12:05:28.049 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@468dda3e
[DEBUG] 2019-10-02 12:05:28.050 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@468dda3e
[DEBUG] 2019-10-02 12:05:28.050 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@468dda3e
[DEBUG] 2019-10-02 12:05:28.051 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@67f3d192
[DEBUG] 2019-10-02 12:05:28.051 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@67f3d192
[DEBUG] 2019-10-02 12:05:28.051 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@67f3d192
[DEBUG] 2019-10-02 12:05:28.053 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6b4283c4
[DEBUG] 2019-10-02 12:05:28.053 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6b4283c4
[DEBUG] 2019-10-02 12:05:28.053 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6b4283c4
[DEBUG] 2019-10-02 12:05:28.054 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7e744f43
[DEBUG] 2019-10-02 12:05:28.054 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7e744f43
[DEBUG] 2019-10-02 12:05:28.054 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e744f43
[DEBUG] 2019-10-02 12:05:28.056 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@49ec6a9f
[DEBUG] 2019-10-02 12:05:28.056 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@49ec6a9f
[DEBUG] 2019-10-02 12:05:28.056 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@49ec6a9f
[DEBUG] 2019-10-02 12:05:28.057 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@70cccd8f
[DEBUG] 2019-10-02 12:05:28.057 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@70cccd8f
[DEBUG] 2019-10-02 12:05:28.058 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@70cccd8f
[DEBUG] 2019-10-02 12:05:28.059 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1a0b5323
[DEBUG] 2019-10-02 12:05:28.059 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1a0b5323
[DEBUG] 2019-10-02 12:05:28.060 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@41fe8e5f
[DEBUG] 2019-10-02 12:05:28.060 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@41fe8e5f
[DEBUG] 2019-10-02 12:05:28.062 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@51a6cc2a
[DEBUG] 2019-10-02 12:05:28.062 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@51a6cc2a
[DEBUG] 2019-10-02 12:05:28.063 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28cb3a25
[DEBUG] 2019-10-02 12:05:28.064 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@9aa2002
[DEBUG] 2019-10-02 12:05:28.065 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@49ede9c7
[DEBUG] 2019-10-02 12:05:28.065 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@49ede9c7
[DEBUG] 2019-10-02 12:05:28.067 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@45404d5
[DEBUG] 2019-10-02 12:05:28.067 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@45404d5
[DEBUG] 2019-10-02 12:05:28.079 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@59ed3e6c
[DEBUG] 2019-10-02 12:05:28.079 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@59ed3e6c
[DEBUG] 2019-10-02 12:05:28.081 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4195105b
[DEBUG] 2019-10-02 12:05:28.082 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4195105b
[DEBUG] 2019-10-02 12:05:28.084 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6cd5122d
[DEBUG] 2019-10-02 12:05:28.084 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6cd5122d
[DEBUG] 2019-10-02 12:05:28.087 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@70c53dbe
[DEBUG] 2019-10-02 12:05:28.087 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@70c53dbe
[DEBUG] 2019-10-02 12:05:28.090 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@109a2025
[DEBUG] 2019-10-02 12:05:28.090 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@109a2025
[DEBUG] 2019-10-02 12:05:28.092 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6c9320c2
[DEBUG] 2019-10-02 12:05:28.093 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6c9320c2
[DEBUG] 2019-10-02 12:05:28.096 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@14823f76
[DEBUG] 2019-10-02 12:05:28.096 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@14823f76
[DEBUG] 2019-10-02 12:05:28.099 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@124ac145
[DEBUG] 2019-10-02 12:05:28.099 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@124ac145
[DEBUG] 2019-10-02 12:05:28.101 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4af70944
[DEBUG] 2019-10-02 12:05:28.101 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4af70944
[DEBUG] 2019-10-02 12:05:28.103 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7661b5a
[DEBUG] 2019-10-02 12:05:28.103 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7661b5a
[DEBUG] 2019-10-02 12:05:28.103 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7661b5a
[DEBUG] 2019-10-02 12:05:28.105 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e08acf9
[DEBUG] 2019-10-02 12:05:28.106 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5ec4ff02
[DEBUG] 2019-10-02 12:05:28.106 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5ec4ff02
[DEBUG] 2019-10-02 12:05:28.106 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5ec4ff02
[DEBUG] 2019-10-02 12:05:28.108 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@612e21b9
[DEBUG] 2019-10-02 12:05:28.110 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1a865273
[DEBUG] 2019-10-02 12:05:28.110 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a865273
[DEBUG] 2019-10-02 12:05:28.112 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@fcc6023
[DEBUG] 2019-10-02 12:05:28.113 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@fcc6023
[DEBUG] 2019-10-02 12:05:28.114 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@46185a1b
[DEBUG] 2019-10-02 12:05:28.115 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@46185a1b
[DEBUG] 2019-10-02 12:05:28.116 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4ee5b2d9
[DEBUG] 2019-10-02 12:05:28.116 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ee5b2d9
[DEBUG] 2019-10-02 12:05:28.118 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@290d10ef
[DEBUG] 2019-10-02 12:05:28.118 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@290d10ef
[DEBUG] 2019-10-02 12:05:28.119 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13d9261f
[DEBUG] 2019-10-02 12:05:28.122 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2436ea2f
[DEBUG] 2019-10-02 12:05:28.122 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2436ea2f
[DEBUG] 2019-10-02 12:05:28.123 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2436ea2f
[DEBUG] 2019-10-02 12:05:28.124 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59f93db8
[DEBUG] 2019-10-02 12:05:28.125 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59f93db8
[DEBUG] 2019-10-02 12:05:28.125 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59f93db8
[DEBUG] 2019-10-02 12:05:28.126 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@292158f8
[DEBUG] 2019-10-02 12:05:28.127 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5d5c04f9
[DEBUG] 2019-10-02 12:05:28.129 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6724cdec
[DEBUG] 2019-10-02 12:05:28.129 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6724cdec
[DEBUG] 2019-10-02 12:05:28.129 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6724cdec
[DEBUG] 2019-10-02 12:05:28.131 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60783105
[DEBUG] 2019-10-02 12:05:28.132 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60783105
[DEBUG] 2019-10-02 12:05:28.132 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60783105
[DEBUG] 2019-10-02 12:05:28.133 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2a3194c6
[DEBUG] 2019-10-02 12:05:28.134 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1e8ab90f
[DEBUG] 2019-10-02 12:05:28.137 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1907874b
[DEBUG] 2019-10-02 12:05:28.137 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1907874b
[DEBUG] 2019-10-02 12:05:28.138 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2d9dff65
[DEBUG] 2019-10-02 12:05:28.141 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@fab35b1
[DEBUG] 2019-10-02 12:05:28.142 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@fab35b1
[DEBUG] 2019-10-02 12:05:28.145 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@587a1cfb
[DEBUG] 2019-10-02 12:05:28.145 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@587a1cfb
[DEBUG] 2019-10-02 12:05:28.146 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@48d293ee
[DEBUG] 2019-10-02 12:05:28.147 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@660f0c
[DEBUG] 2019-10-02 12:05:28.150 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@76563d26
[DEBUG] 2019-10-02 12:05:28.157 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@10a0fe30
[DEBUG] 2019-10-02 12:05:28.157 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@10a0fe30
[DEBUG] 2019-10-02 12:05:28.158 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@262816a8
[DEBUG] 2019-10-02 12:05:28.159 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1effd53c
[DEBUG] 2019-10-02 12:05:28.162 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@46c269e0
[DEBUG] 2019-10-02 12:05:28.163 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6920614
[DEBUG] 2019-10-02 12:05:28.163 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6069dd38
[DEBUG] 2019-10-02 12:05:28.163 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5fa23c
[DEBUG] 2019-10-02 12:05:28.164 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@558756be
[DEBUG] 2019-10-02 12:05:28.164 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@433348bc
[DEBUG] 2019-10-02 12:05:28.264 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 12:05:28.265 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 12:05:28.266 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 12:05:28.267 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 12:05:28.267 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 12:05:28.270 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 12:05:28.270 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 12:05:28.273 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 12:05:28.274 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 12:05:28.275 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 12:05:28.275 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 12:05:28.276 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 12:05:28.276 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 12:05:28.277 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 12:05:28.286 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 12:05:28.286 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 12:05:28.287 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 12:05:28.586 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 12:05:28.852 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 12:05:28.853 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 12:05:28.853 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 12:05:28.901 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 12:05:28.936 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 12:05:28.977 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 12:05:29.070 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 12:05:29.078 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18539cb1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@748f93bb]
[DEBUG] 2019-10-02 12:05:29.176 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:05:29.205 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 12:05:29.212 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 12:05:29.215 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 12:05:29.252 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:05:29.256 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 12:05:29.258 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 12:05:29.266 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 12:05:29.270 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 12:05:29.278 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 12:05:29.280 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:05:29.281 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 12:05:29.281 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 12:05:29.281 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 12:05:29.281 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 12:05:29.282 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:05:29.282 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 12:05:29.282 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 12:05:29.283 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 12:05:29.283 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 12:05:29.283 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:05:29.283 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 12:05:29.283 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 12:05:29.284 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 12:05:29.284 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 12:05:29.287 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:05:29.287 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:05:29.291 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:05:29.309 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:05:29.314 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:05:29.317 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 12:05:29.319 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:05:29.320 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:05:29.321 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:05:29.325 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 12:05:29.326 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:05:29.326 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 12:05:29.327 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 12:05:29.327 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 12:05:29.327 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 12:05:29.329 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:05:29.329 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 12:05:29.330 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 12:05:29.330 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 12:05:29.335 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:05:29.335 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 12:05:29.336 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 12:05:29.336 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 12:05:29.336 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 12:05:29.336 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 12:05:29.336 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:05:29.337 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 12:05:29.337 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 12:05:29.337 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 12:05:29.337 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 12:05:29.337 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:05:29.338 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 12:05:29.338 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 12:05:29.338 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 12:05:29.338 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 12:05:29.338 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:05:29.339 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 12:05:29.339 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 12:05:29.339 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 12:05:29.339 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 12:05:29.339 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 12:05:29.339 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:05:29.343 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 12:05:29.346 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 12:05:29.347 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 12:05:29.347 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 12:05:29.347 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 12:05:29.347 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 12:05:29.347 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 12:05:29.347 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 12:05:29.349 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 12:05:29.349 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 12:05:29.359 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 12:05:29.359 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 12:05:29.359 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:05:29.360 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 12:05:29.362 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 12:05:29.364 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 12:05:29.364 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:05:29.365 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:05:29.370 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:05:29.429 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 12:05:29.430 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 12:05:29.431 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 12:05:29.431 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 12:05:29.431 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 12:05:29.431 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 12:05:29.431 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 12:05:29.431 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 12:05:29.431 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 12:05:29.431 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 12:05:29.431 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 12:05:29.431 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 12:05:29.432 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 12:05:29.432 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 12:05:29.432 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 12:05:29.432 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 12:05:29.432 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 12:05:29.432 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 12:05:29.432 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 12:05:29.432 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 12:05:29.432 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 12:05:29.433 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 12:05:29.433 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 12:05:29.433 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 12:05:29.434 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 12:05:29.434 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 12:05:29.434 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 12:05:29.434 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 12:05:29.434 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 12:05:29.434 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 12:05:29.434 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 12:05:29.435 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 12:05:29.435 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 12:05:29.435 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 12:05:29.435 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 12:05:29.435 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 12:05:29.435 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 12:05:29.435 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 12:05:29.435 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 12:05:29.521 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 12:05:29.552 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 12:05:29.552 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.UserDaoTest,testInsertNewRecipe, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3249e278, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 12:05:29.578 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 12:05:29.578 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 12:05:29.580 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 12:05:29.580 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18539cb1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4f281aaf]
[DEBUG] 2019-10-02 12:05:29.658 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 12:05:29.659 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:05:29.694 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 12:05:29.695 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:05:30.012 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 12:05:30.012 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:05:30.012 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 12:05:30.012 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:05:30.049 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:05:30.049 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 12:05:30.049 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 12:05:30.049 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 12:05:30.049 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 12:05:30.054 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:05:30.054 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 12:05:30.055 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 12:05:30.055 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 12:05:30.055 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 12:05:30.055 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 12:05:30.055 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:05:30.083 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@96abc76]
[DEBUG] 2019-10-02 12:05:30.096 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 12:05:30.096 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 12:05:30.097 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 12:05:30.097 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 12:05:30.103 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35fa450f]
[DEBUG] 2019-10-02 12:05:30.106 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26275b46]
[DEBUG] 2019-10-02 12:05:30.107 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 12:05:30.107 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 12:05:30.107 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 12:05:30.107 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 12:05:30.107 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 12:05:30.108 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 12:05:30.108 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:05:30.123 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:05:30.131 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 12:05:30.134 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:05:30.134 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b5021d1]
[DEBUG] 2019-10-02 12:05:30.134 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 12:05:30.134 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 12:05:30.134 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 12:05:30.134 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 12:05:30.134 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21d9cd04]
[DEBUG] 2019-10-02 12:05:30.134 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@799f354a]
[DEBUG] 2019-10-02 12:05:30.134 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 12:05:30.135 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 12:05:30.135 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 12:05:30.135 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 12:05:30.135 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 12:05:30.135 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 12:05:30.135 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:05:30.135 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:05:30.136 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 12:05:30.136 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:05:30.153 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:05:30.153 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:05:30.153 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:05:30.154 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 12:05:30.154 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 12:05:30.154 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 12:05:30.154 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 12:05:30.154 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 12:05:30.154 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:05:30.154 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23564dd2]
[DEBUG] 2019-10-02 12:05:30.154 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:05:30.154 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:05:30.154 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:05:30.154 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:05:30.154 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd0a0d0]
[DEBUG] 2019-10-02 12:05:30.155 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 12:05:30.155 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 12:05:30.155 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 12:05:30.155 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 12:05:30.155 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 12:05:30.155 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 12:05:30.156 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:05:30.156 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:05:30.157 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 12:05:30.157 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:05:30.157 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f12094d]
[DEBUG] 2019-10-02 12:05:30.157 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:05:30.157 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:05:30.157 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:05:30.157 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:05:30.158 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@200d1a3d]
[DEBUG] 2019-10-02 12:05:30.158 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 12:05:30.158 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 12:05:30.158 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 12:05:30.158 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 12:05:30.158 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 12:05:30.158 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 12:05:30.158 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:05:30.159 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:05:30.159 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 12:05:30.160 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:05:30.160 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 12:05:30.160 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 12:05:30.167 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a2546d6]
[DEBUG] 2019-10-02 12:05:30.167 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7282af25]
[DEBUG] 2019-10-02 12:05:30.167 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:05:30.167 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:05:30.167 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:05:30.167 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:05:30.168 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 12:05:30.168 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:05:30.171 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:05:30.172 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 12:05:30.172 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 12:05:30.212 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 12:05:30.212 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 12:05:30.213 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 12:05:30.220 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 12:05:30.220 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 12:05:30.222 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 12:05:30.222 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 12:05:30.224 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@389a5022
[DEBUG] 2019-10-02 12:05:30.226 [main] SessionFactoryRegistry - Registering SessionFactory: f1031bc3-b397-4cf6-af11-75fd014a77ff (<unnamed>)
[DEBUG] 2019-10-02 12:05:30.226 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 12:05:30.326 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 12:05:30.340 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 12:05:30.341 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 12:05:30.371 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 12:05:30.377 [main] SQL - insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:05:30.406 [main] IdentifierGeneratorHelper - Natively generated identity: 18
[DEBUG] 2019-10-02 12:05:30.406 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:05:30.410 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 12:05:30.410 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:05:30.413 [main] IdentifierGeneratorHelper - Natively generated identity: 10
[DEBUG] 2019-10-02 12:05:30.414 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:05:30.416 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 12:05:30.417 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 12:05:30.419 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 12:05:30.424 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#18], was: [<unreferenced>] (initialized)
[DEBUG] 2019-10-02 12:05:30.426 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2019-10-02 12:05:30.426 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-02 12:05:30.428 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 12:05:30.428 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Alex, lastName=Malotky, recipes=[com.alexmalotky.entity.Recipe#10], id=18, userName=ajmalotky, email=}
[DEBUG] 2019-10-02 12:05:30.428 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=, name=TestRecipe, ingredients=, id=10, user=null}
[DEBUG] 2019-10-02 12:05:30.433 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:05:30.435 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:05:30.448 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:05:30.455 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 12:05:30.457 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 12:05:30.461 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.alexmalotky.entity.User.recipes#18]
[DEBUG] 2019-10-02 12:05:30.465 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#18]
[DEBUG] 2019-10-02 12:05:30.466 [main] TwoPhaseLoad - Processing attribute `email` : value = 
[DEBUG] 2019-10-02 12:05:30.466 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:05:30.466 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 12:05:30.466 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:05:30.466 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 12:05:30.466 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:05:30.466 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 12:05:30.466 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:05:30.466 [main] TwoPhaseLoad - Processing attribute `userName` : value = ajmalotky
[DEBUG] 2019-10-02 12:05:30.466 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:05:30.466 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#18]
[DEBUG] 2019-10-02 12:05:30.467 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:05:30.467 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#18]
[DEBUG] 2019-10-02 12:05:30.467 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:05:30.467 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:05:30.467 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#18
[DEBUG] 2019-10-02 12:05:30.468 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:25:27.029 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 12:25:27.034 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 12:25:27.043 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 12:25:27.216 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 12:25:27.220 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 12:25:27.608 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 12:25:27.609 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 12:25:27.618 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 12:25:28.133 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 12:25:28.173 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 12:25:28.175 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 12:25:28.212 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 12:25:28.262 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7dd611c8
[DEBUG] 2019-10-02 12:25:28.263 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7dd611c8
[DEBUG] 2019-10-02 12:25:28.263 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7dd611c8
[DEBUG] 2019-10-02 12:25:28.263 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@278667fd
[DEBUG] 2019-10-02 12:25:28.264 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@e042c99
[DEBUG] 2019-10-02 12:25:28.265 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f4f5330
[DEBUG] 2019-10-02 12:25:28.266 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2b34e38c
[DEBUG] 2019-10-02 12:25:28.267 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2b34e38c
[DEBUG] 2019-10-02 12:25:28.267 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2b34e38c
[DEBUG] 2019-10-02 12:25:28.268 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@468dda3e
[DEBUG] 2019-10-02 12:25:28.269 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@468dda3e
[DEBUG] 2019-10-02 12:25:28.269 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@468dda3e
[DEBUG] 2019-10-02 12:25:28.270 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@67f3d192
[DEBUG] 2019-10-02 12:25:28.270 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@67f3d192
[DEBUG] 2019-10-02 12:25:28.270 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@67f3d192
[DEBUG] 2019-10-02 12:25:28.272 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6b4283c4
[DEBUG] 2019-10-02 12:25:28.272 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6b4283c4
[DEBUG] 2019-10-02 12:25:28.272 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6b4283c4
[DEBUG] 2019-10-02 12:25:28.273 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7e744f43
[DEBUG] 2019-10-02 12:25:28.274 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7e744f43
[DEBUG] 2019-10-02 12:25:28.274 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e744f43
[DEBUG] 2019-10-02 12:25:28.275 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@49ec6a9f
[DEBUG] 2019-10-02 12:25:28.275 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@49ec6a9f
[DEBUG] 2019-10-02 12:25:28.275 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@49ec6a9f
[DEBUG] 2019-10-02 12:25:28.276 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@70cccd8f
[DEBUG] 2019-10-02 12:25:28.276 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@70cccd8f
[DEBUG] 2019-10-02 12:25:28.276 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@70cccd8f
[DEBUG] 2019-10-02 12:25:28.278 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1a0b5323
[DEBUG] 2019-10-02 12:25:28.278 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1a0b5323
[DEBUG] 2019-10-02 12:25:28.279 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@41fe8e5f
[DEBUG] 2019-10-02 12:25:28.279 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@41fe8e5f
[DEBUG] 2019-10-02 12:25:28.280 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@51a6cc2a
[DEBUG] 2019-10-02 12:25:28.280 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@51a6cc2a
[DEBUG] 2019-10-02 12:25:28.281 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28cb3a25
[DEBUG] 2019-10-02 12:25:28.282 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@9aa2002
[DEBUG] 2019-10-02 12:25:28.284 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@49ede9c7
[DEBUG] 2019-10-02 12:25:28.284 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@49ede9c7
[DEBUG] 2019-10-02 12:25:28.286 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@45404d5
[DEBUG] 2019-10-02 12:25:28.286 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@45404d5
[DEBUG] 2019-10-02 12:25:28.297 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@59ed3e6c
[DEBUG] 2019-10-02 12:25:28.297 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@59ed3e6c
[DEBUG] 2019-10-02 12:25:28.300 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4195105b
[DEBUG] 2019-10-02 12:25:28.300 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4195105b
[DEBUG] 2019-10-02 12:25:28.303 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6cd5122d
[DEBUG] 2019-10-02 12:25:28.303 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6cd5122d
[DEBUG] 2019-10-02 12:25:28.305 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@70c53dbe
[DEBUG] 2019-10-02 12:25:28.305 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@70c53dbe
[DEBUG] 2019-10-02 12:25:28.307 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@109a2025
[DEBUG] 2019-10-02 12:25:28.307 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@109a2025
[DEBUG] 2019-10-02 12:25:28.310 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6c9320c2
[DEBUG] 2019-10-02 12:25:28.310 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6c9320c2
[DEBUG] 2019-10-02 12:25:28.314 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@14823f76
[DEBUG] 2019-10-02 12:25:28.315 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@14823f76
[DEBUG] 2019-10-02 12:25:28.317 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@124ac145
[DEBUG] 2019-10-02 12:25:28.317 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@124ac145
[DEBUG] 2019-10-02 12:25:28.319 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4af70944
[DEBUG] 2019-10-02 12:25:28.319 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4af70944
[DEBUG] 2019-10-02 12:25:28.321 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7661b5a
[DEBUG] 2019-10-02 12:25:28.321 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7661b5a
[DEBUG] 2019-10-02 12:25:28.321 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7661b5a
[DEBUG] 2019-10-02 12:25:28.324 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e08acf9
[DEBUG] 2019-10-02 12:25:28.326 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5ec4ff02
[DEBUG] 2019-10-02 12:25:28.326 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5ec4ff02
[DEBUG] 2019-10-02 12:25:28.326 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5ec4ff02
[DEBUG] 2019-10-02 12:25:28.327 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@612e21b9
[DEBUG] 2019-10-02 12:25:28.329 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1a865273
[DEBUG] 2019-10-02 12:25:28.329 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a865273
[DEBUG] 2019-10-02 12:25:28.332 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@fcc6023
[DEBUG] 2019-10-02 12:25:28.332 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@fcc6023
[DEBUG] 2019-10-02 12:25:28.333 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@46185a1b
[DEBUG] 2019-10-02 12:25:28.333 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@46185a1b
[DEBUG] 2019-10-02 12:25:28.335 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4ee5b2d9
[DEBUG] 2019-10-02 12:25:28.335 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ee5b2d9
[DEBUG] 2019-10-02 12:25:28.336 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@290d10ef
[DEBUG] 2019-10-02 12:25:28.336 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@290d10ef
[DEBUG] 2019-10-02 12:25:28.337 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13d9261f
[DEBUG] 2019-10-02 12:25:28.339 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2436ea2f
[DEBUG] 2019-10-02 12:25:28.339 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2436ea2f
[DEBUG] 2019-10-02 12:25:28.339 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2436ea2f
[DEBUG] 2019-10-02 12:25:28.342 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59f93db8
[DEBUG] 2019-10-02 12:25:28.342 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59f93db8
[DEBUG] 2019-10-02 12:25:28.342 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59f93db8
[DEBUG] 2019-10-02 12:25:28.344 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@292158f8
[DEBUG] 2019-10-02 12:25:28.345 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5d5c04f9
[DEBUG] 2019-10-02 12:25:28.346 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6724cdec
[DEBUG] 2019-10-02 12:25:28.346 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6724cdec
[DEBUG] 2019-10-02 12:25:28.346 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6724cdec
[DEBUG] 2019-10-02 12:25:28.348 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60783105
[DEBUG] 2019-10-02 12:25:28.348 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60783105
[DEBUG] 2019-10-02 12:25:28.349 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60783105
[DEBUG] 2019-10-02 12:25:28.349 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2a3194c6
[DEBUG] 2019-10-02 12:25:28.350 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1e8ab90f
[DEBUG] 2019-10-02 12:25:28.352 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1907874b
[DEBUG] 2019-10-02 12:25:28.352 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1907874b
[DEBUG] 2019-10-02 12:25:28.354 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2d9dff65
[DEBUG] 2019-10-02 12:25:28.356 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@fab35b1
[DEBUG] 2019-10-02 12:25:28.357 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@fab35b1
[DEBUG] 2019-10-02 12:25:28.359 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@587a1cfb
[DEBUG] 2019-10-02 12:25:28.360 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@587a1cfb
[DEBUG] 2019-10-02 12:25:28.361 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@48d293ee
[DEBUG] 2019-10-02 12:25:28.362 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@660f0c
[DEBUG] 2019-10-02 12:25:28.365 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@76563d26
[DEBUG] 2019-10-02 12:25:28.372 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@10a0fe30
[DEBUG] 2019-10-02 12:25:28.372 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@10a0fe30
[DEBUG] 2019-10-02 12:25:28.373 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@262816a8
[DEBUG] 2019-10-02 12:25:28.373 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1effd53c
[DEBUG] 2019-10-02 12:25:28.373 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@46c269e0
[DEBUG] 2019-10-02 12:25:28.374 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6920614
[DEBUG] 2019-10-02 12:25:28.374 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6069dd38
[DEBUG] 2019-10-02 12:25:28.374 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5fa23c
[DEBUG] 2019-10-02 12:25:28.374 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@558756be
[DEBUG] 2019-10-02 12:25:28.374 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@433348bc
[DEBUG] 2019-10-02 12:25:28.460 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 12:25:28.461 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 12:25:28.464 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 12:25:28.467 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 12:25:28.469 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 12:25:28.471 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 12:25:28.472 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 12:25:28.476 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 12:25:28.478 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 12:25:28.479 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 12:25:28.480 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 12:25:28.482 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 12:25:28.482 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 12:25:28.484 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 12:25:28.496 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 12:25:28.496 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 12:25:28.496 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 12:25:28.869 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 12:25:29.130 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 12:25:29.130 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 12:25:29.130 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 12:25:29.183 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 12:25:29.214 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 12:25:29.262 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 12:25:29.362 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 12:25:29.371 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18539cb1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@748f93bb]
[DEBUG] 2019-10-02 12:25:29.469 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:25:29.510 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 12:25:29.519 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 12:25:29.524 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 12:25:29.564 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:25:29.568 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 12:25:29.572 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 12:25:29.575 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 12:25:29.579 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 12:25:29.586 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 12:25:29.589 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:25:29.589 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 12:25:29.589 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 12:25:29.589 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 12:25:29.589 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 12:25:29.590 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:25:29.590 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 12:25:29.590 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 12:25:29.590 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 12:25:29.591 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 12:25:29.591 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:25:29.591 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 12:25:29.591 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 12:25:29.591 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 12:25:29.591 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 12:25:29.593 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:25:29.594 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:25:29.597 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:25:29.613 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:25:29.614 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:25:29.615 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 12:25:29.618 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:25:29.619 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:25:29.620 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:25:29.624 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 12:25:29.624 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:25:29.625 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 12:25:29.625 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 12:25:29.625 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 12:25:29.625 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 12:25:29.627 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:25:29.627 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 12:25:29.627 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 12:25:29.627 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 12:25:29.631 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:25:29.631 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 12:25:29.632 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 12:25:29.632 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 12:25:29.632 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 12:25:29.632 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 12:25:29.632 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:25:29.632 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 12:25:29.632 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 12:25:29.633 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 12:25:29.633 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 12:25:29.633 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:25:29.633 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 12:25:29.633 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 12:25:29.633 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 12:25:29.633 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 12:25:29.634 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:25:29.634 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 12:25:29.634 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 12:25:29.634 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 12:25:29.634 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 12:25:29.634 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 12:25:29.634 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:25:29.637 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 12:25:29.641 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 12:25:29.641 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 12:25:29.641 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 12:25:29.641 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 12:25:29.641 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 12:25:29.641 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 12:25:29.641 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 12:25:29.641 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 12:25:29.641 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 12:25:29.650 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 12:25:29.650 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 12:25:29.650 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:25:29.651 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 12:25:29.653 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 12:25:29.655 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 12:25:29.655 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:25:29.655 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:25:29.662 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:25:29.722 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 12:25:29.724 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 12:25:29.724 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 12:25:29.724 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 12:25:29.724 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 12:25:29.724 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 12:25:29.725 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 12:25:29.725 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 12:25:29.725 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 12:25:29.725 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 12:25:29.725 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 12:25:29.725 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 12:25:29.725 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 12:25:29.725 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 12:25:29.725 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 12:25:29.725 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 12:25:29.726 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 12:25:29.726 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 12:25:29.726 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 12:25:29.726 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 12:25:29.726 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 12:25:29.726 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 12:25:29.727 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 12:25:29.727 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 12:25:29.727 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 12:25:29.727 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 12:25:29.727 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 12:25:29.727 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 12:25:29.727 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 12:25:29.727 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 12:25:29.728 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 12:25:29.728 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 12:25:29.728 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 12:25:29.728 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 12:25:29.728 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 12:25:29.728 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 12:25:29.729 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 12:25:29.729 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 12:25:29.729 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 12:25:29.821 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 12:25:29.860 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 12:25:29.861 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.UserDaoTest,testRemoveOldRecipe, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3249e278, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 12:25:29.897 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 12:25:29.897 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 12:25:29.899 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 12:25:29.899 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18539cb1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4f281aaf]
[DEBUG] 2019-10-02 12:25:30.010 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 12:25:30.011 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:25:30.043 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 12:25:30.044 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:25:30.399 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 12:25:30.399 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:25:30.400 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 12:25:30.400 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:25:30.442 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:25:30.442 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 12:25:30.442 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 12:25:30.442 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 12:25:30.442 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 12:25:30.448 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:25:30.448 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 12:25:30.448 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 12:25:30.448 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 12:25:30.448 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 12:25:30.448 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 12:25:30.448 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:25:30.477 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27da994b]
[DEBUG] 2019-10-02 12:25:30.479 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 12:25:30.479 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 12:25:30.479 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 12:25:30.479 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 12:25:30.485 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35d7386b]
[DEBUG] 2019-10-02 12:25:30.488 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c7d7430]
[DEBUG] 2019-10-02 12:25:30.490 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 12:25:30.490 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 12:25:30.490 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 12:25:30.490 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 12:25:30.490 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 12:25:30.491 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 12:25:30.491 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:25:30.506 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:25:30.514 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 12:25:30.516 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:25:30.516 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@159ac15f]
[DEBUG] 2019-10-02 12:25:30.516 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 12:25:30.516 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 12:25:30.516 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 12:25:30.516 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 12:25:30.516 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7af1d072]
[DEBUG] 2019-10-02 12:25:30.516 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27ffd9f8]
[DEBUG] 2019-10-02 12:25:30.516 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 12:25:30.516 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 12:25:30.516 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 12:25:30.516 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 12:25:30.517 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 12:25:30.517 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 12:25:30.517 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:25:30.517 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:25:30.518 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 12:25:30.518 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:25:30.535 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:25:30.535 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:25:30.535 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:25:30.536 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 12:25:30.536 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 12:25:30.536 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 12:25:30.536 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 12:25:30.536 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 12:25:30.536 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:25:30.536 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@935d3f9]
[DEBUG] 2019-10-02 12:25:30.536 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:25:30.536 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:25:30.536 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:25:30.536 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:25:30.536 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5db0003d]
[DEBUG] 2019-10-02 12:25:30.537 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 12:25:30.537 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 12:25:30.537 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 12:25:30.537 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 12:25:30.538 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 12:25:30.538 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 12:25:30.538 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:25:30.538 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:25:30.539 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 12:25:30.539 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:25:30.539 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37d699a1]
[DEBUG] 2019-10-02 12:25:30.540 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:25:30.540 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:25:30.540 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:25:30.540 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:25:30.540 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8eb6f9a]
[DEBUG] 2019-10-02 12:25:30.540 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 12:25:30.540 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 12:25:30.540 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 12:25:30.540 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 12:25:30.540 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 12:25:30.541 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 12:25:30.541 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:25:30.541 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:25:30.542 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 12:25:30.542 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:25:30.542 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 12:25:30.542 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 12:25:30.548 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57e03347]
[DEBUG] 2019-10-02 12:25:30.549 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2edb2f8b]
[DEBUG] 2019-10-02 12:25:30.549 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:25:30.549 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:25:30.549 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:25:30.549 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:25:30.549 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 12:25:30.549 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:25:30.553 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:25:30.553 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 12:25:30.554 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 12:25:30.595 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 12:25:30.595 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 12:25:30.596 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 12:25:30.604 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 12:25:30.604 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 12:25:30.605 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 12:25:30.606 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 12:25:30.608 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@203b953c
[DEBUG] 2019-10-02 12:25:30.611 [main] SessionFactoryRegistry - Registering SessionFactory: dc11367a-13a2-4ec6-89bd-633d2117c1d9 (<unnamed>)
[DEBUG] 2019-10-02 12:25:30.611 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 12:25:30.742 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 12:25:30.774 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:25:30.808 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 12:25:30.811 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 12:25:30.826 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 12:25:30.838 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 12:25:30.839 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 12:25:30.840 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:25:30.840 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 12:25:30.840 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:25:30.840 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 12:25:30.840 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:25:30.840 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 12:25:30.840 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:25:30.840 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-02 12:25:30.840 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:25:30.841 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 12:25:30.842 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 12:25:30.842 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-02 12:25:30.842 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:25:30.842 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-02 12:25:30.842 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:25:30.842 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-02 12:25:30.842 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:25:30.842 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-02 12:25:30.842 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:25:30.842 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 12:25:30.843 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:25:30.845 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 12:25:30.845 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:25:30.846 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:25:30.847 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#2
[DEBUG] 2019-10-02 12:25:30.847 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:25:30.856 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 12:25:30.856 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 12:25:30.870 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 12:25:30.871 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 12:25:30.872 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 12:25:30.872 [main] CollectionEntry - Collection dirty: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 12:25:30.878 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#2], was: [com.alexmalotky.entity.User.recipes#2] (initialized)
[DEBUG] 2019-10-02 12:25:30.879 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 1 deletions to 2 objects
[DEBUG] 2019-10-02 12:25:30.880 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 1 updates, 0 removals to 1 collections
[DEBUG] 2019-10-02 12:25:30.882 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 12:25:30.882 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Alex, lastName=Malotky, recipes=[], id=2, userName=test2, email=null}
[DEBUG] 2019-10-02 12:25:30.882 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions={"Poor sauce into sauce pan", " Bring sauce to a boil"}, name=Boss Sauce, ingredients={ {"Spagheti Sauce" , "16 oz" } }, id=1, user=com.alexmalotky.entity.User#2}
[DEBUG] 2019-10-02 12:25:30.886 [main] SQL - update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 12:25:30.897 [main] SQL - delete from recipes where id=?
[DEBUG] 2019-10-02 12:25:30.907 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:25:30.909 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:25:30.909 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2019-10-02 12:43:41.808 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 12:43:41.813 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 12:43:41.822 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 12:43:42.051 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 12:43:42.062 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 12:43:42.478 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 12:43:42.479 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 12:43:42.488 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 12:43:43.159 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 12:43:43.190 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 12:43:43.191 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 12:43:43.216 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 12:43:43.256 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6884f0d9
[DEBUG] 2019-10-02 12:43:43.256 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6884f0d9
[DEBUG] 2019-10-02 12:43:43.256 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6884f0d9
[DEBUG] 2019-10-02 12:43:43.257 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@103082dd
[DEBUG] 2019-10-02 12:43:43.257 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70cccd8f
[DEBUG] 2019-10-02 12:43:43.258 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@71d9cb05
[DEBUG] 2019-10-02 12:43:43.260 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@34d4860f
[DEBUG] 2019-10-02 12:43:43.261 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@34d4860f
[DEBUG] 2019-10-02 12:43:43.261 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@34d4860f
[DEBUG] 2019-10-02 12:43:43.263 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7d2998d8
[DEBUG] 2019-10-02 12:43:43.263 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7d2998d8
[DEBUG] 2019-10-02 12:43:43.263 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d2998d8
[DEBUG] 2019-10-02 12:43:43.265 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5555ffcf
[DEBUG] 2019-10-02 12:43:43.265 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5555ffcf
[DEBUG] 2019-10-02 12:43:43.265 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5555ffcf
[DEBUG] 2019-10-02 12:43:43.267 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5a2fa51f
[DEBUG] 2019-10-02 12:43:43.267 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5a2fa51f
[DEBUG] 2019-10-02 12:43:43.267 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5a2fa51f
[DEBUG] 2019-10-02 12:43:43.268 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3f725306
[DEBUG] 2019-10-02 12:43:43.268 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3f725306
[DEBUG] 2019-10-02 12:43:43.269 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3f725306
[DEBUG] 2019-10-02 12:43:43.270 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@496a31da
[DEBUG] 2019-10-02 12:43:43.270 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@496a31da
[DEBUG] 2019-10-02 12:43:43.270 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@496a31da
[DEBUG] 2019-10-02 12:43:43.271 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2e6f610d
[DEBUG] 2019-10-02 12:43:43.271 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2e6f610d
[DEBUG] 2019-10-02 12:43:43.271 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2e6f610d
[DEBUG] 2019-10-02 12:43:43.273 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6daf7d37
[DEBUG] 2019-10-02 12:43:43.273 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6daf7d37
[DEBUG] 2019-10-02 12:43:43.274 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@17690e14
[DEBUG] 2019-10-02 12:43:43.274 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@17690e14
[DEBUG] 2019-10-02 12:43:43.275 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5d7ca698
[DEBUG] 2019-10-02 12:43:43.276 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5d7ca698
[DEBUG] 2019-10-02 12:43:43.276 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@16e7b402
[DEBUG] 2019-10-02 12:43:43.277 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@24db6ce
[DEBUG] 2019-10-02 12:43:43.278 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6a638c79
[DEBUG] 2019-10-02 12:43:43.279 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6a638c79
[DEBUG] 2019-10-02 12:43:43.280 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5b22d8a1
[DEBUG] 2019-10-02 12:43:43.280 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5b22d8a1
[DEBUG] 2019-10-02 12:43:43.292 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@113e13f9
[DEBUG] 2019-10-02 12:43:43.292 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@113e13f9
[DEBUG] 2019-10-02 12:43:43.295 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@124ac145
[DEBUG] 2019-10-02 12:43:43.295 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@124ac145
[DEBUG] 2019-10-02 12:43:43.298 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@37e0292a
[DEBUG] 2019-10-02 12:43:43.298 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@37e0292a
[DEBUG] 2019-10-02 12:43:43.300 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@9b21bd3
[DEBUG] 2019-10-02 12:43:43.300 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@9b21bd3
[DEBUG] 2019-10-02 12:43:43.302 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@42ea287
[DEBUG] 2019-10-02 12:43:43.302 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@42ea287
[DEBUG] 2019-10-02 12:43:43.304 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5ec4ff02
[DEBUG] 2019-10-02 12:43:43.305 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5ec4ff02
[DEBUG] 2019-10-02 12:43:43.308 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@44bd4b0a
[DEBUG] 2019-10-02 12:43:43.308 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@44bd4b0a
[DEBUG] 2019-10-02 12:43:43.310 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@46185a1b
[DEBUG] 2019-10-02 12:43:43.310 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@46185a1b
[DEBUG] 2019-10-02 12:43:43.311 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@72f8ae0c
[DEBUG] 2019-10-02 12:43:43.311 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@72f8ae0c
[DEBUG] 2019-10-02 12:43:43.313 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@644ded04
[DEBUG] 2019-10-02 12:43:43.313 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@644ded04
[DEBUG] 2019-10-02 12:43:43.313 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@644ded04
[DEBUG] 2019-10-02 12:43:43.315 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5300cac
[DEBUG] 2019-10-02 12:43:43.317 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@20cece0b
[DEBUG] 2019-10-02 12:43:43.317 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@20cece0b
[DEBUG] 2019-10-02 12:43:43.317 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@20cece0b
[DEBUG] 2019-10-02 12:43:43.318 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@59f93db8
[DEBUG] 2019-10-02 12:43:43.319 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@292158f8
[DEBUG] 2019-10-02 12:43:43.319 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@292158f8
[DEBUG] 2019-10-02 12:43:43.321 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7e7f0216
[DEBUG] 2019-10-02 12:43:43.321 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7e7f0216
[DEBUG] 2019-10-02 12:43:43.322 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5bc7e78e
[DEBUG] 2019-10-02 12:43:43.322 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5bc7e78e
[DEBUG] 2019-10-02 12:43:43.323 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@b606cb6
[DEBUG] 2019-10-02 12:43:43.324 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@b606cb6
[DEBUG] 2019-10-02 12:43:43.325 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7a729f84
[DEBUG] 2019-10-02 12:43:43.325 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7a729f84
[DEBUG] 2019-10-02 12:43:43.326 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@71904469
[DEBUG] 2019-10-02 12:43:43.329 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2d9dff65
[DEBUG] 2019-10-02 12:43:43.329 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2d9dff65
[DEBUG] 2019-10-02 12:43:43.329 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2d9dff65
[DEBUG] 2019-10-02 12:43:43.331 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6eb17ec8
[DEBUG] 2019-10-02 12:43:43.332 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6eb17ec8
[DEBUG] 2019-10-02 12:43:43.332 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6eb17ec8
[DEBUG] 2019-10-02 12:43:43.333 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4beaf6bd
[DEBUG] 2019-10-02 12:43:43.334 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3374b5bc
[DEBUG] 2019-10-02 12:43:43.336 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@146dcfe6
[DEBUG] 2019-10-02 12:43:43.336 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@146dcfe6
[DEBUG] 2019-10-02 12:43:43.336 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@146dcfe6
[DEBUG] 2019-10-02 12:43:43.338 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4a734c04
[DEBUG] 2019-10-02 12:43:43.339 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4a734c04
[DEBUG] 2019-10-02 12:43:43.339 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4a734c04
[DEBUG] 2019-10-02 12:43:43.340 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@658255aa
[DEBUG] 2019-10-02 12:43:43.341 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3d904e9c
[DEBUG] 2019-10-02 12:43:43.343 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@38d17d80
[DEBUG] 2019-10-02 12:43:43.343 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@38d17d80
[DEBUG] 2019-10-02 12:43:43.344 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1229a2b7
[DEBUG] 2019-10-02 12:43:43.347 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@46c269e0
[DEBUG] 2019-10-02 12:43:43.347 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@46c269e0
[DEBUG] 2019-10-02 12:43:43.350 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@252dc8c4
[DEBUG] 2019-10-02 12:43:43.350 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@252dc8c4
[DEBUG] 2019-10-02 12:43:43.351 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f236de0
[DEBUG] 2019-10-02 12:43:43.352 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3968bc60
[DEBUG] 2019-10-02 12:43:43.353 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2849434b
[DEBUG] 2019-10-02 12:43:43.358 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6edcad64
[DEBUG] 2019-10-02 12:43:43.359 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6edcad64
[DEBUG] 2019-10-02 12:43:43.359 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@623dcf2a
[DEBUG] 2019-10-02 12:43:43.360 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2eae4349
[DEBUG] 2019-10-02 12:43:43.360 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@e84fb85
[DEBUG] 2019-10-02 12:43:43.360 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@68a4dcc6
[DEBUG] 2019-10-02 12:43:43.360 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@646c0a67
[DEBUG] 2019-10-02 12:43:43.360 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3804a9a8
[DEBUG] 2019-10-02 12:43:43.360 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@117525fe
[DEBUG] 2019-10-02 12:43:43.361 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5f7989fa
[DEBUG] 2019-10-02 12:43:43.473 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 12:43:43.475 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 12:43:43.476 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 12:43:43.477 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 12:43:43.478 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 12:43:43.480 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 12:43:43.481 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 12:43:43.484 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 12:43:43.486 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 12:43:43.488 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 12:43:43.489 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 12:43:43.489 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 12:43:43.489 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 12:43:43.491 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 12:43:43.502 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 12:43:43.502 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 12:43:43.503 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 12:43:43.926 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 12:43:44.875 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 12:43:44.875 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 12:43:44.875 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 12:43:44.929 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 12:43:44.970 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 12:43:45.087 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 12:43:45.156 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 12:43:45.161 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1cfc2538] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@66deec87]
[DEBUG] 2019-10-02 12:43:45.227 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:43:45.255 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 12:43:45.264 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 12:43:45.268 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 12:43:45.304 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:43:45.307 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 12:43:45.309 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 12:43:45.313 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 12:43:45.316 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 12:43:45.321 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 12:43:45.323 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:43:45.323 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 12:43:45.324 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 12:43:45.324 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 12:43:45.324 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 12:43:45.324 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:43:45.325 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 12:43:45.325 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 12:43:45.325 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 12:43:45.325 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 12:43:45.325 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:43:45.325 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 12:43:45.325 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 12:43:45.326 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 12:43:45.326 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 12:43:45.328 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:43:45.329 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:43:45.332 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:43:45.347 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:43:45.348 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:43:45.350 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 12:43:45.353 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:43:45.353 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:43:45.354 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:43:45.359 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 12:43:45.359 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:43:45.359 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 12:43:45.360 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 12:43:45.360 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 12:43:45.360 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 12:43:45.362 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:43:45.362 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 12:43:45.362 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 12:43:45.363 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 12:43:45.366 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:43:45.366 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 12:43:45.366 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 12:43:45.366 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 12:43:45.366 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 12:43:45.366 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 12:43:45.367 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:43:45.367 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 12:43:45.367 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 12:43:45.367 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 12:43:45.367 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 12:43:45.367 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:43:45.367 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 12:43:45.367 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 12:43:45.367 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 12:43:45.367 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 12:43:45.368 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:43:45.368 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 12:43:45.368 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 12:43:45.368 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 12:43:45.368 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 12:43:45.368 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 12:43:45.368 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:43:45.372 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 12:43:45.374 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 12:43:45.374 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 12:43:45.374 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 12:43:45.374 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 12:43:45.375 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 12:43:45.375 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 12:43:45.375 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 12:43:45.375 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 12:43:45.375 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 12:43:45.381 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 12:43:45.382 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 12:43:45.382 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:43:45.383 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 12:43:45.384 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 12:43:45.385 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 12:43:45.386 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:43:45.386 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:43:45.391 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:43:45.435 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 12:43:45.437 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 12:43:45.437 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 12:43:45.437 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 12:43:45.437 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 12:43:45.437 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 12:43:45.437 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 12:43:45.438 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 12:43:45.438 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 12:43:45.438 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 12:43:45.438 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 12:43:45.438 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 12:43:45.438 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 12:43:45.438 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 12:43:45.438 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 12:43:45.438 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 12:43:45.438 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 12:43:45.438 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 12:43:45.438 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 12:43:45.438 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 12:43:45.439 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 12:43:45.439 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 12:43:45.439 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 12:43:45.439 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 12:43:45.439 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 12:43:45.439 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 12:43:45.439 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 12:43:45.439 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 12:43:45.439 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 12:43:45.439 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 12:43:45.439 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 12:43:45.439 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 12:43:45.439 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 12:43:45.440 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 12:43:45.440 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 12:43:45.440 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 12:43:45.440 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 12:43:45.440 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 12:43:45.440 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 12:43:45.518 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 12:43:45.546 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 12:43:45.546 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.RecipeDaoTest,testGetAll, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5bcec67e, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 12:43:45.571 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 12:43:45.571 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 12:43:45.572 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 12:43:45.572 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1cfc2538] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6c977dcf]
[DEBUG] 2019-10-02 12:43:45.640 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 12:43:45.641 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:43:45.686 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 12:43:45.686 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:43:46.027 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 12:43:46.027 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:43:46.027 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 12:43:46.027 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:43:46.062 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:43:46.062 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 12:43:46.063 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 12:43:46.063 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 12:43:46.063 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 12:43:46.068 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:43:46.068 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 12:43:46.068 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 12:43:46.068 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 12:43:46.069 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 12:43:46.069 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 12:43:46.069 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:43:46.096 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@283ab206]
[DEBUG] 2019-10-02 12:43:46.097 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 12:43:46.098 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 12:43:46.098 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 12:43:46.098 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 12:43:46.103 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ed18d80]
[DEBUG] 2019-10-02 12:43:46.106 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66451058]
[DEBUG] 2019-10-02 12:43:46.108 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 12:43:46.108 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 12:43:46.108 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 12:43:46.108 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 12:43:46.108 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 12:43:46.109 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 12:43:46.109 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:43:46.125 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:43:46.133 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 12:43:46.135 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:43:46.135 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a04ab05]
[DEBUG] 2019-10-02 12:43:46.136 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 12:43:46.136 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 12:43:46.136 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 12:43:46.136 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 12:43:46.136 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a056b26]
[DEBUG] 2019-10-02 12:43:46.136 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a5abd3c]
[DEBUG] 2019-10-02 12:43:46.136 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 12:43:46.136 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 12:43:46.136 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 12:43:46.136 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 12:43:46.136 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 12:43:46.136 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 12:43:46.136 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:43:46.137 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:43:46.137 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 12:43:46.137 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:43:46.155 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:43:46.156 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:43:46.156 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:43:46.156 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 12:43:46.156 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 12:43:46.156 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 12:43:46.156 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 12:43:46.156 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 12:43:46.157 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:43:46.157 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7772d266]
[DEBUG] 2019-10-02 12:43:46.157 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:43:46.157 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:43:46.157 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:43:46.157 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:43:46.157 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b8a144e]
[DEBUG] 2019-10-02 12:43:46.158 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 12:43:46.158 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 12:43:46.158 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 12:43:46.158 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 12:43:46.158 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 12:43:46.159 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 12:43:46.159 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:43:46.159 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:43:46.160 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 12:43:46.160 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:43:46.160 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14b8a751]
[DEBUG] 2019-10-02 12:43:46.160 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:43:46.160 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:43:46.160 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:43:46.160 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:43:46.161 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@554566a8]
[DEBUG] 2019-10-02 12:43:46.161 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 12:43:46.161 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 12:43:46.161 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 12:43:46.161 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 12:43:46.161 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 12:43:46.161 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 12:43:46.162 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:43:46.162 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:43:46.163 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 12:43:46.163 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:43:46.163 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 12:43:46.164 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 12:43:46.173 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@664db2ca]
[DEBUG] 2019-10-02 12:43:46.173 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1491cd6c]
[DEBUG] 2019-10-02 12:43:46.174 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:43:46.174 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:43:46.174 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:43:46.174 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:43:46.174 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 12:43:46.174 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:43:46.178 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:43:46.179 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 12:43:46.180 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 12:43:46.227 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 12:43:46.227 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 12:43:46.227 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 12:43:46.238 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 12:43:46.238 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 12:43:46.240 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 12:43:46.240 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 12:43:46.242 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@394fb736
[DEBUG] 2019-10-02 12:43:46.245 [main] SessionFactoryRegistry - Registering SessionFactory: 86df12d1-1d70-492d-b22a-a9bb7039ad40 (<unnamed>)
[DEBUG] 2019-10-02 12:43:46.245 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 12:43:46.372 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 12:43:46.412 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0
[DEBUG] 2019-10-02 12:43:46.434 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@77ce88c4
[DEBUG] 2019-10-02 12:43:46.470 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0
[DEBUG] 2019-10-02 12:43:46.481 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 12:43:46.494 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'alexmalotky'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Recipe'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-10-02 12:43:46.531 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-02 12:43:46.559 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.Recipe (generatedAlias0) -> recipe0_
[DEBUG] 2019-10-02 12:43:46.562 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 12:43:46.565 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-02 12:43:46.565 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipe0_.id ) ( FromClause{level=1} recipes recipe0_ ) )
[DEBUG] 2019-10-02 12:43:46.579 [main] JoinProcessor - Using FROM fragment [recipes recipe0_]
[DEBUG] 2019-10-02 12:43:46.579 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-02 12:43:46.580 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipe0_.id as id1_0_' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipe0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'recipes recipe0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=recipes,tableAlias=recipe0_,origin=null,columns={,className=com.alexmalotky.entity.Recipe}}

[DEBUG] 2019-10-02 12:43:46.580 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 12:43:46.593 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0
[DEBUG] 2019-10-02 12:43:46.593 [main] QueryTranslatorImpl - SQL: select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_
[DEBUG] 2019-10-02 12:43:46.593 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 12:43:46.621 [main] SQL - select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_
[DEBUG] 2019-10-02 12:43:46.661 [main] Loader - Result set row: 0
[DEBUG] 2019-10-02 12:43:46.666 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 12:43:46.679 [main] Loader - Result set row: 1
[DEBUG] 2019-10-02 12:43:46.679 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 12:43:46.679 [main] Loader - Result set row: 2
[DEBUG] 2019-10-02 12:43:46.680 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 12:43:46.681 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 12:43:46.682 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 12:43:46.682 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.683 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 12:43:46.683 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.683 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 12:43:46.683 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.683 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 12:43:46.683 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.693 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:43:46.700 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 12:43:46.702 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 12:43:46.704 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 12:43:46.719 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 12:43:46.719 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 12:43:46.719 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.719 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 12:43:46.719 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.719 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 12:43:46.720 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.720 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 12:43:46.720 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.720 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 12:43:46.720 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.722 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 12:43:46.725 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:43:46.736 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 12:43:46.736 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:43:46.737 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:43:46.738 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 12:43:46.738 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 12:43:46.738 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 12:43:46.739 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-02 12:43:46.739 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.739 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-02 12:43:46.739 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.739 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-02 12:43:46.741 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.742 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-02 12:43:46.742 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.742 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:43:46.745 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 12:43:46.746 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 12:43:46.747 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 12:43:46.747 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 12:43:46.747 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 12:43:46.747 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.747 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 12:43:46.747 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.748 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 12:43:46.748 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.748 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 12:43:46.749 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.749 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-02 12:43:46.749 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.749 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 12:43:46.749 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:43:46.749 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 12:43:46.750 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:43:46.750 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:43:46.750 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#2
[DEBUG] 2019-10-02 12:43:46.750 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 12:43:46.750 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 12:43:46.750 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-02 12:43:46.750 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.750 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-02 12:43:46.751 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.751 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 12:43:46.751 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.751 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 12:43:46.751 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.751 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:43:46.754 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 12:43:46.755 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 12:43:46.756 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 12:43:46.756 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 12:43:46.757 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 12:43:46.757 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.757 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 12:43:46.757 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.757 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 12:43:46.757 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.757 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 12:43:46.758 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.758 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 12:43:46.758 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:43:46.758 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 12:43:46.758 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:43:46.758 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 12:43:46.758 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:43:46.759 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:43:46.759 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#3
[DEBUG] 2019-10-02 12:43:46.759 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 12:43:46.763 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:51:39.375 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 12:51:39.379 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 12:51:39.385 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 12:51:39.519 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 12:51:39.523 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 12:51:39.792 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 12:51:39.794 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 12:51:39.802 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 12:51:40.243 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 12:51:40.272 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 12:51:40.273 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 12:51:40.299 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 12:51:40.352 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@49ec6a9f
[DEBUG] 2019-10-02 12:51:40.353 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@49ec6a9f
[DEBUG] 2019-10-02 12:51:40.353 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@49ec6a9f
[DEBUG] 2019-10-02 12:51:40.354 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3a22bad6
[DEBUG] 2019-10-02 12:51:40.354 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5f172d4a
[DEBUG] 2019-10-02 12:51:40.355 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@17c2d509
[DEBUG] 2019-10-02 12:51:40.357 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@665522c2
[DEBUG] 2019-10-02 12:51:40.357 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@665522c2
[DEBUG] 2019-10-02 12:51:40.357 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@665522c2
[DEBUG] 2019-10-02 12:51:40.359 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6a0094c9
[DEBUG] 2019-10-02 12:51:40.359 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6a0094c9
[DEBUG] 2019-10-02 12:51:40.359 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6a0094c9
[DEBUG] 2019-10-02 12:51:40.361 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6cfd9a54
[DEBUG] 2019-10-02 12:51:40.361 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6cfd9a54
[DEBUG] 2019-10-02 12:51:40.361 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6cfd9a54
[DEBUG] 2019-10-02 12:51:40.363 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@71945bc0
[DEBUG] 2019-10-02 12:51:40.363 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@71945bc0
[DEBUG] 2019-10-02 12:51:40.363 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@71945bc0
[DEBUG] 2019-10-02 12:51:40.364 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3c69362a
[DEBUG] 2019-10-02 12:51:40.365 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3c69362a
[DEBUG] 2019-10-02 12:51:40.365 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3c69362a
[DEBUG] 2019-10-02 12:51:40.366 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7c251f90
[DEBUG] 2019-10-02 12:51:40.366 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7c251f90
[DEBUG] 2019-10-02 12:51:40.367 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7c251f90
[DEBUG] 2019-10-02 12:51:40.368 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1e86a5a7
[DEBUG] 2019-10-02 12:51:40.368 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1e86a5a7
[DEBUG] 2019-10-02 12:51:40.368 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e86a5a7
[DEBUG] 2019-10-02 12:51:40.370 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@23a5818e
[DEBUG] 2019-10-02 12:51:40.370 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@23a5818e
[DEBUG] 2019-10-02 12:51:40.371 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6850b758
[DEBUG] 2019-10-02 12:51:40.372 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6850b758
[DEBUG] 2019-10-02 12:51:40.374 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@75961f16
[DEBUG] 2019-10-02 12:51:40.374 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@75961f16
[DEBUG] 2019-10-02 12:51:40.375 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@534c6767
[DEBUG] 2019-10-02 12:51:40.376 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@320a8ebf
[DEBUG] 2019-10-02 12:51:40.378 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6c931d35
[DEBUG] 2019-10-02 12:51:40.378 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6c931d35
[DEBUG] 2019-10-02 12:51:40.380 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@476ee5b3
[DEBUG] 2019-10-02 12:51:40.380 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@476ee5b3
[DEBUG] 2019-10-02 12:51:40.393 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1c7f96b1
[DEBUG] 2019-10-02 12:51:40.393 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1c7f96b1
[DEBUG] 2019-10-02 12:51:40.396 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2def7a7a
[DEBUG] 2019-10-02 12:51:40.397 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2def7a7a
[DEBUG] 2019-10-02 12:51:40.399 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4af70944
[DEBUG] 2019-10-02 12:51:40.400 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4af70944
[DEBUG] 2019-10-02 12:51:40.402 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@a62c7cd
[DEBUG] 2019-10-02 12:51:40.402 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@a62c7cd
[DEBUG] 2019-10-02 12:51:40.405 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78cd163b
[DEBUG] 2019-10-02 12:51:40.405 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78cd163b
[DEBUG] 2019-10-02 12:51:40.407 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f11f64e
[DEBUG] 2019-10-02 12:51:40.408 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f11f64e
[DEBUG] 2019-10-02 12:51:40.411 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6c008c24
[DEBUG] 2019-10-02 12:51:40.411 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6c008c24
[DEBUG] 2019-10-02 12:51:40.413 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@51288417
[DEBUG] 2019-10-02 12:51:40.414 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@51288417
[DEBUG] 2019-10-02 12:51:40.416 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@323f3c96
[DEBUG] 2019-10-02 12:51:40.416 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@323f3c96
[DEBUG] 2019-10-02 12:51:40.418 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5292ceca
[DEBUG] 2019-10-02 12:51:40.418 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5292ceca
[DEBUG] 2019-10-02 12:51:40.418 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5292ceca
[DEBUG] 2019-10-02 12:51:40.420 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4110765e
[DEBUG] 2019-10-02 12:51:40.422 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4c777e7b
[DEBUG] 2019-10-02 12:51:40.422 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c777e7b
[DEBUG] 2019-10-02 12:51:40.422 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c777e7b
[DEBUG] 2019-10-02 12:51:40.424 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1aabf50d
[DEBUG] 2019-10-02 12:51:40.426 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@53ec2968
[DEBUG] 2019-10-02 12:51:40.426 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@53ec2968
[DEBUG] 2019-10-02 12:51:40.428 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4339baec
[DEBUG] 2019-10-02 12:51:40.428 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4339baec
[DEBUG] 2019-10-02 12:51:40.430 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1a4d1ab7
[DEBUG] 2019-10-02 12:51:40.431 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1a4d1ab7
[DEBUG] 2019-10-02 12:51:40.433 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2a3194c6
[DEBUG] 2019-10-02 12:51:40.433 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2a3194c6
[DEBUG] 2019-10-02 12:51:40.435 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e469dfd
[DEBUG] 2019-10-02 12:51:40.436 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e469dfd
[DEBUG] 2019-10-02 12:51:40.437 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5b9396d3
[DEBUG] 2019-10-02 12:51:40.439 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ef6fd7f
[DEBUG] 2019-10-02 12:51:40.440 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ef6fd7f
[DEBUG] 2019-10-02 12:51:40.440 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ef6fd7f
[DEBUG] 2019-10-02 12:51:40.442 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@730f9695
[DEBUG] 2019-10-02 12:51:40.443 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@730f9695
[DEBUG] 2019-10-02 12:51:40.443 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@730f9695
[DEBUG] 2019-10-02 12:51:40.445 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6b2e46af
[DEBUG] 2019-10-02 12:51:40.446 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2af69643
[DEBUG] 2019-10-02 12:51:40.448 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@22587507
[DEBUG] 2019-10-02 12:51:40.448 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@22587507
[DEBUG] 2019-10-02 12:51:40.449 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@22587507
[DEBUG] 2019-10-02 12:51:40.451 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4760f169
[DEBUG] 2019-10-02 12:51:40.451 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4760f169
[DEBUG] 2019-10-02 12:51:40.451 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4760f169
[DEBUG] 2019-10-02 12:51:40.452 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@25290bca
[DEBUG] 2019-10-02 12:51:40.453 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@508a65bf
[DEBUG] 2019-10-02 12:51:40.456 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6ede46f6
[DEBUG] 2019-10-02 12:51:40.457 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6ede46f6
[DEBUG] 2019-10-02 12:51:40.457 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e5cbff2
[DEBUG] 2019-10-02 12:51:40.460 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6920614
[DEBUG] 2019-10-02 12:51:40.461 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6920614
[DEBUG] 2019-10-02 12:51:40.464 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@43045f9f
[DEBUG] 2019-10-02 12:51:40.464 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@43045f9f
[DEBUG] 2019-10-02 12:51:40.465 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4eba373c
[DEBUG] 2019-10-02 12:51:40.466 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26f46fa6
[DEBUG] 2019-10-02 12:51:40.469 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@60bbacfc
[DEBUG] 2019-10-02 12:51:40.476 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4c6007fb
[DEBUG] 2019-10-02 12:51:40.476 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4c6007fb
[DEBUG] 2019-10-02 12:51:40.477 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2eae4349
[DEBUG] 2019-10-02 12:51:40.478 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@e84fb85
[DEBUG] 2019-10-02 12:51:40.478 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@68a4dcc6
[DEBUG] 2019-10-02 12:51:40.478 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@646c0a67
[DEBUG] 2019-10-02 12:51:40.478 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3804a9a8
[DEBUG] 2019-10-02 12:51:40.478 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@117525fe
[DEBUG] 2019-10-02 12:51:40.479 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f7989fa
[DEBUG] 2019-10-02 12:51:40.479 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5bc28f40
[DEBUG] 2019-10-02 12:51:40.565 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 12:51:40.566 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 12:51:40.568 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 12:51:40.569 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 12:51:40.570 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 12:51:40.572 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 12:51:40.573 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 12:51:40.575 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 12:51:40.576 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 12:51:40.577 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 12:51:40.578 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 12:51:40.579 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 12:51:40.579 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 12:51:40.580 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 12:51:40.589 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 12:51:40.589 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 12:51:40.589 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 12:51:40.825 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 12:51:41.090 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 12:51:41.091 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 12:51:41.091 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 12:51:41.149 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 12:51:41.191 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 12:51:41.232 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 12:51:41.311 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 12:51:41.317 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66deec87] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5d342959]
[DEBUG] 2019-10-02 12:51:41.396 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:51:41.433 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 12:51:41.440 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 12:51:41.444 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 12:51:41.478 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:51:41.482 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 12:51:41.484 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 12:51:41.487 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 12:51:41.492 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 12:51:41.496 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 12:51:41.498 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:51:41.499 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 12:51:41.499 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 12:51:41.499 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 12:51:41.499 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 12:51:41.500 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:51:41.500 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 12:51:41.500 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 12:51:41.500 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 12:51:41.500 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 12:51:41.501 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:51:41.501 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 12:51:41.501 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 12:51:41.501 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 12:51:41.501 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 12:51:41.503 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:51:41.503 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:51:41.507 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:51:41.520 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:51:41.522 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:51:41.524 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 12:51:41.526 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:51:41.526 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:51:41.527 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:51:41.530 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 12:51:41.530 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:51:41.531 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 12:51:41.531 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 12:51:41.531 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 12:51:41.531 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 12:51:41.532 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:51:41.533 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 12:51:41.533 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 12:51:41.533 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 12:51:41.536 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:51:41.536 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 12:51:41.536 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 12:51:41.536 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 12:51:41.536 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 12:51:41.536 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 12:51:41.537 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:51:41.537 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 12:51:41.537 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 12:51:41.537 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 12:51:41.537 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 12:51:41.537 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:51:41.538 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 12:51:41.538 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 12:51:41.538 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 12:51:41.538 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 12:51:41.538 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:51:41.538 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 12:51:41.539 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 12:51:41.539 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 12:51:41.539 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 12:51:41.539 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 12:51:41.539 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:51:41.543 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 12:51:41.545 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 12:51:41.546 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 12:51:41.546 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 12:51:41.546 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 12:51:41.546 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 12:51:41.546 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 12:51:41.546 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 12:51:41.546 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 12:51:41.546 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 12:51:41.552 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 12:51:41.552 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 12:51:41.552 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:51:41.553 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 12:51:41.554 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 12:51:41.555 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 12:51:41.555 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:51:41.556 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:51:41.560 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:51:41.611 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 12:51:41.612 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 12:51:41.612 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 12:51:41.613 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 12:51:41.613 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 12:51:41.613 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 12:51:41.613 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 12:51:41.613 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 12:51:41.613 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 12:51:41.613 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 12:51:41.613 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 12:51:41.613 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 12:51:41.614 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 12:51:41.614 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 12:51:41.614 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 12:51:41.614 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 12:51:41.614 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 12:51:41.614 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 12:51:41.614 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 12:51:41.614 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 12:51:41.615 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 12:51:41.615 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 12:51:41.615 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 12:51:41.615 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 12:51:41.615 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 12:51:41.615 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 12:51:41.615 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 12:51:41.615 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 12:51:41.615 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 12:51:41.616 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 12:51:41.616 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 12:51:41.616 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 12:51:41.616 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 12:51:41.616 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 12:51:41.616 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 12:51:41.616 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 12:51:41.616 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 12:51:41.616 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 12:51:41.616 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 12:51:41.686 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 12:51:41.712 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 12:51:41.712 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.RecipeDaoTest,testGetByID, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2dafae61, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 12:51:41.735 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 12:51:41.736 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 12:51:41.737 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 12:51:41.737 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@66deec87] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@661d6bb6]
[DEBUG] 2019-10-02 12:51:41.807 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 12:51:41.807 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:51:41.831 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 12:51:41.831 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:51:42.161 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 12:51:42.161 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:51:42.162 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 12:51:42.162 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:51:42.196 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:51:42.196 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 12:51:42.196 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 12:51:42.196 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 12:51:42.196 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 12:51:42.201 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:51:42.202 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 12:51:42.202 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 12:51:42.202 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 12:51:42.202 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 12:51:42.202 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 12:51:42.202 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:51:42.231 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35fa450f]
[DEBUG] 2019-10-02 12:51:42.233 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 12:51:42.233 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 12:51:42.233 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 12:51:42.233 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 12:51:42.243 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c24f3a2]
[DEBUG] 2019-10-02 12:51:42.248 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3db6dd52]
[DEBUG] 2019-10-02 12:51:42.250 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 12:51:42.250 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 12:51:42.250 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 12:51:42.250 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 12:51:42.250 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 12:51:42.251 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 12:51:42.251 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:51:42.268 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:51:42.278 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 12:51:42.280 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:51:42.281 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ebbde60]
[DEBUG] 2019-10-02 12:51:42.281 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 12:51:42.281 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 12:51:42.281 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 12:51:42.281 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 12:51:42.281 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a5abd3c]
[DEBUG] 2019-10-02 12:51:42.281 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@250967f1]
[DEBUG] 2019-10-02 12:51:42.281 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 12:51:42.281 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 12:51:42.281 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 12:51:42.281 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 12:51:42.281 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 12:51:42.281 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 12:51:42.282 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:51:42.282 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:51:42.282 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 12:51:42.282 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:51:42.298 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:51:42.299 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:51:42.299 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:51:42.299 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 12:51:42.299 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 12:51:42.299 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 12:51:42.299 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 12:51:42.300 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 12:51:42.300 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:51:42.300 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a21c74]
[DEBUG] 2019-10-02 12:51:42.300 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:51:42.300 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:51:42.300 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:51:42.300 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:51:42.300 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fb8dc01]
[DEBUG] 2019-10-02 12:51:42.301 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 12:51:42.301 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 12:51:42.301 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 12:51:42.301 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 12:51:42.301 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 12:51:42.301 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 12:51:42.301 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:51:42.302 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:51:42.303 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 12:51:42.303 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:51:42.303 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7345f97d]
[DEBUG] 2019-10-02 12:51:42.303 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:51:42.303 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:51:42.303 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:51:42.303 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:51:42.303 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66020d69]
[DEBUG] 2019-10-02 12:51:42.304 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 12:51:42.304 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 12:51:42.304 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 12:51:42.304 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 12:51:42.304 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 12:51:42.304 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 12:51:42.304 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:51:42.305 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:51:42.305 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 12:51:42.305 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:51:42.305 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 12:51:42.306 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 12:51:42.311 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1491cd6c]
[DEBUG] 2019-10-02 12:51:42.311 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@423f8a73]
[DEBUG] 2019-10-02 12:51:42.311 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:51:42.311 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:51:42.311 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:51:42.311 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:51:42.311 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 12:51:42.312 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:51:42.315 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:51:42.315 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 12:51:42.316 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 12:51:42.355 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 12:51:42.355 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 12:51:42.355 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 12:51:42.363 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 12:51:42.364 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 12:51:42.365 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 12:51:42.365 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 12:51:42.367 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3070f3e6
[DEBUG] 2019-10-02 12:51:42.369 [main] SessionFactoryRegistry - Registering SessionFactory: 7696c6a0-0c13-40b3-bad8-73c781dd0fdf (<unnamed>)
[DEBUG] 2019-10-02 12:51:42.369 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 12:51:42.470 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 12:51:42.491 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:51:42.521 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 12:51:42.523 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 12:51:42.534 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 12:51:42.535 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 12:51:42.535 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:51:42.535 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 12:51:42.535 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:51:42.535 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 12:51:42.535 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:51:42.535 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 12:51:42.535 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:51:42.537 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 12:51:42.537 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 12:51:42.537 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 12:51:42.537 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:51:42.537 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 12:51:42.537 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:51:42.537 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 12:51:42.537 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:51:42.538 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 12:51:42.538 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:51:42.547 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 12:51:42.548 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:51:42.548 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 12:51:42.548 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:51:42.550 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 12:51:42.550 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 12:51:42.553 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 12:51:42.556 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 12:51:42.557 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 12:51:42.557 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:51:42.558 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 12:51:42.558 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:51:42.558 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:51:42.558 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 12:51:42.558 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#1
[DEBUG] 2019-10-02 12:51:42.558 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:56:39.460 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 12:56:39.463 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 12:56:39.469 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 12:56:39.584 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 12:56:39.589 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 12:56:39.846 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 12:56:39.847 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 12:56:39.855 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 12:56:40.286 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 12:56:40.317 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 12:56:40.319 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 12:56:40.344 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 12:56:40.391 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@26b95b0b
[DEBUG] 2019-10-02 12:56:40.391 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@26b95b0b
[DEBUG] 2019-10-02 12:56:40.391 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@26b95b0b
[DEBUG] 2019-10-02 12:56:40.392 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@56afdf9a
[DEBUG] 2019-10-02 12:56:40.393 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@77ec6a3d
[DEBUG] 2019-10-02 12:56:40.394 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@36bf84e
[DEBUG] 2019-10-02 12:56:40.395 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@41fe8e5f
[DEBUG] 2019-10-02 12:56:40.395 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@41fe8e5f
[DEBUG] 2019-10-02 12:56:40.395 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@41fe8e5f
[DEBUG] 2019-10-02 12:56:40.397 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@51a6cc2a
[DEBUG] 2019-10-02 12:56:40.397 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@51a6cc2a
[DEBUG] 2019-10-02 12:56:40.397 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@51a6cc2a
[DEBUG] 2019-10-02 12:56:40.398 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@78c1372d
[DEBUG] 2019-10-02 12:56:40.398 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@78c1372d
[DEBUG] 2019-10-02 12:56:40.399 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78c1372d
[DEBUG] 2019-10-02 12:56:40.400 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@22a0d4ea
[DEBUG] 2019-10-02 12:56:40.400 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@22a0d4ea
[DEBUG] 2019-10-02 12:56:40.400 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@22a0d4ea
[DEBUG] 2019-10-02 12:56:40.402 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2412a42b
[DEBUG] 2019-10-02 12:56:40.402 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2412a42b
[DEBUG] 2019-10-02 12:56:40.402 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2412a42b
[DEBUG] 2019-10-02 12:56:40.415 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@51841ac6
[DEBUG] 2019-10-02 12:56:40.415 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@51841ac6
[DEBUG] 2019-10-02 12:56:40.415 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@51841ac6
[DEBUG] 2019-10-02 12:56:40.417 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@10afe71a
[DEBUG] 2019-10-02 12:56:40.417 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@10afe71a
[DEBUG] 2019-10-02 12:56:40.418 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@10afe71a
[DEBUG] 2019-10-02 12:56:40.419 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4715ae33
[DEBUG] 2019-10-02 12:56:40.419 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4715ae33
[DEBUG] 2019-10-02 12:56:40.421 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a2ef072
[DEBUG] 2019-10-02 12:56:40.421 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a2ef072
[DEBUG] 2019-10-02 12:56:40.422 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@c6c82aa
[DEBUG] 2019-10-02 12:56:40.423 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@c6c82aa
[DEBUG] 2019-10-02 12:56:40.423 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3bddc676
[DEBUG] 2019-10-02 12:56:40.424 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@67b100fe
[DEBUG] 2019-10-02 12:56:40.426 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@44b194fe
[DEBUG] 2019-10-02 12:56:40.426 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@44b194fe
[DEBUG] 2019-10-02 12:56:40.427 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@59ed3e6c
[DEBUG] 2019-10-02 12:56:40.427 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@59ed3e6c
[DEBUG] 2019-10-02 12:56:40.444 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7979b8b7
[DEBUG] 2019-10-02 12:56:40.445 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7979b8b7
[DEBUG] 2019-10-02 12:56:40.447 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@24e83d19
[DEBUG] 2019-10-02 12:56:40.448 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@24e83d19
[DEBUG] 2019-10-02 12:56:40.450 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@35267fd4
[DEBUG] 2019-10-02 12:56:40.450 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@35267fd4
[DEBUG] 2019-10-02 12:56:40.453 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7661b5a
[DEBUG] 2019-10-02 12:56:40.453 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7661b5a
[DEBUG] 2019-10-02 12:56:40.455 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1f0b3cfe
[DEBUG] 2019-10-02 12:56:40.456 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1f0b3cfe
[DEBUG] 2019-10-02 12:56:40.458 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2b2f5fcf
[DEBUG] 2019-10-02 12:56:40.458 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2b2f5fcf
[DEBUG] 2019-10-02 12:56:40.462 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@216e0771
[DEBUG] 2019-10-02 12:56:40.462 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@216e0771
[DEBUG] 2019-10-02 12:56:40.465 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@60cf62ad
[DEBUG] 2019-10-02 12:56:40.465 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@60cf62ad
[DEBUG] 2019-10-02 12:56:40.467 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6726cc69
[DEBUG] 2019-10-02 12:56:40.467 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6726cc69
[DEBUG] 2019-10-02 12:56:40.469 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@13d9261f
[DEBUG] 2019-10-02 12:56:40.469 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@13d9261f
[DEBUG] 2019-10-02 12:56:40.469 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@13d9261f
[DEBUG] 2019-10-02 12:56:40.471 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1ba359bd
[DEBUG] 2019-10-02 12:56:40.473 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5f038248
[DEBUG] 2019-10-02 12:56:40.473 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5f038248
[DEBUG] 2019-10-02 12:56:40.473 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5f038248
[DEBUG] 2019-10-02 12:56:40.474 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@73c9e8e8
[DEBUG] 2019-10-02 12:56:40.476 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@58ff8d79
[DEBUG] 2019-10-02 12:56:40.476 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@58ff8d79
[DEBUG] 2019-10-02 12:56:40.478 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@62db3891
[DEBUG] 2019-10-02 12:56:40.479 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62db3891
[DEBUG] 2019-10-02 12:56:40.480 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@546e61d5
[DEBUG] 2019-10-02 12:56:40.480 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@546e61d5
[DEBUG] 2019-10-02 12:56:40.482 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2819c460
[DEBUG] 2019-10-02 12:56:40.482 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2819c460
[DEBUG] 2019-10-02 12:56:40.484 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@554f0dfb
[DEBUG] 2019-10-02 12:56:40.485 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@554f0dfb
[DEBUG] 2019-10-02 12:56:40.486 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@761e788f
[DEBUG] 2019-10-02 12:56:40.489 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5633ed82
[DEBUG] 2019-10-02 12:56:40.489 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5633ed82
[DEBUG] 2019-10-02 12:56:40.489 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5633ed82
[DEBUG] 2019-10-02 12:56:40.491 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@277bf091
[DEBUG] 2019-10-02 12:56:40.492 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@277bf091
[DEBUG] 2019-10-02 12:56:40.492 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@277bf091
[DEBUG] 2019-10-02 12:56:40.494 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@60325987
[DEBUG] 2019-10-02 12:56:40.495 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@587a1cfb
[DEBUG] 2019-10-02 12:56:40.497 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5c77ba8f
[DEBUG] 2019-10-02 12:56:40.497 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5c77ba8f
[DEBUG] 2019-10-02 12:56:40.498 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5c77ba8f
[DEBUG] 2019-10-02 12:56:40.500 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@261ea657
[DEBUG] 2019-10-02 12:56:40.500 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@261ea657
[DEBUG] 2019-10-02 12:56:40.500 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@261ea657
[DEBUG] 2019-10-02 12:56:40.501 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76563d26
[DEBUG] 2019-10-02 12:56:40.502 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@17f2dd85
[DEBUG] 2019-10-02 12:56:40.505 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@66273da0
[DEBUG] 2019-10-02 12:56:40.505 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@66273da0
[DEBUG] 2019-10-02 12:56:40.506 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c959a4
[DEBUG] 2019-10-02 12:56:40.509 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6069dd38
[DEBUG] 2019-10-02 12:56:40.509 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6069dd38
[DEBUG] 2019-10-02 12:56:40.512 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2643d762
[DEBUG] 2019-10-02 12:56:40.513 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2643d762
[DEBUG] 2019-10-02 12:56:40.514 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@767a014e
[DEBUG] 2019-10-02 12:56:40.515 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@227a47
[DEBUG] 2019-10-02 12:56:40.517 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@65b97f47
[DEBUG] 2019-10-02 12:56:40.522 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3e33d73e
[DEBUG] 2019-10-02 12:56:40.523 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e33d73e
[DEBUG] 2019-10-02 12:56:40.524 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e84fb85
[DEBUG] 2019-10-02 12:56:40.525 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68a4dcc6
[DEBUG] 2019-10-02 12:56:40.525 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@646c0a67
[DEBUG] 2019-10-02 12:56:40.525 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3804a9a8
[DEBUG] 2019-10-02 12:56:40.525 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@117525fe
[DEBUG] 2019-10-02 12:56:40.525 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5f7989fa
[DEBUG] 2019-10-02 12:56:40.525 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5bc28f40
[DEBUG] 2019-10-02 12:56:40.525 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@46963479
[DEBUG] 2019-10-02 12:56:40.611 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 12:56:40.612 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 12:56:40.614 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 12:56:40.615 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 12:56:40.616 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 12:56:40.617 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 12:56:40.618 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 12:56:40.620 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 12:56:40.622 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 12:56:40.622 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 12:56:40.623 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 12:56:40.624 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 12:56:40.624 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 12:56:40.626 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 12:56:40.635 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 12:56:40.635 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 12:56:40.635 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 12:56:40.899 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 12:56:41.147 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 12:56:41.148 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 12:56:41.148 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 12:56:41.201 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 12:56:41.234 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 12:56:41.272 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 12:56:41.357 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 12:56:41.363 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d342959] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2ecf5915]
[DEBUG] 2019-10-02 12:56:41.453 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:56:41.490 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 12:56:41.499 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 12:56:41.503 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 12:56:41.543 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:56:41.547 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 12:56:41.549 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 12:56:41.552 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 12:56:41.555 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 12:56:41.559 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 12:56:41.561 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:56:41.562 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 12:56:41.562 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 12:56:41.562 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 12:56:41.562 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 12:56:41.562 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:56:41.562 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 12:56:41.563 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 12:56:41.563 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 12:56:41.563 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 12:56:41.563 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:56:41.563 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 12:56:41.563 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 12:56:41.563 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 12:56:41.563 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 12:56:41.565 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:56:41.566 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:56:41.568 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:56:41.581 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:56:41.581 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:56:41.582 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 12:56:41.584 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:56:41.584 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:56:41.585 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:56:41.589 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 12:56:41.589 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:56:41.589 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 12:56:41.589 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 12:56:41.589 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 12:56:41.590 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 12:56:41.591 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:56:41.591 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 12:56:41.592 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 12:56:41.592 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 12:56:41.594 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:56:41.594 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 12:56:41.594 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 12:56:41.595 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 12:56:41.595 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 12:56:41.595 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 12:56:41.595 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:56:41.595 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 12:56:41.595 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 12:56:41.595 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 12:56:41.595 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 12:56:41.596 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:56:41.596 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 12:56:41.596 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 12:56:41.596 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 12:56:41.596 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 12:56:41.596 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:56:41.596 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 12:56:41.596 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 12:56:41.596 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 12:56:41.596 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 12:56:41.597 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 12:56:41.597 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:56:41.599 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 12:56:41.601 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 12:56:41.602 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 12:56:41.602 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 12:56:41.602 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 12:56:41.602 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 12:56:41.602 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 12:56:41.602 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 12:56:41.602 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 12:56:41.602 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 12:56:41.610 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 12:56:41.610 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 12:56:41.610 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:56:41.611 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 12:56:41.612 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 12:56:41.613 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 12:56:41.613 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:56:41.614 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:56:41.618 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:56:41.661 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 12:56:41.662 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 12:56:41.662 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 12:56:41.662 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 12:56:41.662 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 12:56:41.662 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 12:56:41.662 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 12:56:41.663 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 12:56:41.663 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 12:56:41.663 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 12:56:41.663 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 12:56:41.663 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 12:56:41.663 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 12:56:41.663 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 12:56:41.663 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 12:56:41.663 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 12:56:41.663 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 12:56:41.663 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 12:56:41.663 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 12:56:41.663 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 12:56:41.664 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 12:56:41.664 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 12:56:41.664 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 12:56:41.664 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 12:56:41.664 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 12:56:41.664 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 12:56:41.664 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 12:56:41.664 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 12:56:41.664 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 12:56:41.664 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 12:56:41.664 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 12:56:41.665 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 12:56:41.665 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 12:56:41.665 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 12:56:41.665 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 12:56:41.665 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 12:56:41.665 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 12:56:41.665 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 12:56:41.665 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 12:56:41.730 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 12:56:41.756 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 12:56:41.756 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.RecipeDaoTest,testInsertSuccess, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7a2fce12, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 12:56:41.781 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 12:56:41.781 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 12:56:41.783 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 12:56:41.783 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d342959] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@733fb462]
[DEBUG] 2019-10-02 12:56:41.864 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 12:56:41.864 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:56:41.894 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 12:56:41.894 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:56:42.216 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 12:56:42.216 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:56:42.216 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 12:56:42.216 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:56:42.251 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:56:42.251 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 12:56:42.251 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 12:56:42.251 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 12:56:42.251 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 12:56:42.256 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:56:42.256 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 12:56:42.256 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 12:56:42.256 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 12:56:42.256 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 12:56:42.256 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 12:56:42.256 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:56:42.284 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e03046d]
[DEBUG] 2019-10-02 12:56:42.286 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 12:56:42.286 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 12:56:42.286 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 12:56:42.286 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 12:56:42.292 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@783b3aa0]
[DEBUG] 2019-10-02 12:56:42.296 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e92c3b6]
[DEBUG] 2019-10-02 12:56:42.298 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 12:56:42.298 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 12:56:42.298 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 12:56:42.298 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 12:56:42.298 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 12:56:42.299 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 12:56:42.299 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:56:42.317 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:56:42.326 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 12:56:42.330 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:56:42.331 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a056b26]
[DEBUG] 2019-10-02 12:56:42.331 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 12:56:42.331 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 12:56:42.331 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 12:56:42.331 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 12:56:42.331 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@250967f1]
[DEBUG] 2019-10-02 12:56:42.331 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25c1f5ee]
[DEBUG] 2019-10-02 12:56:42.331 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 12:56:42.332 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 12:56:42.332 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 12:56:42.332 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 12:56:42.332 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 12:56:42.332 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 12:56:42.332 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:56:42.332 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:56:42.333 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 12:56:42.333 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:56:42.351 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:56:42.352 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:56:42.352 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:56:42.352 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 12:56:42.352 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 12:56:42.352 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 12:56:42.352 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 12:56:42.352 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 12:56:42.352 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:56:42.352 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b8a144e]
[DEBUG] 2019-10-02 12:56:42.353 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:56:42.353 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:56:42.353 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:56:42.353 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:56:42.353 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e38c472]
[DEBUG] 2019-10-02 12:56:42.354 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 12:56:42.354 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 12:56:42.354 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 12:56:42.354 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 12:56:42.354 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 12:56:42.354 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 12:56:42.354 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:56:42.354 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:56:42.355 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 12:56:42.355 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:56:42.355 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@554566a8]
[DEBUG] 2019-10-02 12:56:42.355 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:56:42.355 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:56:42.356 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:56:42.356 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:56:42.356 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3751acd7]
[DEBUG] 2019-10-02 12:56:42.356 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 12:56:42.356 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 12:56:42.356 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 12:56:42.356 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 12:56:42.356 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 12:56:42.356 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 12:56:42.356 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:56:42.356 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:56:42.357 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 12:56:42.357 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:56:42.357 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 12:56:42.357 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 12:56:42.362 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@423f8a73]
[DEBUG] 2019-10-02 12:56:42.363 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1aedf08d]
[DEBUG] 2019-10-02 12:56:42.363 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:56:42.363 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:56:42.363 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:56:42.363 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:56:42.363 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 12:56:42.363 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:56:42.366 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:56:42.366 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 12:56:42.367 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 12:56:42.408 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 12:56:42.408 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 12:56:42.409 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 12:56:42.416 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 12:56:42.416 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 12:56:42.417 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 12:56:42.418 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 12:56:42.419 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3271ec2a
[DEBUG] 2019-10-02 12:56:42.421 [main] SessionFactoryRegistry - Registering SessionFactory: daeda4e9-b3b3-4a22-aacb-44112ba13daf (<unnamed>)
[DEBUG] 2019-10-02 12:56:42.421 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 12:56:42.516 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 12:56:42.539 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:56:42.570 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 12:56:42.572 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 12:56:42.582 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 12:56:42.591 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 12:56:42.592 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 12:56:42.593 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.593 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 12:56:42.593 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.593 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 12:56:42.593 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.593 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 12:56:42.593 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.593 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 12:56:42.593 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.594 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 12:56:42.595 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 12:56:42.595 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 12:56:42.595 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.595 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 12:56:42.595 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.595 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 12:56:42.595 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.595 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 12:56:42.595 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.595 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 12:56:42.596 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:56:42.598 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 12:56:42.598 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:56:42.599 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:56:42.599 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 12:56:42.600 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:56:42.609 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 12:56:42.609 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 12:56:42.617 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 12:56:42.620 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:56:42.627 [main] IdentifierGeneratorHelper - Natively generated identity: 11
[DEBUG] 2019-10-02 12:56:42.628 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:56:42.629 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 12:56:42.629 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 12:56:42.630 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 12:56:42.631 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-10-02 12:56:42.631 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-10-02 12:56:42.633 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 12:56:42.633 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=, name=testInsert, ingredients=, id=11, user=com.alexmalotky.entity.User#1}
[DEBUG] 2019-10-02 12:56:42.636 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:56:42.638 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:56:42.638 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:56:42.641 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 12:56:42.641 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 12:56:42.642 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#11]
[DEBUG] 2019-10-02 12:56:42.642 [main] TwoPhaseLoad - Processing attribute `directions` : value = 
[DEBUG] 2019-10-02 12:56:42.642 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.642 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = 
[DEBUG] 2019-10-02 12:56:42.642 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.642 [main] TwoPhaseLoad - Processing attribute `name` : value = testInsert
[DEBUG] 2019-10-02 12:56:42.642 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.642 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 12:56:42.642 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.643 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#11]
[DEBUG] 2019-10-02 12:56:42.643 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 12:56:42.643 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 12:56:42.643 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.643 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 12:56:42.643 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.643 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 12:56:42.643 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.643 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 12:56:42.643 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.643 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 12:56:42.643 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.644 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 12:56:42.644 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:56:42.646 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 12:56:42.646 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 12:56:42.649 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 12:56:42.649 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 12:56:42.649 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 12:56:42.649 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-02 12:56:42.650 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 12:56:42.650 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 12:56:42.650 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 12:56:42.650 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.650 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 12:56:42.650 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.650 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 12:56:42.650 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.650 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 12:56:42.650 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:56:42.650 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 12:56:42.650 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:56:42.651 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 12:56:42.651 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:56:42.651 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:56:42.651 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 12:56:42.651 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#11
[DEBUG] 2019-10-02 12:56:42.651 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:57:48.742 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 12:57:48.746 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 12:57:48.752 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 12:57:48.872 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 12:57:48.876 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 12:57:49.138 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 12:57:49.139 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 12:57:49.147 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 12:57:49.610 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 12:57:49.640 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 12:57:49.642 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 12:57:49.670 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 12:57:49.723 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@26b95b0b
[DEBUG] 2019-10-02 12:57:49.724 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@26b95b0b
[DEBUG] 2019-10-02 12:57:49.724 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@26b95b0b
[DEBUG] 2019-10-02 12:57:49.725 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@56afdf9a
[DEBUG] 2019-10-02 12:57:49.725 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@77ec6a3d
[DEBUG] 2019-10-02 12:57:49.726 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@36bf84e
[DEBUG] 2019-10-02 12:57:49.728 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@41fe8e5f
[DEBUG] 2019-10-02 12:57:49.728 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@41fe8e5f
[DEBUG] 2019-10-02 12:57:49.728 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@41fe8e5f
[DEBUG] 2019-10-02 12:57:49.730 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@51a6cc2a
[DEBUG] 2019-10-02 12:57:49.731 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@51a6cc2a
[DEBUG] 2019-10-02 12:57:49.731 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@51a6cc2a
[DEBUG] 2019-10-02 12:57:49.733 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@78c1372d
[DEBUG] 2019-10-02 12:57:49.733 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@78c1372d
[DEBUG] 2019-10-02 12:57:49.733 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78c1372d
[DEBUG] 2019-10-02 12:57:49.734 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@22a0d4ea
[DEBUG] 2019-10-02 12:57:49.735 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@22a0d4ea
[DEBUG] 2019-10-02 12:57:49.735 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@22a0d4ea
[DEBUG] 2019-10-02 12:57:49.736 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2412a42b
[DEBUG] 2019-10-02 12:57:49.736 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2412a42b
[DEBUG] 2019-10-02 12:57:49.737 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2412a42b
[DEBUG] 2019-10-02 12:57:49.738 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@51841ac6
[DEBUG] 2019-10-02 12:57:49.738 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@51841ac6
[DEBUG] 2019-10-02 12:57:49.738 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@51841ac6
[DEBUG] 2019-10-02 12:57:49.740 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@10afe71a
[DEBUG] 2019-10-02 12:57:49.740 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@10afe71a
[DEBUG] 2019-10-02 12:57:49.741 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@10afe71a
[DEBUG] 2019-10-02 12:57:49.743 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4715ae33
[DEBUG] 2019-10-02 12:57:49.743 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4715ae33
[DEBUG] 2019-10-02 12:57:49.745 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a2ef072
[DEBUG] 2019-10-02 12:57:49.746 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a2ef072
[DEBUG] 2019-10-02 12:57:49.748 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@c6c82aa
[DEBUG] 2019-10-02 12:57:49.748 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@c6c82aa
[DEBUG] 2019-10-02 12:57:49.749 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3bddc676
[DEBUG] 2019-10-02 12:57:49.750 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@67b100fe
[DEBUG] 2019-10-02 12:57:49.753 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@44b194fe
[DEBUG] 2019-10-02 12:57:49.753 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@44b194fe
[DEBUG] 2019-10-02 12:57:49.755 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@59ed3e6c
[DEBUG] 2019-10-02 12:57:49.755 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@59ed3e6c
[DEBUG] 2019-10-02 12:57:49.773 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7979b8b7
[DEBUG] 2019-10-02 12:57:49.774 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7979b8b7
[DEBUG] 2019-10-02 12:57:49.777 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@24e83d19
[DEBUG] 2019-10-02 12:57:49.777 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@24e83d19
[DEBUG] 2019-10-02 12:57:49.780 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@35267fd4
[DEBUG] 2019-10-02 12:57:49.780 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@35267fd4
[DEBUG] 2019-10-02 12:57:49.782 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7661b5a
[DEBUG] 2019-10-02 12:57:49.782 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7661b5a
[DEBUG] 2019-10-02 12:57:49.784 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1f0b3cfe
[DEBUG] 2019-10-02 12:57:49.785 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1f0b3cfe
[DEBUG] 2019-10-02 12:57:49.787 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2b2f5fcf
[DEBUG] 2019-10-02 12:57:49.787 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2b2f5fcf
[DEBUG] 2019-10-02 12:57:49.790 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@216e0771
[DEBUG] 2019-10-02 12:57:49.790 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@216e0771
[DEBUG] 2019-10-02 12:57:49.792 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@60cf62ad
[DEBUG] 2019-10-02 12:57:49.793 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@60cf62ad
[DEBUG] 2019-10-02 12:57:49.795 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6726cc69
[DEBUG] 2019-10-02 12:57:49.795 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6726cc69
[DEBUG] 2019-10-02 12:57:49.797 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@13d9261f
[DEBUG] 2019-10-02 12:57:49.798 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@13d9261f
[DEBUG] 2019-10-02 12:57:49.798 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@13d9261f
[DEBUG] 2019-10-02 12:57:49.800 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1ba359bd
[DEBUG] 2019-10-02 12:57:49.802 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5f038248
[DEBUG] 2019-10-02 12:57:49.802 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5f038248
[DEBUG] 2019-10-02 12:57:49.802 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5f038248
[DEBUG] 2019-10-02 12:57:49.804 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@73c9e8e8
[DEBUG] 2019-10-02 12:57:49.805 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@58ff8d79
[DEBUG] 2019-10-02 12:57:49.806 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@58ff8d79
[DEBUG] 2019-10-02 12:57:49.808 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@62db3891
[DEBUG] 2019-10-02 12:57:49.808 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62db3891
[DEBUG] 2019-10-02 12:57:49.810 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@546e61d5
[DEBUG] 2019-10-02 12:57:49.810 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@546e61d5
[DEBUG] 2019-10-02 12:57:49.812 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2819c460
[DEBUG] 2019-10-02 12:57:49.812 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2819c460
[DEBUG] 2019-10-02 12:57:49.814 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@554f0dfb
[DEBUG] 2019-10-02 12:57:49.814 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@554f0dfb
[DEBUG] 2019-10-02 12:57:49.816 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@761e788f
[DEBUG] 2019-10-02 12:57:49.818 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5633ed82
[DEBUG] 2019-10-02 12:57:49.819 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5633ed82
[DEBUG] 2019-10-02 12:57:49.819 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5633ed82
[DEBUG] 2019-10-02 12:57:49.821 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@277bf091
[DEBUG] 2019-10-02 12:57:49.821 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@277bf091
[DEBUG] 2019-10-02 12:57:49.822 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@277bf091
[DEBUG] 2019-10-02 12:57:49.824 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@60325987
[DEBUG] 2019-10-02 12:57:49.825 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@587a1cfb
[DEBUG] 2019-10-02 12:57:49.827 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5c77ba8f
[DEBUG] 2019-10-02 12:57:49.827 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5c77ba8f
[DEBUG] 2019-10-02 12:57:49.827 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5c77ba8f
[DEBUG] 2019-10-02 12:57:49.829 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@261ea657
[DEBUG] 2019-10-02 12:57:49.830 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@261ea657
[DEBUG] 2019-10-02 12:57:49.830 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@261ea657
[DEBUG] 2019-10-02 12:57:49.831 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76563d26
[DEBUG] 2019-10-02 12:57:49.832 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@17f2dd85
[DEBUG] 2019-10-02 12:57:49.835 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@66273da0
[DEBUG] 2019-10-02 12:57:49.835 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@66273da0
[DEBUG] 2019-10-02 12:57:49.836 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c959a4
[DEBUG] 2019-10-02 12:57:49.839 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6069dd38
[DEBUG] 2019-10-02 12:57:49.839 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6069dd38
[DEBUG] 2019-10-02 12:57:49.842 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2643d762
[DEBUG] 2019-10-02 12:57:49.843 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2643d762
[DEBUG] 2019-10-02 12:57:49.843 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@767a014e
[DEBUG] 2019-10-02 12:57:49.844 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@227a47
[DEBUG] 2019-10-02 12:57:49.847 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@65b97f47
[DEBUG] 2019-10-02 12:57:49.854 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3e33d73e
[DEBUG] 2019-10-02 12:57:49.854 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e33d73e
[DEBUG] 2019-10-02 12:57:49.855 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e84fb85
[DEBUG] 2019-10-02 12:57:49.855 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68a4dcc6
[DEBUG] 2019-10-02 12:57:49.856 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@646c0a67
[DEBUG] 2019-10-02 12:57:49.856 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3804a9a8
[DEBUG] 2019-10-02 12:57:49.856 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@117525fe
[DEBUG] 2019-10-02 12:57:49.856 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5f7989fa
[DEBUG] 2019-10-02 12:57:49.856 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5bc28f40
[DEBUG] 2019-10-02 12:57:49.857 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@46963479
[DEBUG] 2019-10-02 12:57:49.939 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 12:57:49.940 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 12:57:49.942 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 12:57:49.942 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 12:57:49.943 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 12:57:49.945 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 12:57:49.946 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 12:57:49.948 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 12:57:49.949 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 12:57:49.950 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 12:57:49.951 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 12:57:49.952 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 12:57:49.952 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 12:57:49.953 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 12:57:49.963 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 12:57:49.963 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 12:57:49.963 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 12:57:50.216 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 12:57:50.461 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 12:57:50.461 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 12:57:50.462 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 12:57:50.508 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 12:57:50.548 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 12:57:50.588 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 12:57:50.659 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 12:57:50.668 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d342959] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2ecf5915]
[DEBUG] 2019-10-02 12:57:50.756 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:57:50.783 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 12:57:50.792 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 12:57:50.797 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 12:57:50.830 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:57:50.833 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 12:57:50.835 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 12:57:50.838 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 12:57:50.841 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 12:57:50.846 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 12:57:50.848 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:57:50.848 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 12:57:50.848 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 12:57:50.848 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 12:57:50.848 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 12:57:50.849 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:57:50.849 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 12:57:50.849 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 12:57:50.849 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 12:57:50.850 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 12:57:50.850 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:57:50.850 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 12:57:50.850 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 12:57:50.850 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 12:57:50.850 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 12:57:50.853 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:57:50.853 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:57:50.857 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:57:50.870 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:57:50.871 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:57:50.872 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 12:57:50.875 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:57:50.875 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 12:57:50.876 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:57:50.879 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 12:57:50.879 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:57:50.879 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 12:57:50.880 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 12:57:50.880 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 12:57:50.880 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 12:57:50.881 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:57:50.882 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 12:57:50.882 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 12:57:50.882 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 12:57:50.885 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:57:50.886 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 12:57:50.886 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 12:57:50.886 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 12:57:50.886 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 12:57:50.886 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 12:57:50.886 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:57:50.886 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 12:57:50.886 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 12:57:50.887 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 12:57:50.887 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 12:57:50.887 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:57:50.887 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 12:57:50.887 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 12:57:50.887 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 12:57:50.887 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 12:57:50.888 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:57:50.888 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 12:57:50.888 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 12:57:50.888 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 12:57:50.888 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 12:57:50.889 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 12:57:50.889 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 12:57:50.891 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 12:57:50.893 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 12:57:50.893 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 12:57:50.893 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 12:57:50.893 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 12:57:50.893 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 12:57:50.893 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 12:57:50.893 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 12:57:50.893 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 12:57:50.894 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 12:57:50.900 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 12:57:50.900 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 12:57:50.900 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:57:50.901 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 12:57:50.901 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 12:57:50.903 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 12:57:50.903 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:57:50.903 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:57:50.907 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:57:50.950 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 12:57:50.951 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 12:57:50.951 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 12:57:50.951 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 12:57:50.951 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 12:57:50.951 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 12:57:50.951 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 12:57:50.952 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 12:57:50.952 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 12:57:50.952 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 12:57:50.952 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 12:57:50.952 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 12:57:50.952 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 12:57:50.952 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 12:57:50.952 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 12:57:50.952 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 12:57:50.952 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 12:57:50.953 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 12:57:50.953 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 12:57:50.953 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 12:57:50.953 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 12:57:50.953 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 12:57:50.953 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 12:57:50.953 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 12:57:50.953 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 12:57:50.953 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 12:57:50.954 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 12:57:50.954 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 12:57:50.954 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 12:57:50.954 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 12:57:50.954 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 12:57:50.954 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 12:57:50.954 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 12:57:50.954 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 12:57:50.954 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 12:57:50.955 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 12:57:50.955 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 12:57:50.955 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 12:57:50.955 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 12:57:51.021 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 12:57:51.046 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 12:57:51.046 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.RecipeDaoTest,testInsertSuccess, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7a2fce12, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 12:57:51.083 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 12:57:51.083 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 12:57:51.084 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 12:57:51.084 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d342959] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@733fb462]
[DEBUG] 2019-10-02 12:57:51.150 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 12:57:51.150 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:57:51.178 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 12:57:51.179 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:57:51.504 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 12:57:51.504 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:57:51.504 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 12:57:51.504 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:57:51.549 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:57:51.549 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 12:57:51.549 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 12:57:51.549 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 12:57:51.550 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 12:57:51.555 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 12:57:51.555 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 12:57:51.555 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 12:57:51.555 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 12:57:51.555 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 12:57:51.555 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 12:57:51.555 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:57:51.585 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e03046d]
[DEBUG] 2019-10-02 12:57:51.586 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 12:57:51.586 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 12:57:51.587 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 12:57:51.587 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 12:57:51.593 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@783b3aa0]
[DEBUG] 2019-10-02 12:57:51.596 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e92c3b6]
[DEBUG] 2019-10-02 12:57:51.598 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 12:57:51.598 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 12:57:51.599 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 12:57:51.599 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 12:57:51.599 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 12:57:51.600 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 12:57:51.600 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:57:51.615 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:57:51.623 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 12:57:51.626 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:57:51.626 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a056b26]
[DEBUG] 2019-10-02 12:57:51.626 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 12:57:51.626 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 12:57:51.626 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 12:57:51.626 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 12:57:51.626 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@250967f1]
[DEBUG] 2019-10-02 12:57:51.627 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25c1f5ee]
[DEBUG] 2019-10-02 12:57:51.627 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 12:57:51.627 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 12:57:51.627 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 12:57:51.627 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 12:57:51.627 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 12:57:51.627 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 12:57:51.627 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:57:51.627 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:57:51.628 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 12:57:51.628 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:57:51.644 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:57:51.644 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:57:51.645 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 12:57:51.645 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 12:57:51.645 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 12:57:51.645 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 12:57:51.645 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 12:57:51.645 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 12:57:51.645 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:57:51.645 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b8a144e]
[DEBUG] 2019-10-02 12:57:51.645 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:57:51.645 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:57:51.645 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:57:51.645 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:57:51.646 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e38c472]
[DEBUG] 2019-10-02 12:57:51.646 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 12:57:51.646 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 12:57:51.647 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 12:57:51.647 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 12:57:51.647 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 12:57:51.647 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 12:57:51.647 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:57:51.647 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:57:51.648 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 12:57:51.648 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:57:51.648 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@554566a8]
[DEBUG] 2019-10-02 12:57:51.648 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:57:51.648 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:57:51.648 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:57:51.648 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:57:51.649 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3751acd7]
[DEBUG] 2019-10-02 12:57:51.649 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 12:57:51.649 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 12:57:51.649 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 12:57:51.649 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 12:57:51.649 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 12:57:51.649 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 12:57:51.649 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:57:51.649 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:57:51.650 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 12:57:51.650 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:57:51.650 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 12:57:51.650 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 12:57:51.656 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@423f8a73]
[DEBUG] 2019-10-02 12:57:51.656 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1aedf08d]
[DEBUG] 2019-10-02 12:57:51.656 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 12:57:51.656 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 12:57:51.656 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 12:57:51.656 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 12:57:51.656 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 12:57:51.657 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 12:57:51.659 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 12:57:51.660 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 12:57:51.660 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 12:57:51.699 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 12:57:51.699 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 12:57:51.699 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 12:57:51.709 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 12:57:51.709 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 12:57:51.710 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 12:57:51.711 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 12:57:51.712 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3271ec2a
[DEBUG] 2019-10-02 12:57:51.715 [main] SessionFactoryRegistry - Registering SessionFactory: 7edbc9de-e254-4ecb-9f84-d0f894a9b87b (<unnamed>)
[DEBUG] 2019-10-02 12:57:51.715 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 12:57:51.810 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 12:57:51.830 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 12:57:51.860 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 12:57:51.862 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 12:57:51.873 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 12:57:51.882 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 12:57:51.883 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 12:57:51.883 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.883 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 12:57:51.883 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.883 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 12:57:51.884 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.884 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 12:57:51.884 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.884 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 12:57:51.884 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.886 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 12:57:51.886 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 12:57:51.886 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 12:57:51.886 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.886 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 12:57:51.886 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.886 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 12:57:51.886 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.886 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 12:57:51.886 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.887 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 12:57:51.887 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:57:51.890 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 12:57:51.890 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:57:51.891 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:57:51.892 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 12:57:51.892 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:57:51.900 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 12:57:51.900 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 12:57:51.909 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 12:57:51.912 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 12:57:51.920 [main] IdentifierGeneratorHelper - Natively generated identity: 12
[DEBUG] 2019-10-02 12:57:51.920 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:57:51.921 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 12:57:51.922 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 12:57:51.922 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 12:57:51.924 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-10-02 12:57:51.925 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-10-02 12:57:51.926 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 12:57:51.927 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=, name=testInsert, ingredients=, id=12, user=com.alexmalotky.entity.User#1}
[DEBUG] 2019-10-02 12:57:51.930 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:57:51.931 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 12:57:51.932 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 12:57:51.935 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 12:57:51.935 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 12:57:51.935 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#12]
[DEBUG] 2019-10-02 12:57:51.936 [main] TwoPhaseLoad - Processing attribute `directions` : value = 
[DEBUG] 2019-10-02 12:57:51.936 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.936 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = 
[DEBUG] 2019-10-02 12:57:51.936 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.936 [main] TwoPhaseLoad - Processing attribute `name` : value = testInsert
[DEBUG] 2019-10-02 12:57:51.936 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.936 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 12:57:51.936 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.936 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#12]
[DEBUG] 2019-10-02 12:57:51.936 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 12:57:51.936 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 12:57:51.936 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.936 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 12:57:51.936 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.936 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 12:57:51.936 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.937 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 12:57:51.937 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.937 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 12:57:51.937 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.937 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 12:57:51.937 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:57:51.939 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 12:57:51.939 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 12:57:51.942 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 12:57:51.942 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 12:57:51.942 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 12:57:51.942 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-02 12:57:51.943 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 12:57:51.943 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 12:57:51.943 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 12:57:51.943 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.943 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 12:57:51.943 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.943 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 12:57:51.943 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.943 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 12:57:51.943 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 12:57:51.943 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 12:57:51.943 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:57:51.943 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 12:57:51.943 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 12:57:51.944 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 12:57:51.944 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 12:57:51.944 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#12
[DEBUG] 2019-10-02 12:57:51.944 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:01:05.833 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 13:01:05.836 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 13:01:05.843 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 13:01:05.954 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 13:01:05.958 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 13:01:06.239 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 13:01:06.241 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 13:01:06.249 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 13:01:06.658 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 13:01:06.690 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 13:01:06.691 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 13:01:06.716 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 13:01:06.756 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@26b95b0b
[DEBUG] 2019-10-02 13:01:06.756 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@26b95b0b
[DEBUG] 2019-10-02 13:01:06.757 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@26b95b0b
[DEBUG] 2019-10-02 13:01:06.757 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@56afdf9a
[DEBUG] 2019-10-02 13:01:06.758 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@77ec6a3d
[DEBUG] 2019-10-02 13:01:06.759 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@36bf84e
[DEBUG] 2019-10-02 13:01:06.761 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@41fe8e5f
[DEBUG] 2019-10-02 13:01:06.761 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@41fe8e5f
[DEBUG] 2019-10-02 13:01:06.761 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@41fe8e5f
[DEBUG] 2019-10-02 13:01:06.762 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@51a6cc2a
[DEBUG] 2019-10-02 13:01:06.763 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@51a6cc2a
[DEBUG] 2019-10-02 13:01:06.763 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@51a6cc2a
[DEBUG] 2019-10-02 13:01:06.764 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@78c1372d
[DEBUG] 2019-10-02 13:01:06.764 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@78c1372d
[DEBUG] 2019-10-02 13:01:06.765 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78c1372d
[DEBUG] 2019-10-02 13:01:06.766 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@22a0d4ea
[DEBUG] 2019-10-02 13:01:06.766 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@22a0d4ea
[DEBUG] 2019-10-02 13:01:06.766 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@22a0d4ea
[DEBUG] 2019-10-02 13:01:06.767 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2412a42b
[DEBUG] 2019-10-02 13:01:06.768 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2412a42b
[DEBUG] 2019-10-02 13:01:06.768 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2412a42b
[DEBUG] 2019-10-02 13:01:06.769 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@51841ac6
[DEBUG] 2019-10-02 13:01:06.769 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@51841ac6
[DEBUG] 2019-10-02 13:01:06.769 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@51841ac6
[DEBUG] 2019-10-02 13:01:06.770 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@10afe71a
[DEBUG] 2019-10-02 13:01:06.770 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@10afe71a
[DEBUG] 2019-10-02 13:01:06.771 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@10afe71a
[DEBUG] 2019-10-02 13:01:06.772 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4715ae33
[DEBUG] 2019-10-02 13:01:06.772 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4715ae33
[DEBUG] 2019-10-02 13:01:06.773 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a2ef072
[DEBUG] 2019-10-02 13:01:06.773 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a2ef072
[DEBUG] 2019-10-02 13:01:06.774 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@c6c82aa
[DEBUG] 2019-10-02 13:01:06.775 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@c6c82aa
[DEBUG] 2019-10-02 13:01:06.776 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3bddc676
[DEBUG] 2019-10-02 13:01:06.777 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@67b100fe
[DEBUG] 2019-10-02 13:01:06.778 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@44b194fe
[DEBUG] 2019-10-02 13:01:06.778 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@44b194fe
[DEBUG] 2019-10-02 13:01:06.779 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@59ed3e6c
[DEBUG] 2019-10-02 13:01:06.779 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@59ed3e6c
[DEBUG] 2019-10-02 13:01:06.791 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7979b8b7
[DEBUG] 2019-10-02 13:01:06.791 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7979b8b7
[DEBUG] 2019-10-02 13:01:06.794 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@24e83d19
[DEBUG] 2019-10-02 13:01:06.794 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@24e83d19
[DEBUG] 2019-10-02 13:01:06.796 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@35267fd4
[DEBUG] 2019-10-02 13:01:06.796 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@35267fd4
[DEBUG] 2019-10-02 13:01:06.798 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7661b5a
[DEBUG] 2019-10-02 13:01:06.798 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7661b5a
[DEBUG] 2019-10-02 13:01:06.800 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1f0b3cfe
[DEBUG] 2019-10-02 13:01:06.800 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1f0b3cfe
[DEBUG] 2019-10-02 13:01:06.802 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2b2f5fcf
[DEBUG] 2019-10-02 13:01:06.802 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2b2f5fcf
[DEBUG] 2019-10-02 13:01:06.805 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@216e0771
[DEBUG] 2019-10-02 13:01:06.805 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@216e0771
[DEBUG] 2019-10-02 13:01:06.807 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@60cf62ad
[DEBUG] 2019-10-02 13:01:06.807 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@60cf62ad
[DEBUG] 2019-10-02 13:01:06.809 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6726cc69
[DEBUG] 2019-10-02 13:01:06.809 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6726cc69
[DEBUG] 2019-10-02 13:01:06.810 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@13d9261f
[DEBUG] 2019-10-02 13:01:06.810 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@13d9261f
[DEBUG] 2019-10-02 13:01:06.811 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@13d9261f
[DEBUG] 2019-10-02 13:01:06.812 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1ba359bd
[DEBUG] 2019-10-02 13:01:06.813 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5f038248
[DEBUG] 2019-10-02 13:01:06.814 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5f038248
[DEBUG] 2019-10-02 13:01:06.814 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5f038248
[DEBUG] 2019-10-02 13:01:06.815 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@73c9e8e8
[DEBUG] 2019-10-02 13:01:06.816 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@58ff8d79
[DEBUG] 2019-10-02 13:01:06.816 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@58ff8d79
[DEBUG] 2019-10-02 13:01:06.817 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@62db3891
[DEBUG] 2019-10-02 13:01:06.818 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62db3891
[DEBUG] 2019-10-02 13:01:06.819 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@546e61d5
[DEBUG] 2019-10-02 13:01:06.819 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@546e61d5
[DEBUG] 2019-10-02 13:01:06.820 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2819c460
[DEBUG] 2019-10-02 13:01:06.821 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2819c460
[DEBUG] 2019-10-02 13:01:06.822 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@554f0dfb
[DEBUG] 2019-10-02 13:01:06.823 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@554f0dfb
[DEBUG] 2019-10-02 13:01:06.824 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@761e788f
[DEBUG] 2019-10-02 13:01:06.826 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5633ed82
[DEBUG] 2019-10-02 13:01:06.826 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5633ed82
[DEBUG] 2019-10-02 13:01:06.826 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5633ed82
[DEBUG] 2019-10-02 13:01:06.828 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@277bf091
[DEBUG] 2019-10-02 13:01:06.829 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@277bf091
[DEBUG] 2019-10-02 13:01:06.829 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@277bf091
[DEBUG] 2019-10-02 13:01:06.831 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@60325987
[DEBUG] 2019-10-02 13:01:06.832 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@587a1cfb
[DEBUG] 2019-10-02 13:01:06.835 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5c77ba8f
[DEBUG] 2019-10-02 13:01:06.835 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5c77ba8f
[DEBUG] 2019-10-02 13:01:06.835 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5c77ba8f
[DEBUG] 2019-10-02 13:01:06.837 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@261ea657
[DEBUG] 2019-10-02 13:01:06.837 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@261ea657
[DEBUG] 2019-10-02 13:01:06.837 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@261ea657
[DEBUG] 2019-10-02 13:01:06.838 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76563d26
[DEBUG] 2019-10-02 13:01:06.839 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@17f2dd85
[DEBUG] 2019-10-02 13:01:06.841 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@66273da0
[DEBUG] 2019-10-02 13:01:06.842 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@66273da0
[DEBUG] 2019-10-02 13:01:06.842 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51c959a4
[DEBUG] 2019-10-02 13:01:06.845 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6069dd38
[DEBUG] 2019-10-02 13:01:06.845 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6069dd38
[DEBUG] 2019-10-02 13:01:06.847 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2643d762
[DEBUG] 2019-10-02 13:01:06.847 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2643d762
[DEBUG] 2019-10-02 13:01:06.848 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@767a014e
[DEBUG] 2019-10-02 13:01:06.848 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@227a47
[DEBUG] 2019-10-02 13:01:06.850 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@65b97f47
[DEBUG] 2019-10-02 13:01:06.856 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3e33d73e
[DEBUG] 2019-10-02 13:01:06.856 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e33d73e
[DEBUG] 2019-10-02 13:01:06.857 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e84fb85
[DEBUG] 2019-10-02 13:01:06.857 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68a4dcc6
[DEBUG] 2019-10-02 13:01:06.857 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@646c0a67
[DEBUG] 2019-10-02 13:01:06.858 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3804a9a8
[DEBUG] 2019-10-02 13:01:06.858 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@117525fe
[DEBUG] 2019-10-02 13:01:06.858 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5f7989fa
[DEBUG] 2019-10-02 13:01:06.858 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5bc28f40
[DEBUG] 2019-10-02 13:01:06.858 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@46963479
[DEBUG] 2019-10-02 13:01:06.930 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 13:01:06.931 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 13:01:06.932 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 13:01:06.932 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 13:01:06.933 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 13:01:06.935 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 13:01:06.936 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 13:01:06.937 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 13:01:06.939 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 13:01:06.939 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 13:01:06.940 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 13:01:06.940 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 13:01:06.941 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 13:01:06.942 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 13:01:06.949 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 13:01:06.949 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 13:01:06.949 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 13:01:07.182 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 13:01:07.399 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 13:01:07.399 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 13:01:07.399 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 13:01:07.477 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 13:01:07.518 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 13:01:07.564 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 13:01:07.638 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 13:01:07.644 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d342959] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2ecf5915]
[DEBUG] 2019-10-02 13:01:07.740 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:01:07.783 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 13:01:07.792 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 13:01:07.796 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 13:01:07.840 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:01:07.845 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 13:01:07.848 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 13:01:07.851 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 13:01:07.855 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 13:01:07.860 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 13:01:07.862 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:01:07.862 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 13:01:07.863 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 13:01:07.863 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 13:01:07.863 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 13:01:07.864 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:01:07.864 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 13:01:07.864 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 13:01:07.864 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 13:01:07.864 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 13:01:07.864 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:01:07.865 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 13:01:07.865 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 13:01:07.865 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 13:01:07.865 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 13:01:07.867 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:01:07.871 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:01:07.875 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:01:07.891 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:01:07.892 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:01:07.893 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 13:01:07.896 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:01:07.896 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:01:07.897 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:01:07.901 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 13:01:07.901 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:01:07.902 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 13:01:07.902 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 13:01:07.902 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 13:01:07.902 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 13:01:07.904 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:01:07.905 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 13:01:07.905 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 13:01:07.905 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 13:01:07.908 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:01:07.909 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 13:01:07.909 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 13:01:07.909 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 13:01:07.909 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 13:01:07.909 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 13:01:07.909 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:01:07.909 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 13:01:07.910 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 13:01:07.910 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 13:01:07.910 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 13:01:07.910 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:01:07.910 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 13:01:07.910 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 13:01:07.910 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 13:01:07.911 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 13:01:07.911 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:01:07.911 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 13:01:07.911 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 13:01:07.911 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 13:01:07.911 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 13:01:07.912 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 13:01:07.912 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:01:07.914 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 13:01:07.917 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 13:01:07.917 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 13:01:07.917 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 13:01:07.917 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 13:01:07.918 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 13:01:07.918 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 13:01:07.918 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 13:01:07.918 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 13:01:07.918 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 13:01:07.926 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 13:01:07.926 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 13:01:07.926 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:01:07.927 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 13:01:07.929 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 13:01:07.930 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 13:01:07.931 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:01:07.931 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:01:07.937 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:01:07.985 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 13:01:07.987 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 13:01:07.987 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 13:01:07.987 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 13:01:07.987 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 13:01:07.987 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 13:01:07.988 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 13:01:07.988 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 13:01:07.988 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 13:01:07.988 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 13:01:07.988 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 13:01:07.988 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 13:01:07.990 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 13:01:07.990 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 13:01:07.990 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 13:01:07.990 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 13:01:07.990 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 13:01:07.990 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 13:01:07.991 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 13:01:07.991 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 13:01:07.991 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 13:01:07.991 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 13:01:07.991 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 13:01:07.991 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 13:01:07.991 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 13:01:07.991 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 13:01:07.991 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 13:01:07.991 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 13:01:07.992 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 13:01:07.992 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 13:01:07.992 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 13:01:07.992 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 13:01:07.992 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 13:01:07.992 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 13:01:07.992 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 13:01:07.992 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 13:01:07.992 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 13:01:07.992 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 13:01:07.992 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 13:01:08.069 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 13:01:08.094 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 13:01:08.094 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.RecipeDaoTest,testInsertSuccess, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7a2fce12, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 13:01:08.117 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 13:01:08.117 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 13:01:08.118 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 13:01:08.119 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d342959] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@733fb462]
[DEBUG] 2019-10-02 13:01:08.184 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 13:01:08.184 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:01:08.209 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 13:01:08.209 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:01:08.514 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 13:01:08.514 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:01:08.514 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 13:01:08.515 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:01:08.554 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:01:08.554 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 13:01:08.554 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 13:01:08.554 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 13:01:08.554 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 13:01:08.561 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:01:08.561 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 13:01:08.561 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 13:01:08.562 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 13:01:08.562 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 13:01:08.562 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 13:01:08.562 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:01:08.590 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e03046d]
[DEBUG] 2019-10-02 13:01:08.591 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 13:01:08.591 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 13:01:08.592 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 13:01:08.592 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 13:01:08.599 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@783b3aa0]
[DEBUG] 2019-10-02 13:01:08.602 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e92c3b6]
[DEBUG] 2019-10-02 13:01:08.604 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 13:01:08.605 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 13:01:08.605 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 13:01:08.605 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 13:01:08.605 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 13:01:08.605 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 13:01:08.606 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:01:08.621 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:01:08.629 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 13:01:08.631 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:01:08.631 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a056b26]
[DEBUG] 2019-10-02 13:01:08.631 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 13:01:08.632 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 13:01:08.632 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 13:01:08.632 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 13:01:08.632 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@250967f1]
[DEBUG] 2019-10-02 13:01:08.632 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25c1f5ee]
[DEBUG] 2019-10-02 13:01:08.632 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 13:01:08.632 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 13:01:08.632 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 13:01:08.632 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 13:01:08.632 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 13:01:08.632 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 13:01:08.632 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:01:08.633 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:01:08.633 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 13:01:08.633 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:01:08.649 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:01:08.650 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:01:08.650 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:01:08.650 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 13:01:08.650 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 13:01:08.650 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 13:01:08.650 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 13:01:08.651 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 13:01:08.651 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:01:08.651 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b8a144e]
[DEBUG] 2019-10-02 13:01:08.651 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:01:08.651 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:01:08.651 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:01:08.651 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:01:08.651 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e38c472]
[DEBUG] 2019-10-02 13:01:08.652 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 13:01:08.652 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 13:01:08.652 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 13:01:08.652 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 13:01:08.652 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 13:01:08.652 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 13:01:08.652 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:01:08.653 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:01:08.653 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 13:01:08.653 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:01:08.653 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@554566a8]
[DEBUG] 2019-10-02 13:01:08.654 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:01:08.654 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:01:08.654 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:01:08.654 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:01:08.654 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3751acd7]
[DEBUG] 2019-10-02 13:01:08.654 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 13:01:08.654 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 13:01:08.654 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 13:01:08.654 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 13:01:08.654 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 13:01:08.654 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 13:01:08.654 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:01:08.654 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:01:08.655 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 13:01:08.655 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:01:08.655 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 13:01:08.656 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 13:01:08.662 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@423f8a73]
[DEBUG] 2019-10-02 13:01:08.663 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1aedf08d]
[DEBUG] 2019-10-02 13:01:08.663 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:01:08.663 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:01:08.663 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:01:08.663 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:01:08.663 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 13:01:08.663 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:01:08.666 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:01:08.667 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 13:01:08.668 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 13:01:08.706 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 13:01:08.706 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 13:01:08.706 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 13:01:08.715 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 13:01:08.715 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 13:01:08.716 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 13:01:08.716 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 13:01:08.718 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3271ec2a
[DEBUG] 2019-10-02 13:01:08.720 [main] SessionFactoryRegistry - Registering SessionFactory: 9930cd2e-c3a3-46bf-b918-67085e9c5f37 (<unnamed>)
[DEBUG] 2019-10-02 13:01:08.720 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 13:01:08.816 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 13:01:08.836 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:01:08.864 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:01:08.867 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 13:01:08.879 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:01:08.888 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:01:08.889 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 13:01:08.889 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.889 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 13:01:08.889 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.889 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 13:01:08.889 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.889 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 13:01:08.889 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.890 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 13:01:08.890 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.891 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:01:08.891 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:01:08.891 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 13:01:08.891 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.891 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 13:01:08.891 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.891 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 13:01:08.891 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.891 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 13:01:08.891 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.892 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:01:08.892 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:01:08.894 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:01:08.894 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:01:08.896 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:01:08.896 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 13:01:08.897 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:01:08.905 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 13:01:08.905 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 13:01:08.914 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 13:01:08.917 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:01:08.925 [main] IdentifierGeneratorHelper - Natively generated identity: 13
[DEBUG] 2019-10-02 13:01:08.925 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:01:08.926 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 13:01:08.927 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 13:01:08.927 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 13:01:08.929 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-10-02 13:01:08.929 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-10-02 13:01:08.930 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 13:01:08.931 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=, name=testInsert, ingredients=, id=13, user=com.alexmalotky.entity.User#1}
[DEBUG] 2019-10-02 13:01:08.934 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:01:08.935 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:01:08.936 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:01:08.939 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:01:08.939 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 13:01:08.939 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#13]
[DEBUG] 2019-10-02 13:01:08.939 [main] TwoPhaseLoad - Processing attribute `directions` : value = 
[DEBUG] 2019-10-02 13:01:08.940 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.940 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = 
[DEBUG] 2019-10-02 13:01:08.940 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.940 [main] TwoPhaseLoad - Processing attribute `name` : value = testInsert
[DEBUG] 2019-10-02 13:01:08.940 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.940 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 13:01:08.940 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.940 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#13]
[DEBUG] 2019-10-02 13:01:08.940 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:01:08.940 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 13:01:08.940 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.940 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 13:01:08.940 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.940 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 13:01:08.940 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.940 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 13:01:08.941 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.941 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 13:01:08.941 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.941 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:01:08.941 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:01:08.943 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:01:08.943 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 13:01:08.946 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:01:08.946 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:01:08.946 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:01:08.946 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-02 13:01:08.947 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:01:08.947 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:01:08.947 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 13:01:08.947 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.947 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 13:01:08.947 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.947 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 13:01:08.947 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.947 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 13:01:08.947 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:01:08.947 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:01:08.947 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:01:08.947 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:01:08.948 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:01:08.948 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:01:08.948 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 13:01:08.948 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#13
[DEBUG] 2019-10-02 13:01:08.948 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:10:06.385 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 13:10:06.388 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 13:10:06.396 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 13:10:06.507 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 13:10:06.510 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 13:10:06.765 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 13:10:06.766 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 13:10:06.774 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 13:10:07.201 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 13:10:07.229 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 13:10:07.230 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 13:10:07.256 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 13:10:07.310 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1894593a
[DEBUG] 2019-10-02 13:10:07.311 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1894593a
[DEBUG] 2019-10-02 13:10:07.311 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1894593a
[DEBUG] 2019-10-02 13:10:07.311 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@468dda3e
[DEBUG] 2019-10-02 13:10:07.312 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@50756c76
[DEBUG] 2019-10-02 13:10:07.313 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1c9e07c6
[DEBUG] 2019-10-02 13:10:07.314 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@636bbbbb
[DEBUG] 2019-10-02 13:10:07.314 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@636bbbbb
[DEBUG] 2019-10-02 13:10:07.315 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@636bbbbb
[DEBUG] 2019-10-02 13:10:07.316 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6a4ccef7
[DEBUG] 2019-10-02 13:10:07.316 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6a4ccef7
[DEBUG] 2019-10-02 13:10:07.316 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6a4ccef7
[DEBUG] 2019-10-02 13:10:07.318 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5f7da3d3
[DEBUG] 2019-10-02 13:10:07.318 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5f7da3d3
[DEBUG] 2019-10-02 13:10:07.318 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5f7da3d3
[DEBUG] 2019-10-02 13:10:07.320 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@77ec6a3d
[DEBUG] 2019-10-02 13:10:07.320 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@77ec6a3d
[DEBUG] 2019-10-02 13:10:07.320 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@77ec6a3d
[DEBUG] 2019-10-02 13:10:07.322 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@245ec1a6
[DEBUG] 2019-10-02 13:10:07.322 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@245ec1a6
[DEBUG] 2019-10-02 13:10:07.322 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@245ec1a6
[DEBUG] 2019-10-02 13:10:07.323 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2016f509
[DEBUG] 2019-10-02 13:10:07.324 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2016f509
[DEBUG] 2019-10-02 13:10:07.324 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2016f509
[DEBUG] 2019-10-02 13:10:07.325 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2123064f
[DEBUG] 2019-10-02 13:10:07.325 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2123064f
[DEBUG] 2019-10-02 13:10:07.325 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2123064f
[DEBUG] 2019-10-02 13:10:07.326 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@73fb1d7f
[DEBUG] 2019-10-02 13:10:07.326 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@73fb1d7f
[DEBUG] 2019-10-02 13:10:07.328 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6ecdbab8
[DEBUG] 2019-10-02 13:10:07.328 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6ecdbab8
[DEBUG] 2019-10-02 13:10:07.329 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@29138d3a
[DEBUG] 2019-10-02 13:10:07.329 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@29138d3a
[DEBUG] 2019-10-02 13:10:07.331 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7c251f90
[DEBUG] 2019-10-02 13:10:07.332 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@17d32e9b
[DEBUG] 2019-10-02 13:10:07.333 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@a2ddf26
[DEBUG] 2019-10-02 13:10:07.333 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@a2ddf26
[DEBUG] 2019-10-02 13:10:07.334 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@108a46d6
[DEBUG] 2019-10-02 13:10:07.335 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@108a46d6
[DEBUG] 2019-10-02 13:10:07.348 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@21c815e4
[DEBUG] 2019-10-02 13:10:07.348 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@21c815e4
[DEBUG] 2019-10-02 13:10:07.351 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@761956ac
[DEBUG] 2019-10-02 13:10:07.351 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@761956ac
[DEBUG] 2019-10-02 13:10:07.354 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@36cc9385
[DEBUG] 2019-10-02 13:10:07.354 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@36cc9385
[DEBUG] 2019-10-02 13:10:07.356 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@10643593
[DEBUG] 2019-10-02 13:10:07.357 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@10643593
[DEBUG] 2019-10-02 13:10:07.359 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6917bb4
[DEBUG] 2019-10-02 13:10:07.359 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6917bb4
[DEBUG] 2019-10-02 13:10:07.361 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1bc49bc5
[DEBUG] 2019-10-02 13:10:07.362 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1bc49bc5
[DEBUG] 2019-10-02 13:10:07.366 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@44e93c1f
[DEBUG] 2019-10-02 13:10:07.366 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@44e93c1f
[DEBUG] 2019-10-02 13:10:07.368 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1f0b3cfe
[DEBUG] 2019-10-02 13:10:07.369 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f0b3cfe
[DEBUG] 2019-10-02 13:10:07.370 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@858d8b4
[DEBUG] 2019-10-02 13:10:07.371 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@858d8b4
[DEBUG] 2019-10-02 13:10:07.372 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@26844abb
[DEBUG] 2019-10-02 13:10:07.373 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@26844abb
[DEBUG] 2019-10-02 13:10:07.373 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@26844abb
[DEBUG] 2019-10-02 13:10:07.374 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@44bd4b0a
[DEBUG] 2019-10-02 13:10:07.376 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@472a11ae
[DEBUG] 2019-10-02 13:10:07.376 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@472a11ae
[DEBUG] 2019-10-02 13:10:07.376 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@472a11ae
[DEBUG] 2019-10-02 13:10:07.377 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60cf62ad
[DEBUG] 2019-10-02 13:10:07.379 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@323f3c96
[DEBUG] 2019-10-02 13:10:07.380 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@323f3c96
[DEBUG] 2019-10-02 13:10:07.382 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@644ded04
[DEBUG] 2019-10-02 13:10:07.382 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@644ded04
[DEBUG] 2019-10-02 13:10:07.384 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@62e93c3a
[DEBUG] 2019-10-02 13:10:07.384 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@62e93c3a
[DEBUG] 2019-10-02 13:10:07.386 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5f038248
[DEBUG] 2019-10-02 13:10:07.386 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5f038248
[DEBUG] 2019-10-02 13:10:07.388 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1deceb67
[DEBUG] 2019-10-02 13:10:07.388 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1deceb67
[DEBUG] 2019-10-02 13:10:07.389 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@53ec2968
[DEBUG] 2019-10-02 13:10:07.391 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@62db3891
[DEBUG] 2019-10-02 13:10:07.391 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@62db3891
[DEBUG] 2019-10-02 13:10:07.391 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@62db3891
[DEBUG] 2019-10-02 13:10:07.394 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@546e61d5
[DEBUG] 2019-10-02 13:10:07.394 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@546e61d5
[DEBUG] 2019-10-02 13:10:07.394 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@546e61d5
[DEBUG] 2019-10-02 13:10:07.396 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2819c460
[DEBUG] 2019-10-02 13:10:07.398 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@78d6447a
[DEBUG] 2019-10-02 13:10:07.399 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@761e788f
[DEBUG] 2019-10-02 13:10:07.400 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@761e788f
[DEBUG] 2019-10-02 13:10:07.400 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@761e788f
[DEBUG] 2019-10-02 13:10:07.402 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5ef6fd7f
[DEBUG] 2019-10-02 13:10:07.403 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5ef6fd7f
[DEBUG] 2019-10-02 13:10:07.403 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5ef6fd7f
[DEBUG] 2019-10-02 13:10:07.404 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5d21202d
[DEBUG] 2019-10-02 13:10:07.405 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@277bf091
[DEBUG] 2019-10-02 13:10:07.408 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2af69643
[DEBUG] 2019-10-02 13:10:07.408 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2af69643
[DEBUG] 2019-10-02 13:10:07.409 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4047d2d9
[DEBUG] 2019-10-02 13:10:07.412 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4760f169
[DEBUG] 2019-10-02 13:10:07.412 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4760f169
[DEBUG] 2019-10-02 13:10:07.416 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1e58512c
[DEBUG] 2019-10-02 13:10:07.416 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e58512c
[DEBUG] 2019-10-02 13:10:07.418 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7f353d99
[DEBUG] 2019-10-02 13:10:07.419 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6ede46f6
[DEBUG] 2019-10-02 13:10:07.421 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@31ee2fdb
[DEBUG] 2019-10-02 13:10:07.429 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@d109c4f
[DEBUG] 2019-10-02 13:10:07.429 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@d109c4f
[DEBUG] 2019-10-02 13:10:07.430 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@9596ce8
[DEBUG] 2019-10-02 13:10:07.431 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@75ae4a1f
[DEBUG] 2019-10-02 13:10:07.431 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@70228253
[DEBUG] 2019-10-02 13:10:07.431 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63c12e52
[DEBUG] 2019-10-02 13:10:07.431 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21bd20ee
[DEBUG] 2019-10-02 13:10:07.431 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26c47874
[DEBUG] 2019-10-02 13:10:07.432 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@421056e5
[DEBUG] 2019-10-02 13:10:07.432 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2849434b
[DEBUG] 2019-10-02 13:10:07.521 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 13:10:07.523 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 13:10:07.524 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 13:10:07.525 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 13:10:07.526 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 13:10:07.528 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 13:10:07.529 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 13:10:07.532 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 13:10:07.533 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 13:10:07.534 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 13:10:07.534 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 13:10:07.535 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 13:10:07.535 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 13:10:07.536 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 13:10:07.546 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 13:10:07.546 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 13:10:07.546 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 13:10:07.798 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 13:10:08.025 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 13:10:08.037 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 13:10:08.038 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 13:10:08.114 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 13:10:08.148 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 13:10:08.187 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 13:10:08.272 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 13:10:08.278 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@286090c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@31120021]
[DEBUG] 2019-10-02 13:10:08.364 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:10:08.404 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 13:10:08.410 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 13:10:08.414 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 13:10:08.446 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:10:08.449 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 13:10:08.451 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 13:10:08.454 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 13:10:08.457 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 13:10:08.463 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 13:10:08.465 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:10:08.466 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 13:10:08.466 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 13:10:08.466 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 13:10:08.466 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 13:10:08.468 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:10:08.468 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 13:10:08.468 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 13:10:08.468 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 13:10:08.468 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 13:10:08.469 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:10:08.469 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 13:10:08.469 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 13:10:08.469 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 13:10:08.470 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 13:10:08.472 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:10:08.472 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:10:08.476 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:10:08.488 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:10:08.489 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:10:08.490 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 13:10:08.493 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:10:08.493 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:10:08.494 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:10:08.497 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 13:10:08.497 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:10:08.498 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 13:10:08.498 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 13:10:08.498 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 13:10:08.498 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 13:10:08.499 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:10:08.500 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 13:10:08.500 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 13:10:08.500 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 13:10:08.503 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:10:08.503 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 13:10:08.503 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 13:10:08.503 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 13:10:08.503 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 13:10:08.503 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 13:10:08.504 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:10:08.504 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 13:10:08.504 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 13:10:08.504 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 13:10:08.504 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 13:10:08.504 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:10:08.504 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 13:10:08.504 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 13:10:08.504 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 13:10:08.505 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 13:10:08.505 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:10:08.505 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 13:10:08.505 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 13:10:08.505 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 13:10:08.505 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 13:10:08.506 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 13:10:08.506 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:10:08.508 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 13:10:08.510 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 13:10:08.510 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 13:10:08.510 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 13:10:08.510 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 13:10:08.510 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 13:10:08.510 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 13:10:08.510 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 13:10:08.510 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 13:10:08.510 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 13:10:08.516 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 13:10:08.516 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 13:10:08.517 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:10:08.517 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 13:10:08.518 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 13:10:08.520 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 13:10:08.520 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:10:08.521 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:10:08.525 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:10:08.566 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 13:10:08.568 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 13:10:08.568 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 13:10:08.568 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 13:10:08.568 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 13:10:08.568 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 13:10:08.568 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 13:10:08.568 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 13:10:08.568 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 13:10:08.568 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 13:10:08.568 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 13:10:08.568 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 13:10:08.568 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 13:10:08.569 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 13:10:08.569 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 13:10:08.569 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 13:10:08.569 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 13:10:08.569 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 13:10:08.569 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 13:10:08.569 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 13:10:08.569 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 13:10:08.569 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 13:10:08.569 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 13:10:08.569 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 13:10:08.569 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 13:10:08.569 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 13:10:08.570 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 13:10:08.570 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 13:10:08.570 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 13:10:08.570 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 13:10:08.570 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 13:10:08.570 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 13:10:08.570 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 13:10:08.570 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 13:10:08.570 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 13:10:08.570 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 13:10:08.570 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 13:10:08.570 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 13:10:08.571 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 13:10:08.636 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 13:10:08.662 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 13:10:08.663 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.RecipeDaoTest,testInsertFail, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@36bed37a, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 13:10:08.686 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 13:10:08.686 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 13:10:08.687 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 13:10:08.687 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@286090c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@faea4da]
[DEBUG] 2019-10-02 13:10:08.752 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 13:10:08.752 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:10:08.776 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 13:10:08.776 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:10:09.065 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 13:10:09.065 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:10:09.065 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 13:10:09.065 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:10:09.111 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:10:09.111 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 13:10:09.111 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 13:10:09.111 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 13:10:09.111 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 13:10:09.116 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:10:09.116 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 13:10:09.116 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 13:10:09.116 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 13:10:09.117 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 13:10:09.117 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 13:10:09.117 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:10:09.144 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@795b66d]
[DEBUG] 2019-10-02 13:10:09.146 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 13:10:09.146 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 13:10:09.146 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 13:10:09.146 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 13:10:09.152 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d91fa02]
[DEBUG] 2019-10-02 13:10:09.155 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f193335]
[DEBUG] 2019-10-02 13:10:09.156 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 13:10:09.156 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 13:10:09.156 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 13:10:09.156 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 13:10:09.157 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 13:10:09.157 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 13:10:09.158 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:10:09.173 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:10:09.181 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 13:10:09.184 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:10:09.184 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a88c4f5]
[DEBUG] 2019-10-02 13:10:09.184 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 13:10:09.184 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 13:10:09.184 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 13:10:09.184 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 13:10:09.184 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1144a02b]
[DEBUG] 2019-10-02 13:10:09.185 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a4f9ed]
[DEBUG] 2019-10-02 13:10:09.185 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 13:10:09.185 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 13:10:09.185 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 13:10:09.185 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 13:10:09.185 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 13:10:09.185 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 13:10:09.185 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:10:09.185 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:10:09.186 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 13:10:09.186 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:10:09.202 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:10:09.203 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:10:09.203 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:10:09.203 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 13:10:09.203 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 13:10:09.203 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 13:10:09.203 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 13:10:09.203 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 13:10:09.203 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:10:09.203 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23b1aa9]
[DEBUG] 2019-10-02 13:10:09.204 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:10:09.204 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:10:09.204 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:10:09.204 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:10:09.204 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e8598d9]
[DEBUG] 2019-10-02 13:10:09.205 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 13:10:09.205 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 13:10:09.205 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 13:10:09.205 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 13:10:09.205 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 13:10:09.205 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 13:10:09.205 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:10:09.205 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:10:09.207 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 13:10:09.207 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:10:09.207 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@712cd5d3]
[DEBUG] 2019-10-02 13:10:09.207 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:10:09.207 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:10:09.207 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:10:09.207 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:10:09.207 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b17d8ab]
[DEBUG] 2019-10-02 13:10:09.208 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 13:10:09.208 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 13:10:09.208 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 13:10:09.208 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 13:10:09.208 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 13:10:09.208 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 13:10:09.208 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:10:09.208 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:10:09.209 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 13:10:09.209 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:10:09.209 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 13:10:09.223 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 13:10:09.230 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66020d69]
[DEBUG] 2019-10-02 13:10:09.230 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3751acd7]
[DEBUG] 2019-10-02 13:10:09.230 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:10:09.230 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:10:09.230 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:10:09.230 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:10:09.230 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 13:10:09.230 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:10:09.234 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:10:09.235 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 13:10:09.235 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 13:10:09.275 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 13:10:09.275 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 13:10:09.276 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 13:10:09.283 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 13:10:09.283 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 13:10:09.284 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 13:10:09.284 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 13:10:09.286 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@713999c2
[DEBUG] 2019-10-02 13:10:09.288 [main] SessionFactoryRegistry - Registering SessionFactory: adf72c8a-5c63-44c8-9c11-90a2b3dd902c (<unnamed>)
[DEBUG] 2019-10-02 13:10:09.288 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 13:10:09.385 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 13:10:09.399 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 13:10:09.399 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 13:10:09.418 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 13:10:09.425 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:10:09.461 [main] IdentifierGeneratorHelper - Natively generated identity: 14
[DEBUG] 2019-10-02 13:10:09.461 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:10:09.466 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 13:10:09.467 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 13:10:09.468 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 13:10:09.470 [main] JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:206) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:392) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:145) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1499) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:496) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3371) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2540) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:473) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:178) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:104) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at com.alexmalotky.persistence.GenericDao.insert(GenericDao.java:90) [classes/:?]
	at com.alexmalotky.persistence.RecipeDaoTest.lambda$testInsertFail$0(RecipeDaoTest.java:59) [test-classes/:?]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:50) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:38) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:1108) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at com.alexmalotky.persistence.RecipeDaoTest.testInsertFail(RecipeDaoTest.java:59) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) [junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69) [junit5-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
[DEBUG] 2019-10-02 13:10:09.481 [main] JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:187) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:104) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at com.alexmalotky.persistence.GenericDao.insert(GenericDao.java:90) [classes/:?]
	at com.alexmalotky.persistence.RecipeDaoTest.lambda$testInsertFail$0(RecipeDaoTest.java:59) [test-classes/:?]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:50) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:38) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:1108) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at com.alexmalotky.persistence.RecipeDaoTest.testInsertFail(RecipeDaoTest.java:59) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) [junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69) [junit5-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
[DEBUG] 2019-10-02 13:10:09.484 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:10:09.486 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:11:05.580 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 13:11:05.584 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 13:11:05.593 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 13:11:05.715 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 13:11:05.719 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 13:11:05.974 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 13:11:05.976 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 13:11:05.983 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 13:11:06.355 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 13:11:06.384 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 13:11:06.385 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 13:11:06.414 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 13:11:06.461 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1894593a
[DEBUG] 2019-10-02 13:11:06.462 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1894593a
[DEBUG] 2019-10-02 13:11:06.462 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1894593a
[DEBUG] 2019-10-02 13:11:06.463 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@468dda3e
[DEBUG] 2019-10-02 13:11:06.464 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@50756c76
[DEBUG] 2019-10-02 13:11:06.464 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1c9e07c6
[DEBUG] 2019-10-02 13:11:06.466 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@636bbbbb
[DEBUG] 2019-10-02 13:11:06.466 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@636bbbbb
[DEBUG] 2019-10-02 13:11:06.466 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@636bbbbb
[DEBUG] 2019-10-02 13:11:06.467 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6a4ccef7
[DEBUG] 2019-10-02 13:11:06.468 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6a4ccef7
[DEBUG] 2019-10-02 13:11:06.468 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6a4ccef7
[DEBUG] 2019-10-02 13:11:06.469 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5f7da3d3
[DEBUG] 2019-10-02 13:11:06.469 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5f7da3d3
[DEBUG] 2019-10-02 13:11:06.469 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5f7da3d3
[DEBUG] 2019-10-02 13:11:06.471 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@77ec6a3d
[DEBUG] 2019-10-02 13:11:06.471 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@77ec6a3d
[DEBUG] 2019-10-02 13:11:06.471 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@77ec6a3d
[DEBUG] 2019-10-02 13:11:06.472 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@245ec1a6
[DEBUG] 2019-10-02 13:11:06.473 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@245ec1a6
[DEBUG] 2019-10-02 13:11:06.473 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@245ec1a6
[DEBUG] 2019-10-02 13:11:06.474 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2016f509
[DEBUG] 2019-10-02 13:11:06.474 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2016f509
[DEBUG] 2019-10-02 13:11:06.474 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2016f509
[DEBUG] 2019-10-02 13:11:06.476 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2123064f
[DEBUG] 2019-10-02 13:11:06.476 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2123064f
[DEBUG] 2019-10-02 13:11:06.476 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2123064f
[DEBUG] 2019-10-02 13:11:06.478 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@73fb1d7f
[DEBUG] 2019-10-02 13:11:06.478 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@73fb1d7f
[DEBUG] 2019-10-02 13:11:06.479 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6ecdbab8
[DEBUG] 2019-10-02 13:11:06.479 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6ecdbab8
[DEBUG] 2019-10-02 13:11:06.480 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@29138d3a
[DEBUG] 2019-10-02 13:11:06.481 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@29138d3a
[DEBUG] 2019-10-02 13:11:06.482 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7c251f90
[DEBUG] 2019-10-02 13:11:06.482 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@17d32e9b
[DEBUG] 2019-10-02 13:11:06.483 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@a2ddf26
[DEBUG] 2019-10-02 13:11:06.484 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@a2ddf26
[DEBUG] 2019-10-02 13:11:06.485 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@108a46d6
[DEBUG] 2019-10-02 13:11:06.485 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@108a46d6
[DEBUG] 2019-10-02 13:11:06.502 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@21c815e4
[DEBUG] 2019-10-02 13:11:06.502 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@21c815e4
[DEBUG] 2019-10-02 13:11:06.506 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@761956ac
[DEBUG] 2019-10-02 13:11:06.506 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@761956ac
[DEBUG] 2019-10-02 13:11:06.510 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@36cc9385
[DEBUG] 2019-10-02 13:11:06.510 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@36cc9385
[DEBUG] 2019-10-02 13:11:06.512 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@10643593
[DEBUG] 2019-10-02 13:11:06.512 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@10643593
[DEBUG] 2019-10-02 13:11:06.515 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6917bb4
[DEBUG] 2019-10-02 13:11:06.515 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6917bb4
[DEBUG] 2019-10-02 13:11:06.518 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1bc49bc5
[DEBUG] 2019-10-02 13:11:06.518 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1bc49bc5
[DEBUG] 2019-10-02 13:11:06.522 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@44e93c1f
[DEBUG] 2019-10-02 13:11:06.522 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@44e93c1f
[DEBUG] 2019-10-02 13:11:06.525 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1f0b3cfe
[DEBUG] 2019-10-02 13:11:06.526 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f0b3cfe
[DEBUG] 2019-10-02 13:11:06.528 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@858d8b4
[DEBUG] 2019-10-02 13:11:06.529 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@858d8b4
[DEBUG] 2019-10-02 13:11:06.531 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@26844abb
[DEBUG] 2019-10-02 13:11:06.531 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@26844abb
[DEBUG] 2019-10-02 13:11:06.532 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@26844abb
[DEBUG] 2019-10-02 13:11:06.534 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@44bd4b0a
[DEBUG] 2019-10-02 13:11:06.536 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@472a11ae
[DEBUG] 2019-10-02 13:11:06.536 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@472a11ae
[DEBUG] 2019-10-02 13:11:06.536 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@472a11ae
[DEBUG] 2019-10-02 13:11:06.538 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@60cf62ad
[DEBUG] 2019-10-02 13:11:06.540 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@323f3c96
[DEBUG] 2019-10-02 13:11:06.540 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@323f3c96
[DEBUG] 2019-10-02 13:11:06.543 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@644ded04
[DEBUG] 2019-10-02 13:11:06.543 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@644ded04
[DEBUG] 2019-10-02 13:11:06.545 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@62e93c3a
[DEBUG] 2019-10-02 13:11:06.545 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@62e93c3a
[DEBUG] 2019-10-02 13:11:06.547 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5f038248
[DEBUG] 2019-10-02 13:11:06.547 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5f038248
[DEBUG] 2019-10-02 13:11:06.549 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1deceb67
[DEBUG] 2019-10-02 13:11:06.549 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1deceb67
[DEBUG] 2019-10-02 13:11:06.550 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@53ec2968
[DEBUG] 2019-10-02 13:11:06.553 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@62db3891
[DEBUG] 2019-10-02 13:11:06.553 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@62db3891
[DEBUG] 2019-10-02 13:11:06.553 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@62db3891
[DEBUG] 2019-10-02 13:11:06.555 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@546e61d5
[DEBUG] 2019-10-02 13:11:06.556 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@546e61d5
[DEBUG] 2019-10-02 13:11:06.556 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@546e61d5
[DEBUG] 2019-10-02 13:11:06.559 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2819c460
[DEBUG] 2019-10-02 13:11:06.560 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@78d6447a
[DEBUG] 2019-10-02 13:11:06.562 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@761e788f
[DEBUG] 2019-10-02 13:11:06.563 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@761e788f
[DEBUG] 2019-10-02 13:11:06.563 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@761e788f
[DEBUG] 2019-10-02 13:11:06.565 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5ef6fd7f
[DEBUG] 2019-10-02 13:11:06.565 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5ef6fd7f
[DEBUG] 2019-10-02 13:11:06.566 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5ef6fd7f
[DEBUG] 2019-10-02 13:11:06.567 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5d21202d
[DEBUG] 2019-10-02 13:11:06.568 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@277bf091
[DEBUG] 2019-10-02 13:11:06.571 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2af69643
[DEBUG] 2019-10-02 13:11:06.571 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2af69643
[DEBUG] 2019-10-02 13:11:06.572 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4047d2d9
[DEBUG] 2019-10-02 13:11:06.575 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4760f169
[DEBUG] 2019-10-02 13:11:06.576 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4760f169
[DEBUG] 2019-10-02 13:11:06.579 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1e58512c
[DEBUG] 2019-10-02 13:11:06.579 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1e58512c
[DEBUG] 2019-10-02 13:11:06.581 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7f353d99
[DEBUG] 2019-10-02 13:11:06.582 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6ede46f6
[DEBUG] 2019-10-02 13:11:06.585 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@31ee2fdb
[DEBUG] 2019-10-02 13:11:06.592 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@d109c4f
[DEBUG] 2019-10-02 13:11:06.592 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@d109c4f
[DEBUG] 2019-10-02 13:11:06.593 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@9596ce8
[DEBUG] 2019-10-02 13:11:06.594 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@75ae4a1f
[DEBUG] 2019-10-02 13:11:06.594 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@70228253
[DEBUG] 2019-10-02 13:11:06.594 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63c12e52
[DEBUG] 2019-10-02 13:11:06.594 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21bd20ee
[DEBUG] 2019-10-02 13:11:06.594 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26c47874
[DEBUG] 2019-10-02 13:11:06.594 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@421056e5
[DEBUG] 2019-10-02 13:11:06.595 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2849434b
[DEBUG] 2019-10-02 13:11:06.689 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 13:11:06.690 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 13:11:06.691 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 13:11:06.692 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 13:11:06.693 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 13:11:06.694 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 13:11:06.695 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 13:11:06.697 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 13:11:06.698 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 13:11:06.699 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 13:11:06.700 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 13:11:06.701 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 13:11:06.701 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 13:11:06.702 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 13:11:06.712 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 13:11:06.713 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 13:11:06.713 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 13:11:06.945 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 13:11:07.193 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 13:11:07.195 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 13:11:07.195 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 13:11:07.241 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 13:11:07.282 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 13:11:07.326 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 13:11:07.395 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 13:11:07.402 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@286090c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@31120021]
[DEBUG] 2019-10-02 13:11:07.496 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:11:07.537 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 13:11:07.544 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 13:11:07.548 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 13:11:07.580 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:11:07.583 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 13:11:07.586 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 13:11:07.589 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 13:11:07.592 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 13:11:07.597 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 13:11:07.599 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:11:07.599 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 13:11:07.600 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 13:11:07.600 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 13:11:07.600 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 13:11:07.600 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:11:07.600 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 13:11:07.601 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 13:11:07.601 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 13:11:07.601 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 13:11:07.601 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:11:07.601 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 13:11:07.601 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 13:11:07.601 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 13:11:07.602 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 13:11:07.603 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:11:07.604 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:11:07.607 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:11:07.623 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:11:07.624 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:11:07.625 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 13:11:07.627 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:11:07.628 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:11:07.628 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:11:07.631 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 13:11:07.632 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:11:07.632 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 13:11:07.632 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 13:11:07.632 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 13:11:07.633 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 13:11:07.634 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:11:07.635 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 13:11:07.635 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 13:11:07.635 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 13:11:07.638 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:11:07.638 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 13:11:07.638 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 13:11:07.639 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 13:11:07.639 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 13:11:07.639 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 13:11:07.639 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:11:07.639 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 13:11:07.639 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 13:11:07.640 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 13:11:07.640 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 13:11:07.640 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:11:07.640 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 13:11:07.640 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 13:11:07.641 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 13:11:07.641 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 13:11:07.641 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:11:07.641 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 13:11:07.641 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 13:11:07.641 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 13:11:07.641 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 13:11:07.642 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 13:11:07.642 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:11:07.644 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 13:11:07.646 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 13:11:07.646 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 13:11:07.646 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 13:11:07.646 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 13:11:07.646 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 13:11:07.646 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 13:11:07.647 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 13:11:07.647 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 13:11:07.647 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 13:11:07.653 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 13:11:07.653 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 13:11:07.653 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:11:07.654 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 13:11:07.655 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 13:11:07.656 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 13:11:07.656 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:11:07.657 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:11:07.661 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:11:07.701 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 13:11:07.702 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 13:11:07.702 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 13:11:07.702 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 13:11:07.702 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 13:11:07.703 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 13:11:07.703 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 13:11:07.703 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 13:11:07.703 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 13:11:07.703 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 13:11:07.703 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 13:11:07.703 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 13:11:07.703 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 13:11:07.703 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 13:11:07.703 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 13:11:07.703 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 13:11:07.703 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 13:11:07.703 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 13:11:07.703 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 13:11:07.704 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 13:11:07.704 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 13:11:07.704 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 13:11:07.704 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 13:11:07.704 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 13:11:07.704 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 13:11:07.704 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 13:11:07.704 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 13:11:07.704 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 13:11:07.705 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 13:11:07.705 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 13:11:07.705 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 13:11:07.705 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 13:11:07.705 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 13:11:07.705 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 13:11:07.705 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 13:11:07.705 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 13:11:07.705 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 13:11:07.705 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 13:11:07.706 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 13:11:07.774 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 13:11:07.801 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 13:11:07.801 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.RecipeDaoTest,testInsertFail, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@36bed37a, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 13:11:07.823 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 13:11:07.823 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 13:11:07.825 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 13:11:07.825 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@286090c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@faea4da]
[DEBUG] 2019-10-02 13:11:07.888 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 13:11:07.888 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:11:07.912 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 13:11:07.912 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:11:08.206 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 13:11:08.206 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:11:08.206 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 13:11:08.206 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:11:08.252 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:11:08.252 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 13:11:08.252 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 13:11:08.252 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 13:11:08.252 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 13:11:08.257 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:11:08.257 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 13:11:08.257 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 13:11:08.257 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 13:11:08.257 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 13:11:08.257 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 13:11:08.257 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:11:08.285 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@795b66d]
[DEBUG] 2019-10-02 13:11:08.286 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 13:11:08.287 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 13:11:08.287 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 13:11:08.287 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 13:11:08.294 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d91fa02]
[DEBUG] 2019-10-02 13:11:08.298 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f193335]
[DEBUG] 2019-10-02 13:11:08.299 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 13:11:08.300 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 13:11:08.300 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 13:11:08.300 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 13:11:08.300 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 13:11:08.300 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 13:11:08.301 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:11:08.316 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:11:08.324 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 13:11:08.327 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:11:08.327 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a88c4f5]
[DEBUG] 2019-10-02 13:11:08.327 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 13:11:08.327 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 13:11:08.327 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 13:11:08.327 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 13:11:08.327 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1144a02b]
[DEBUG] 2019-10-02 13:11:08.327 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a4f9ed]
[DEBUG] 2019-10-02 13:11:08.328 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 13:11:08.328 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 13:11:08.328 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 13:11:08.328 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 13:11:08.328 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 13:11:08.328 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 13:11:08.328 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:11:08.328 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:11:08.329 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 13:11:08.329 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:11:08.345 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:11:08.346 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:11:08.346 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:11:08.347 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 13:11:08.347 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 13:11:08.347 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 13:11:08.347 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 13:11:08.347 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 13:11:08.347 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:11:08.347 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23b1aa9]
[DEBUG] 2019-10-02 13:11:08.347 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:11:08.347 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:11:08.347 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:11:08.348 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:11:08.348 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e8598d9]
[DEBUG] 2019-10-02 13:11:08.349 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 13:11:08.349 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 13:11:08.349 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 13:11:08.349 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 13:11:08.349 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 13:11:08.349 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 13:11:08.349 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:11:08.350 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:11:08.351 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 13:11:08.351 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:11:08.351 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@712cd5d3]
[DEBUG] 2019-10-02 13:11:08.351 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:11:08.351 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:11:08.351 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:11:08.351 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:11:08.352 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b17d8ab]
[DEBUG] 2019-10-02 13:11:08.352 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 13:11:08.352 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 13:11:08.352 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 13:11:08.352 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 13:11:08.352 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 13:11:08.352 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 13:11:08.352 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:11:08.353 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:11:08.353 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 13:11:08.354 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:11:08.354 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 13:11:08.354 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 13:11:08.360 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66020d69]
[DEBUG] 2019-10-02 13:11:08.360 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3751acd7]
[DEBUG] 2019-10-02 13:11:08.360 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:11:08.360 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:11:08.360 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:11:08.360 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:11:08.360 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 13:11:08.361 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:11:08.364 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:11:08.364 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 13:11:08.365 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 13:11:08.406 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 13:11:08.406 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 13:11:08.407 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 13:11:08.415 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 13:11:08.415 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 13:11:08.417 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 13:11:08.417 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 13:11:08.420 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@713999c2
[DEBUG] 2019-10-02 13:11:08.423 [main] SessionFactoryRegistry - Registering SessionFactory: b60f0f4e-23ee-4555-adba-61d4094740d5 (<unnamed>)
[DEBUG] 2019-10-02 13:11:08.423 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 13:11:08.551 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 13:11:08.564 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 13:11:08.565 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 13:11:08.582 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 13:11:08.587 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:11:08.621 [main] IdentifierGeneratorHelper - Natively generated identity: 15
[DEBUG] 2019-10-02 13:11:08.622 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:11:08.627 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 13:11:08.628 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 13:11:08.629 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 13:11:08.633 [main] JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:206) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:392) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:145) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1499) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:496) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3371) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2540) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:473) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:178) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:104) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at com.alexmalotky.persistence.GenericDao.insert(GenericDao.java:90) [classes/:?]
	at com.alexmalotky.persistence.RecipeDaoTest.lambda$testInsertFail$0(RecipeDaoTest.java:59) [test-classes/:?]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:50) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:38) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:1108) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at com.alexmalotky.persistence.RecipeDaoTest.testInsertFail(RecipeDaoTest.java:59) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) [junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69) [junit5-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
[DEBUG] 2019-10-02 13:11:08.644 [main] JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:187) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:104) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at com.alexmalotky.persistence.GenericDao.insert(GenericDao.java:90) [classes/:?]
	at com.alexmalotky.persistence.RecipeDaoTest.lambda$testInsertFail$0(RecipeDaoTest.java:59) [test-classes/:?]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:50) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:38) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:1108) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at com.alexmalotky.persistence.RecipeDaoTest.testInsertFail(RecipeDaoTest.java:59) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) [junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69) [junit5-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
[DEBUG] 2019-10-02 13:11:08.649 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:11:08.650 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:19:06.222 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 13:19:06.227 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 13:19:06.235 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 13:19:06.401 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 13:19:06.405 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 13:19:06.767 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 13:19:06.769 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 13:19:06.780 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 13:19:07.318 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 13:19:07.353 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 13:19:07.355 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 13:19:07.385 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 13:19:07.441 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@42b6d0cc
[DEBUG] 2019-10-02 13:19:07.441 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@42b6d0cc
[DEBUG] 2019-10-02 13:19:07.442 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@42b6d0cc
[DEBUG] 2019-10-02 13:19:07.442 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@750ff7d3
[DEBUG] 2019-10-02 13:19:07.444 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7636823f
[DEBUG] 2019-10-02 13:19:07.444 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7fd26ad8
[DEBUG] 2019-10-02 13:19:07.445 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@78010562
[DEBUG] 2019-10-02 13:19:07.446 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@78010562
[DEBUG] 2019-10-02 13:19:07.446 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@78010562
[DEBUG] 2019-10-02 13:19:07.448 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2b10ace9
[DEBUG] 2019-10-02 13:19:07.448 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2b10ace9
[DEBUG] 2019-10-02 13:19:07.448 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2b10ace9
[DEBUG] 2019-10-02 13:19:07.450 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7eae3764
[DEBUG] 2019-10-02 13:19:07.450 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7eae3764
[DEBUG] 2019-10-02 13:19:07.450 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7eae3764
[DEBUG] 2019-10-02 13:19:07.452 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@69391e08
[DEBUG] 2019-10-02 13:19:07.452 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@69391e08
[DEBUG] 2019-10-02 13:19:07.452 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@69391e08
[DEBUG] 2019-10-02 13:19:07.454 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@103082dd
[DEBUG] 2019-10-02 13:19:07.454 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@103082dd
[DEBUG] 2019-10-02 13:19:07.455 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@103082dd
[DEBUG] 2019-10-02 13:19:07.456 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@67efd2c2
[DEBUG] 2019-10-02 13:19:07.456 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@67efd2c2
[DEBUG] 2019-10-02 13:19:07.456 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@67efd2c2
[DEBUG] 2019-10-02 13:19:07.458 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@782be4eb
[DEBUG] 2019-10-02 13:19:07.458 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@782be4eb
[DEBUG] 2019-10-02 13:19:07.458 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@782be4eb
[DEBUG] 2019-10-02 13:19:07.460 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6f1a80fb
[DEBUG] 2019-10-02 13:19:07.460 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6f1a80fb
[DEBUG] 2019-10-02 13:19:07.461 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f6b687e
[DEBUG] 2019-10-02 13:19:07.462 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f6b687e
[DEBUG] 2019-10-02 13:19:07.464 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@73d4066e
[DEBUG] 2019-10-02 13:19:07.465 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@73d4066e
[DEBUG] 2019-10-02 13:19:07.465 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@22a0d4ea
[DEBUG] 2019-10-02 13:19:07.466 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@19f7222e
[DEBUG] 2019-10-02 13:19:07.468 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6dbcf214
[DEBUG] 2019-10-02 13:19:07.468 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6dbcf214
[DEBUG] 2019-10-02 13:19:07.469 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@66f0548d
[DEBUG] 2019-10-02 13:19:07.469 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@66f0548d
[DEBUG] 2019-10-02 13:19:07.489 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7d04529c
[DEBUG] 2019-10-02 13:19:07.490 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7d04529c
[DEBUG] 2019-10-02 13:19:07.493 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@720bf653
[DEBUG] 2019-10-02 13:19:07.493 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@720bf653
[DEBUG] 2019-10-02 13:19:07.499 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7342e05d
[DEBUG] 2019-10-02 13:19:07.500 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7342e05d
[DEBUG] 2019-10-02 13:19:07.503 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@71978f46
[DEBUG] 2019-10-02 13:19:07.503 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@71978f46
[DEBUG] 2019-10-02 13:19:07.507 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@cf518cf
[DEBUG] 2019-10-02 13:19:07.507 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@cf518cf
[DEBUG] 2019-10-02 13:19:07.511 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@f91da5e
[DEBUG] 2019-10-02 13:19:07.511 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@f91da5e
[DEBUG] 2019-10-02 13:19:07.516 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4f66ffc8
[DEBUG] 2019-10-02 13:19:07.517 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4f66ffc8
[DEBUG] 2019-10-02 13:19:07.521 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@397ef2
[DEBUG] 2019-10-02 13:19:07.521 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@397ef2
[DEBUG] 2019-10-02 13:19:07.524 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@65c33b92
[DEBUG] 2019-10-02 13:19:07.524 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@65c33b92
[DEBUG] 2019-10-02 13:19:07.526 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@75483843
[DEBUG] 2019-10-02 13:19:07.527 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@75483843
[DEBUG] 2019-10-02 13:19:07.527 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@75483843
[DEBUG] 2019-10-02 13:19:07.529 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b2f5fcf
[DEBUG] 2019-10-02 13:19:07.531 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@312b34e3
[DEBUG] 2019-10-02 13:19:07.531 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@312b34e3
[DEBUG] 2019-10-02 13:19:07.531 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@312b34e3
[DEBUG] 2019-10-02 13:19:07.532 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@44bd4b0a
[DEBUG] 2019-10-02 13:19:07.534 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2b8bb184
[DEBUG] 2019-10-02 13:19:07.534 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2b8bb184
[DEBUG] 2019-10-02 13:19:07.536 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1e0895f5
[DEBUG] 2019-10-02 13:19:07.537 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e0895f5
[DEBUG] 2019-10-02 13:19:07.540 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6726cc69
[DEBUG] 2019-10-02 13:19:07.540 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6726cc69
[DEBUG] 2019-10-02 13:19:07.542 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5292ceca
[DEBUG] 2019-10-02 13:19:07.542 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5292ceca
[DEBUG] 2019-10-02 13:19:07.544 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@673919a7
[DEBUG] 2019-10-02 13:19:07.544 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@673919a7
[DEBUG] 2019-10-02 13:19:07.547 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@20cece0b
[DEBUG] 2019-10-02 13:19:07.549 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@de8039f
[DEBUG] 2019-10-02 13:19:07.549 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@de8039f
[DEBUG] 2019-10-02 13:19:07.549 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@de8039f
[DEBUG] 2019-10-02 13:19:07.551 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7e19755a
[DEBUG] 2019-10-02 13:19:07.551 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7e19755a
[DEBUG] 2019-10-02 13:19:07.551 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7e19755a
[DEBUG] 2019-10-02 13:19:07.553 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@61cd1c71
[DEBUG] 2019-10-02 13:19:07.554 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5bc7e78e
[DEBUG] 2019-10-02 13:19:07.555 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@b606cb6
[DEBUG] 2019-10-02 13:19:07.556 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@b606cb6
[DEBUG] 2019-10-02 13:19:07.556 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@b606cb6
[DEBUG] 2019-10-02 13:19:07.557 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7a729f84
[DEBUG] 2019-10-02 13:19:07.558 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7a729f84
[DEBUG] 2019-10-02 13:19:07.558 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7a729f84
[DEBUG] 2019-10-02 13:19:07.558 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@71904469
[DEBUG] 2019-10-02 13:19:07.559 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1907874b
[DEBUG] 2019-10-02 13:19:07.561 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@14b789f6
[DEBUG] 2019-10-02 13:19:07.561 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@14b789f6
[DEBUG] 2019-10-02 13:19:07.562 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@fab35b1
[DEBUG] 2019-10-02 13:19:07.565 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@587a1cfb
[DEBUG] 2019-10-02 13:19:07.565 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@587a1cfb
[DEBUG] 2019-10-02 13:19:07.567 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1b1f5012
[DEBUG] 2019-10-02 13:19:07.568 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1b1f5012
[DEBUG] 2019-10-02 13:19:07.568 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@261ea657
[DEBUG] 2019-10-02 13:19:07.569 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@76563d26
[DEBUG] 2019-10-02 13:19:07.572 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4649d70a
[DEBUG] 2019-10-02 13:19:07.579 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@558756be
[DEBUG] 2019-10-02 13:19:07.579 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@558756be
[DEBUG] 2019-10-02 13:19:07.581 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7ff35a3f
[DEBUG] 2019-10-02 13:19:07.582 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@26dc9bd5
[DEBUG] 2019-10-02 13:19:07.582 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@252dc8c4
[DEBUG] 2019-10-02 13:19:07.582 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@43045f9f
[DEBUG] 2019-10-02 13:19:07.582 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2643d762
[DEBUG] 2019-10-02 13:19:07.582 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6403e24c
[DEBUG] 2019-10-02 13:19:07.582 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2f236de0
[DEBUG] 2019-10-02 13:19:07.583 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4eba373c
[DEBUG] 2019-10-02 13:19:07.671 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 13:19:07.672 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 13:19:07.673 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 13:19:07.674 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 13:19:07.674 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 13:19:07.677 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 13:19:07.677 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 13:19:07.680 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 13:19:07.681 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 13:19:07.682 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 13:19:07.683 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 13:19:07.684 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 13:19:07.684 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 13:19:07.686 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 13:19:07.694 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 13:19:07.695 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 13:19:07.695 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 13:19:08.001 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 13:19:08.296 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 13:19:08.297 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 13:19:08.298 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 13:19:08.350 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 13:19:08.383 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 13:19:08.432 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 13:19:08.520 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 13:19:08.527 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@40d60f2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3382cf68]
[DEBUG] 2019-10-02 13:19:08.610 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:19:08.651 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 13:19:08.658 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 13:19:08.664 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 13:19:08.701 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:19:08.705 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 13:19:08.708 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 13:19:08.711 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 13:19:08.714 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 13:19:08.720 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 13:19:08.722 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:19:08.723 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 13:19:08.723 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 13:19:08.723 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 13:19:08.723 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 13:19:08.723 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:19:08.723 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 13:19:08.723 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 13:19:08.724 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 13:19:08.724 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 13:19:08.724 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:19:08.724 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 13:19:08.724 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 13:19:08.724 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 13:19:08.724 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 13:19:08.726 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:19:08.727 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:19:08.730 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:19:08.746 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:19:08.747 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:19:08.750 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 13:19:08.753 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:19:08.754 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:19:08.754 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:19:08.758 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 13:19:08.759 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:19:08.759 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 13:19:08.759 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 13:19:08.759 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 13:19:08.759 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 13:19:08.761 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:19:08.762 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 13:19:08.762 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 13:19:08.762 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 13:19:08.766 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:19:08.766 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 13:19:08.767 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 13:19:08.767 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 13:19:08.767 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 13:19:08.767 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 13:19:08.767 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:19:08.768 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 13:19:08.768 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 13:19:08.768 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 13:19:08.768 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 13:19:08.768 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:19:08.768 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 13:19:08.769 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 13:19:08.769 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 13:19:08.769 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 13:19:08.769 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:19:08.769 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 13:19:08.769 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 13:19:08.769 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 13:19:08.769 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 13:19:08.769 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 13:19:08.769 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:19:08.771 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 13:19:08.774 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 13:19:08.774 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 13:19:08.774 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 13:19:08.775 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 13:19:08.775 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 13:19:08.775 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 13:19:08.775 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 13:19:08.775 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 13:19:08.775 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 13:19:08.781 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 13:19:08.781 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 13:19:08.781 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:19:08.783 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 13:19:08.784 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 13:19:08.785 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 13:19:08.786 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:19:08.786 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:19:08.791 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:19:08.843 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 13:19:08.845 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 13:19:08.845 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 13:19:08.845 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 13:19:08.845 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 13:19:08.845 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 13:19:08.845 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 13:19:08.845 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 13:19:08.845 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 13:19:08.845 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 13:19:08.845 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 13:19:08.845 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 13:19:08.846 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 13:19:08.846 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 13:19:08.846 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 13:19:08.846 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 13:19:08.846 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 13:19:08.846 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 13:19:08.846 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 13:19:08.846 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 13:19:08.846 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 13:19:08.846 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 13:19:08.846 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 13:19:08.846 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 13:19:08.847 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 13:19:08.847 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 13:19:08.847 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 13:19:08.847 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 13:19:08.847 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 13:19:08.847 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 13:19:08.847 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 13:19:08.847 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 13:19:08.847 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 13:19:08.847 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 13:19:08.848 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 13:19:08.848 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 13:19:08.848 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 13:19:08.848 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 13:19:08.848 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 13:19:08.923 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 13:19:08.952 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 13:19:08.952 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.RecipeDaoTest,testUpdate, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@8f40022, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 13:19:08.979 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 13:19:08.979 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 13:19:08.980 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 13:19:08.981 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@40d60f2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@24c685e7]
[DEBUG] 2019-10-02 13:19:09.062 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 13:19:09.062 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:19:09.095 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 13:19:09.096 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:19:09.461 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 13:19:09.461 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:19:09.462 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 13:19:09.462 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:19:09.512 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:19:09.513 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 13:19:09.513 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 13:19:09.513 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 13:19:09.513 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 13:19:09.518 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:19:09.518 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 13:19:09.519 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 13:19:09.519 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 13:19:09.519 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 13:19:09.519 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 13:19:09.519 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:19:09.553 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73e4bb60]
[DEBUG] 2019-10-02 13:19:09.555 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 13:19:09.555 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 13:19:09.556 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 13:19:09.556 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 13:19:09.562 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6568f998]
[DEBUG] 2019-10-02 13:19:09.565 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79ab97fd]
[DEBUG] 2019-10-02 13:19:09.567 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 13:19:09.567 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 13:19:09.567 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 13:19:09.567 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 13:19:09.567 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 13:19:09.568 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 13:19:09.568 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:19:09.583 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:19:09.593 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 13:19:09.596 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:19:09.596 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@642c6461]
[DEBUG] 2019-10-02 13:19:09.596 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 13:19:09.596 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 13:19:09.596 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 13:19:09.596 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 13:19:09.596 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e48462d]
[DEBUG] 2019-10-02 13:19:09.596 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17216605]
[DEBUG] 2019-10-02 13:19:09.597 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 13:19:09.597 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 13:19:09.597 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 13:19:09.597 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 13:19:09.597 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 13:19:09.597 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 13:19:09.597 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:19:09.597 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:19:09.598 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 13:19:09.598 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:19:09.615 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:19:09.616 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:19:09.616 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:19:09.617 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 13:19:09.617 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 13:19:09.617 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 13:19:09.617 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 13:19:09.617 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 13:19:09.617 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:19:09.617 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@589fb74d]
[DEBUG] 2019-10-02 13:19:09.617 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:19:09.617 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:19:09.617 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:19:09.617 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:19:09.618 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7de147e9]
[DEBUG] 2019-10-02 13:19:09.619 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 13:19:09.619 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 13:19:09.619 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 13:19:09.619 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 13:19:09.619 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 13:19:09.619 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 13:19:09.619 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:19:09.619 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:19:09.620 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 13:19:09.620 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:19:09.620 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a8f8555]
[DEBUG] 2019-10-02 13:19:09.620 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:19:09.621 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:19:09.621 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:19:09.621 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:19:09.622 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13ef7fa1]
[DEBUG] 2019-10-02 13:19:09.622 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 13:19:09.622 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 13:19:09.622 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 13:19:09.622 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 13:19:09.622 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 13:19:09.622 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 13:19:09.622 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:19:09.623 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:19:09.623 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 13:19:09.623 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:19:09.624 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 13:19:09.624 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 13:19:09.630 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7772d266]
[DEBUG] 2019-10-02 13:19:09.630 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a21c74]
[DEBUG] 2019-10-02 13:19:09.631 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:19:09.631 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:19:09.631 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:19:09.631 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:19:09.631 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 13:19:09.631 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:19:09.635 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:19:09.636 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 13:19:09.637 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 13:19:09.681 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 13:19:09.681 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 13:19:09.681 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 13:19:09.690 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 13:19:09.690 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 13:19:09.691 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 13:19:09.692 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 13:19:09.693 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1b1252c8
[DEBUG] 2019-10-02 13:19:09.696 [main] SessionFactoryRegistry - Registering SessionFactory: 43341f9e-cd3f-4612-8e46-8671a6e94b4f (<unnamed>)
[DEBUG] 2019-10-02 13:19:09.696 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 13:19:09.801 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 13:19:09.824 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:19:09.858 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:19:09.860 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 13:19:09.874 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 13:19:09.875 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-02 13:19:09.875 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:19:09.875 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-02 13:19:09.875 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:19:09.875 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 13:19:09.875 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:19:09.875 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 13:19:09.875 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:19:09.876 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 13:19:09.877 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 13:19:09.877 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 13:19:09.877 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:19:09.877 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 13:19:09.877 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:19:09.877 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 13:19:09.877 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:19:09.877 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 13:19:09.877 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:19:09.887 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 13:19:09.887 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:19:09.887 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 13:19:09.888 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:19:09.891 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 13:19:09.891 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 13:19:09.894 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 13:19:09.897 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:19:09.898 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 13:19:09.898 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:19:09.898 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 13:19:09.898 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:19:09.899 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:19:09.899 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 13:19:09.899 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-02 13:19:09.899 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:19:09.907 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 13:19:09.907 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 13:19:09.916 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 13:19:09.917 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 13:19:09.917 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 13:19:09.923 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2019-10-02 13:19:09.923 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-10-02 13:19:09.924 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 13:19:09.924 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=Do the thing, name=Test Recipe, ingredients={ {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }, id=3, user=com.alexmalotky.entity.User#3}
[DEBUG] 2019-10-02 13:19:09.928 [main] SQL - update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 13:19:09.935 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:19:09.937 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:29:46.150 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 13:29:46.154 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 13:29:46.160 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 13:29:46.281 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 13:29:46.283 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 13:29:46.567 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 13:29:46.568 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 13:29:46.577 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 13:29:47.030 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 13:29:47.062 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 13:29:47.063 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 13:29:47.092 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 13:29:47.136 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1000d54d
[DEBUG] 2019-10-02 13:29:47.136 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1000d54d
[DEBUG] 2019-10-02 13:29:47.136 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1000d54d
[DEBUG] 2019-10-02 13:29:47.138 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@63b3ee82
[DEBUG] 2019-10-02 13:29:47.139 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@a0db585
[DEBUG] 2019-10-02 13:29:47.140 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1894593a
[DEBUG] 2019-10-02 13:29:47.142 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@50756c76
[DEBUG] 2019-10-02 13:29:47.143 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@50756c76
[DEBUG] 2019-10-02 13:29:47.143 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@50756c76
[DEBUG] 2019-10-02 13:29:47.144 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@52169758
[DEBUG] 2019-10-02 13:29:47.144 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@52169758
[DEBUG] 2019-10-02 13:29:47.145 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52169758
[DEBUG] 2019-10-02 13:29:47.146 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@10dc7d6
[DEBUG] 2019-10-02 13:29:47.146 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@10dc7d6
[DEBUG] 2019-10-02 13:29:47.146 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10dc7d6
[DEBUG] 2019-10-02 13:29:47.147 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@35eb4a3b
[DEBUG] 2019-10-02 13:29:47.147 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@35eb4a3b
[DEBUG] 2019-10-02 13:29:47.148 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35eb4a3b
[DEBUG] 2019-10-02 13:29:47.149 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3a22bad6
[DEBUG] 2019-10-02 13:29:47.149 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3a22bad6
[DEBUG] 2019-10-02 13:29:47.149 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3a22bad6
[DEBUG] 2019-10-02 13:29:47.150 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@71d9cb05
[DEBUG] 2019-10-02 13:29:47.150 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@71d9cb05
[DEBUG] 2019-10-02 13:29:47.151 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71d9cb05
[DEBUG] 2019-10-02 13:29:47.152 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@38792286
[DEBUG] 2019-10-02 13:29:47.152 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@38792286
[DEBUG] 2019-10-02 13:29:47.152 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@38792286
[DEBUG] 2019-10-02 13:29:47.153 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5a237731
[DEBUG] 2019-10-02 13:29:47.153 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5a237731
[DEBUG] 2019-10-02 13:29:47.155 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@28cb3a25
[DEBUG] 2019-10-02 13:29:47.155 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@28cb3a25
[DEBUG] 2019-10-02 13:29:47.156 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@25d2f66
[DEBUG] 2019-10-02 13:29:47.156 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@25d2f66
[DEBUG] 2019-10-02 13:29:47.157 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@49ede9c7
[DEBUG] 2019-10-02 13:29:47.159 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3f725306
[DEBUG] 2019-10-02 13:29:47.161 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@496a31da
[DEBUG] 2019-10-02 13:29:47.161 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@496a31da
[DEBUG] 2019-10-02 13:29:47.162 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2e6f610d
[DEBUG] 2019-10-02 13:29:47.162 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2e6f610d
[DEBUG] 2019-10-02 13:29:47.176 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@14fa92af
[DEBUG] 2019-10-02 13:29:47.177 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@14fa92af
[DEBUG] 2019-10-02 13:29:47.181 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@360bc645
[DEBUG] 2019-10-02 13:29:47.181 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@360bc645
[DEBUG] 2019-10-02 13:29:47.185 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2a331b46
[DEBUG] 2019-10-02 13:29:47.185 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2a331b46
[DEBUG] 2019-10-02 13:29:47.187 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@304d0259
[DEBUG] 2019-10-02 13:29:47.187 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@304d0259
[DEBUG] 2019-10-02 13:29:47.190 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7915bca3
[DEBUG] 2019-10-02 13:29:47.190 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7915bca3
[DEBUG] 2019-10-02 13:29:47.193 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@eca6a74
[DEBUG] 2019-10-02 13:29:47.193 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@eca6a74
[DEBUG] 2019-10-02 13:29:47.197 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@124ac145
[DEBUG] 2019-10-02 13:29:47.197 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@124ac145
[DEBUG] 2019-10-02 13:29:47.200 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@36a6bea6
[DEBUG] 2019-10-02 13:29:47.200 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@36a6bea6
[DEBUG] 2019-10-02 13:29:47.202 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@7903d448
[DEBUG] 2019-10-02 13:29:47.202 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7903d448
[DEBUG] 2019-10-02 13:29:47.204 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@336206d8
[DEBUG] 2019-10-02 13:29:47.205 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@336206d8
[DEBUG] 2019-10-02 13:29:47.205 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@336206d8
[DEBUG] 2019-10-02 13:29:47.206 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@858d8b4
[DEBUG] 2019-10-02 13:29:47.209 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@26844abb
[DEBUG] 2019-10-02 13:29:47.209 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@26844abb
[DEBUG] 2019-10-02 13:29:47.209 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@26844abb
[DEBUG] 2019-10-02 13:29:47.210 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6c008c24
[DEBUG] 2019-10-02 13:29:47.212 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@472a11ae
[DEBUG] 2019-10-02 13:29:47.212 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@472a11ae
[DEBUG] 2019-10-02 13:29:47.215 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1ac4ccad
[DEBUG] 2019-10-02 13:29:47.215 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ac4ccad
[DEBUG] 2019-10-02 13:29:47.217 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4b6d92e
[DEBUG] 2019-10-02 13:29:47.217 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4b6d92e
[DEBUG] 2019-10-02 13:29:47.219 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@13d9261f
[DEBUG] 2019-10-02 13:29:47.219 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@13d9261f
[DEBUG] 2019-10-02 13:29:47.221 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25d93198
[DEBUG] 2019-10-02 13:29:47.222 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25d93198
[DEBUG] 2019-10-02 13:29:47.223 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4c777e7b
[DEBUG] 2019-10-02 13:29:47.227 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1deceb67
[DEBUG] 2019-10-02 13:29:47.227 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1deceb67
[DEBUG] 2019-10-02 13:29:47.227 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1deceb67
[DEBUG] 2019-10-02 13:29:47.229 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5d5c04f9
[DEBUG] 2019-10-02 13:29:47.229 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5d5c04f9
[DEBUG] 2019-10-02 13:29:47.229 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5d5c04f9
[DEBUG] 2019-10-02 13:29:47.231 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6724cdec
[DEBUG] 2019-10-02 13:29:47.232 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1a4d1ab7
[DEBUG] 2019-10-02 13:29:47.234 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2a3194c6
[DEBUG] 2019-10-02 13:29:47.234 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2a3194c6
[DEBUG] 2019-10-02 13:29:47.234 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2a3194c6
[DEBUG] 2019-10-02 13:29:47.236 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e469dfd
[DEBUG] 2019-10-02 13:29:47.237 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e469dfd
[DEBUG] 2019-10-02 13:29:47.237 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e469dfd
[DEBUG] 2019-10-02 13:29:47.238 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5b9396d3
[DEBUG] 2019-10-02 13:29:47.238 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5e65afb6
[DEBUG] 2019-10-02 13:29:47.241 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6eb17ec8
[DEBUG] 2019-10-02 13:29:47.241 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6eb17ec8
[DEBUG] 2019-10-02 13:29:47.242 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6a094db2
[DEBUG] 2019-10-02 13:29:47.244 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@48528634
[DEBUG] 2019-10-02 13:29:47.244 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@48528634
[DEBUG] 2019-10-02 13:29:47.246 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7add323c
[DEBUG] 2019-10-02 13:29:47.246 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7add323c
[DEBUG] 2019-10-02 13:29:47.247 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@35c12c7a
[DEBUG] 2019-10-02 13:29:47.248 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4ac86d6a
[DEBUG] 2019-10-02 13:29:47.250 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5d43409a
[DEBUG] 2019-10-02 13:29:47.256 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@433348bc
[DEBUG] 2019-10-02 13:29:47.257 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@433348bc
[DEBUG] 2019-10-02 13:29:47.258 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@26dc9bd5
[DEBUG] 2019-10-02 13:29:47.258 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@252dc8c4
[DEBUG] 2019-10-02 13:29:47.258 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@43045f9f
[DEBUG] 2019-10-02 13:29:47.259 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2643d762
[DEBUG] 2019-10-02 13:29:47.259 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6403e24c
[DEBUG] 2019-10-02 13:29:47.259 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f236de0
[DEBUG] 2019-10-02 13:29:47.259 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4eba373c
[DEBUG] 2019-10-02 13:29:47.259 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@767a014e
[DEBUG] 2019-10-02 13:29:47.340 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 13:29:47.341 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 13:29:47.342 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 13:29:47.343 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 13:29:47.343 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 13:29:47.346 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 13:29:47.347 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 13:29:47.350 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 13:29:47.351 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 13:29:47.352 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 13:29:47.353 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 13:29:47.354 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 13:29:47.354 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 13:29:47.355 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 13:29:47.365 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 13:29:47.365 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 13:29:47.366 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 13:29:47.685 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 13:29:47.972 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 13:29:47.972 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 13:29:47.977 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 13:29:48.062 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 13:29:48.123 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 13:29:48.185 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 13:29:48.273 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 13:29:48.280 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3382cf68] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2f74900b]
[DEBUG] 2019-10-02 13:29:48.365 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:29:48.396 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 13:29:48.403 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 13:29:48.408 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 13:29:48.443 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:29:48.447 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 13:29:48.450 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 13:29:48.452 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 13:29:48.456 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 13:29:48.463 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 13:29:48.467 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:29:48.467 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 13:29:48.467 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 13:29:48.467 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 13:29:48.468 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 13:29:48.468 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:29:48.468 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 13:29:48.468 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 13:29:48.469 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 13:29:48.469 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 13:29:48.471 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:29:48.472 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 13:29:48.472 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 13:29:48.473 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 13:29:48.473 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 13:29:48.475 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:29:48.476 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:29:48.479 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:29:48.493 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:29:48.495 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:29:48.497 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 13:29:48.499 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:29:48.500 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:29:48.500 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:29:48.503 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 13:29:48.504 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:29:48.504 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 13:29:48.504 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 13:29:48.504 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 13:29:48.505 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 13:29:48.506 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:29:48.507 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 13:29:48.507 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 13:29:48.507 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 13:29:48.509 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:29:48.510 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 13:29:48.510 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 13:29:48.510 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 13:29:48.510 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 13:29:48.510 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 13:29:48.510 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:29:48.510 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 13:29:48.511 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 13:29:48.511 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 13:29:48.511 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 13:29:48.511 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:29:48.511 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 13:29:48.511 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 13:29:48.512 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 13:29:48.512 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 13:29:48.512 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:29:48.513 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 13:29:48.513 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 13:29:48.513 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 13:29:48.513 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 13:29:48.514 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 13:29:48.514 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:29:48.518 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 13:29:48.520 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 13:29:48.520 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 13:29:48.520 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 13:29:48.520 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 13:29:48.520 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 13:29:48.520 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 13:29:48.520 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 13:29:48.520 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 13:29:48.521 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 13:29:48.526 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 13:29:48.527 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 13:29:48.527 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:29:48.529 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 13:29:48.530 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 13:29:48.531 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 13:29:48.532 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:29:48.532 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:29:48.536 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:29:48.580 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 13:29:48.581 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 13:29:48.581 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 13:29:48.582 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 13:29:48.582 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 13:29:48.582 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 13:29:48.582 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 13:29:48.582 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 13:29:48.582 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 13:29:48.582 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 13:29:48.582 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 13:29:48.582 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 13:29:48.582 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 13:29:48.582 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 13:29:48.582 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 13:29:48.583 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 13:29:48.583 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 13:29:48.583 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 13:29:48.583 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 13:29:48.583 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 13:29:48.583 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 13:29:48.583 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 13:29:48.583 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 13:29:48.583 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 13:29:48.583 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 13:29:48.584 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 13:29:48.584 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 13:29:48.584 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 13:29:48.584 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 13:29:48.584 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 13:29:48.584 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 13:29:48.584 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 13:29:48.584 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 13:29:48.584 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 13:29:48.584 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 13:29:48.585 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 13:29:48.585 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 13:29:48.585 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 13:29:48.585 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 13:29:48.658 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 13:29:48.685 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 13:29:48.685 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.RecipeDaoTest,testFindByProperty, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5232e3f1, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 13:29:48.707 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 13:29:48.708 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 13:29:48.709 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 13:29:48.709 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3382cf68] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7da635c0]
[DEBUG] 2019-10-02 13:29:48.778 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 13:29:48.778 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:29:48.805 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 13:29:48.806 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:29:49.150 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 13:29:49.150 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:29:49.150 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 13:29:49.150 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:29:49.199 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:29:49.199 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 13:29:49.199 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 13:29:49.199 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 13:29:49.199 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 13:29:49.204 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:29:49.204 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 13:29:49.204 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 13:29:49.204 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 13:29:49.204 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 13:29:49.204 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 13:29:49.204 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:29:49.234 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9a9aa68]
[DEBUG] 2019-10-02 13:29:49.235 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 13:29:49.236 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 13:29:49.236 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 13:29:49.236 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 13:29:49.242 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45d4421d]
[DEBUG] 2019-10-02 13:29:49.245 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a9b41a0]
[DEBUG] 2019-10-02 13:29:49.247 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 13:29:49.247 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 13:29:49.247 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 13:29:49.247 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 13:29:49.247 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 13:29:49.248 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 13:29:49.248 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:29:49.265 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:29:49.273 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 13:29:49.276 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:29:49.276 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ace6346]
[DEBUG] 2019-10-02 13:29:49.276 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 13:29:49.276 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 13:29:49.276 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 13:29:49.276 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 13:29:49.276 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17216605]
[DEBUG] 2019-10-02 13:29:49.277 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10a907ec]
[DEBUG] 2019-10-02 13:29:49.277 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 13:29:49.277 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 13:29:49.277 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 13:29:49.277 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 13:29:49.277 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 13:29:49.277 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 13:29:49.277 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:29:49.277 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:29:49.278 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 13:29:49.278 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:29:49.294 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:29:49.295 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:29:49.295 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:29:49.295 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 13:29:49.295 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 13:29:49.295 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 13:29:49.295 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 13:29:49.295 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 13:29:49.295 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:29:49.296 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@200d1a3d]
[DEBUG] 2019-10-02 13:29:49.296 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:29:49.296 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:29:49.296 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:29:49.296 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:29:49.296 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12567179]
[DEBUG] 2019-10-02 13:29:49.298 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 13:29:49.298 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 13:29:49.298 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 13:29:49.298 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 13:29:49.298 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 13:29:49.298 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 13:29:49.298 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:29:49.298 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:29:49.299 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 13:29:49.299 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:29:49.299 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@402b4f81]
[DEBUG] 2019-10-02 13:29:49.299 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:29:49.299 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:29:49.299 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:29:49.299 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:29:49.300 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23b1aa9]
[DEBUG] 2019-10-02 13:29:49.300 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 13:29:49.300 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 13:29:49.300 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 13:29:49.300 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 13:29:49.300 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 13:29:49.300 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 13:29:49.300 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:29:49.300 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:29:49.301 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 13:29:49.301 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:29:49.301 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 13:29:49.301 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 13:29:49.308 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a21c74]
[DEBUG] 2019-10-02 13:29:49.308 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b8a144e]
[DEBUG] 2019-10-02 13:29:49.308 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:29:49.308 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:29:49.309 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:29:49.309 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:29:49.309 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 13:29:49.309 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:29:49.312 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:29:49.313 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 13:29:49.313 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 13:29:49.355 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 13:29:49.356 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 13:29:49.356 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 13:29:49.364 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 13:29:49.364 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 13:29:49.366 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 13:29:49.366 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 13:29:49.368 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@19d53ab4
[DEBUG] 2019-10-02 13:29:49.370 [main] SessionFactoryRegistry - Registering SessionFactory: 8ccb25d5-cc89-4a70-8e59-cde6a72541e2 (<unnamed>)
[DEBUG] 2019-10-02 13:29:49.370 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 13:29:49.471 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 13:29:49.520 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2019-10-02 13:29:49.542 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@46ab4efc
[DEBUG] 2019-10-02 13:29:49.580 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2019-10-02 13:29:49.590 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 13:29:49.605 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'alexmalotky'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Recipe'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-10-02 13:29:49.645 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-02 13:29:49.669 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.Recipe (generatedAlias0) -> recipe0_
[DEBUG] 2019-10-02 13:29:49.670 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 13:29:49.675 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 13:29:49.677 [main] DotNode - getDataType() : name -> org.hibernate.type.StringType@25d2f66
[DEBUG] 2019-10-02 13:29:49.678 [main] FromReferenceNode - Resolved : generatedAlias0.name -> recipe0_.name
[DEBUG] 2019-10-02 13:29:49.681 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-02 13:29:49.682 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipe0_.id ) ( FromClause{level=1} recipes recipe0_ ) ( where ( = ( recipe0_.name recipe0_.id name ) ? ) ) )
[DEBUG] 2019-10-02 13:29:49.696 [main] JoinProcessor - Using FROM fragment [recipes recipe0_]
[DEBUG] 2019-10-02 13:29:49.696 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-02 13:29:49.697 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipe0_.id as id1_0_' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipe0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'recipes recipe0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=recipes,tableAlias=recipe0_,origin=null,columns={,className=com.alexmalotky.entity.Recipe}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'recipe0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=recipe0_,className=com.alexmalotky.entity.Recipe,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'recipe0_.id' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@25d2f66}

[DEBUG] 2019-10-02 13:29:49.698 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 13:29:49.706 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2019-10-02 13:29:49.707 [main] QueryTranslatorImpl - SQL: select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_ where recipe0_.name=?
[DEBUG] 2019-10-02 13:29:49.707 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 13:29:49.737 [main] SQL - select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_ where recipe0_.name=?
[DEBUG] 2019-10-02 13:29:49.775 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:30:48.490 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 13:30:48.494 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 13:30:48.501 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 13:30:48.645 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 13:30:48.648 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 13:30:49.056 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 13:30:49.058 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 13:30:49.068 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 13:30:49.579 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 13:30:49.616 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 13:30:49.617 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 13:30:49.648 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 13:30:49.697 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1000d54d
[DEBUG] 2019-10-02 13:30:49.697 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1000d54d
[DEBUG] 2019-10-02 13:30:49.697 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1000d54d
[DEBUG] 2019-10-02 13:30:49.700 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@63b3ee82
[DEBUG] 2019-10-02 13:30:49.701 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@a0db585
[DEBUG] 2019-10-02 13:30:49.702 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1894593a
[DEBUG] 2019-10-02 13:30:49.703 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@50756c76
[DEBUG] 2019-10-02 13:30:49.703 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@50756c76
[DEBUG] 2019-10-02 13:30:49.703 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@50756c76
[DEBUG] 2019-10-02 13:30:49.705 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@52169758
[DEBUG] 2019-10-02 13:30:49.705 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@52169758
[DEBUG] 2019-10-02 13:30:49.705 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52169758
[DEBUG] 2019-10-02 13:30:49.707 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@10dc7d6
[DEBUG] 2019-10-02 13:30:49.707 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@10dc7d6
[DEBUG] 2019-10-02 13:30:49.707 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10dc7d6
[DEBUG] 2019-10-02 13:30:49.709 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@35eb4a3b
[DEBUG] 2019-10-02 13:30:49.710 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@35eb4a3b
[DEBUG] 2019-10-02 13:30:49.710 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35eb4a3b
[DEBUG] 2019-10-02 13:30:49.712 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3a22bad6
[DEBUG] 2019-10-02 13:30:49.712 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3a22bad6
[DEBUG] 2019-10-02 13:30:49.712 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3a22bad6
[DEBUG] 2019-10-02 13:30:49.713 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@71d9cb05
[DEBUG] 2019-10-02 13:30:49.713 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@71d9cb05
[DEBUG] 2019-10-02 13:30:49.713 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71d9cb05
[DEBUG] 2019-10-02 13:30:49.715 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@38792286
[DEBUG] 2019-10-02 13:30:49.715 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@38792286
[DEBUG] 2019-10-02 13:30:49.715 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@38792286
[DEBUG] 2019-10-02 13:30:49.717 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5a237731
[DEBUG] 2019-10-02 13:30:49.717 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5a237731
[DEBUG] 2019-10-02 13:30:49.718 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@28cb3a25
[DEBUG] 2019-10-02 13:30:49.719 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@28cb3a25
[DEBUG] 2019-10-02 13:30:49.720 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@25d2f66
[DEBUG] 2019-10-02 13:30:49.721 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@25d2f66
[DEBUG] 2019-10-02 13:30:49.721 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@49ede9c7
[DEBUG] 2019-10-02 13:30:49.722 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3f725306
[DEBUG] 2019-10-02 13:30:49.724 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@496a31da
[DEBUG] 2019-10-02 13:30:49.724 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@496a31da
[DEBUG] 2019-10-02 13:30:49.726 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2e6f610d
[DEBUG] 2019-10-02 13:30:49.726 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2e6f610d
[DEBUG] 2019-10-02 13:30:49.743 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@14fa92af
[DEBUG] 2019-10-02 13:30:49.744 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@14fa92af
[DEBUG] 2019-10-02 13:30:49.747 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@360bc645
[DEBUG] 2019-10-02 13:30:49.748 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@360bc645
[DEBUG] 2019-10-02 13:30:49.750 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2a331b46
[DEBUG] 2019-10-02 13:30:49.750 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2a331b46
[DEBUG] 2019-10-02 13:30:49.752 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@304d0259
[DEBUG] 2019-10-02 13:30:49.753 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@304d0259
[DEBUG] 2019-10-02 13:30:49.755 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7915bca3
[DEBUG] 2019-10-02 13:30:49.755 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7915bca3
[DEBUG] 2019-10-02 13:30:49.758 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@eca6a74
[DEBUG] 2019-10-02 13:30:49.758 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@eca6a74
[DEBUG] 2019-10-02 13:30:49.762 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@124ac145
[DEBUG] 2019-10-02 13:30:49.763 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@124ac145
[DEBUG] 2019-10-02 13:30:49.765 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@36a6bea6
[DEBUG] 2019-10-02 13:30:49.766 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@36a6bea6
[DEBUG] 2019-10-02 13:30:49.767 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@7903d448
[DEBUG] 2019-10-02 13:30:49.768 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7903d448
[DEBUG] 2019-10-02 13:30:49.771 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@336206d8
[DEBUG] 2019-10-02 13:30:49.771 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@336206d8
[DEBUG] 2019-10-02 13:30:49.771 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@336206d8
[DEBUG] 2019-10-02 13:30:49.773 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@858d8b4
[DEBUG] 2019-10-02 13:30:49.775 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@26844abb
[DEBUG] 2019-10-02 13:30:49.776 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@26844abb
[DEBUG] 2019-10-02 13:30:49.776 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@26844abb
[DEBUG] 2019-10-02 13:30:49.778 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6c008c24
[DEBUG] 2019-10-02 13:30:49.780 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@472a11ae
[DEBUG] 2019-10-02 13:30:49.781 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@472a11ae
[DEBUG] 2019-10-02 13:30:49.783 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1ac4ccad
[DEBUG] 2019-10-02 13:30:49.784 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1ac4ccad
[DEBUG] 2019-10-02 13:30:49.785 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4b6d92e
[DEBUG] 2019-10-02 13:30:49.786 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4b6d92e
[DEBUG] 2019-10-02 13:30:49.787 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@13d9261f
[DEBUG] 2019-10-02 13:30:49.788 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@13d9261f
[DEBUG] 2019-10-02 13:30:49.789 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25d93198
[DEBUG] 2019-10-02 13:30:49.790 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25d93198
[DEBUG] 2019-10-02 13:30:49.791 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4c777e7b
[DEBUG] 2019-10-02 13:30:49.794 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1deceb67
[DEBUG] 2019-10-02 13:30:49.794 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1deceb67
[DEBUG] 2019-10-02 13:30:49.794 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1deceb67
[DEBUG] 2019-10-02 13:30:49.797 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5d5c04f9
[DEBUG] 2019-10-02 13:30:49.797 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5d5c04f9
[DEBUG] 2019-10-02 13:30:49.797 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5d5c04f9
[DEBUG] 2019-10-02 13:30:49.800 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6724cdec
[DEBUG] 2019-10-02 13:30:49.801 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1a4d1ab7
[DEBUG] 2019-10-02 13:30:49.802 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2a3194c6
[DEBUG] 2019-10-02 13:30:49.802 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2a3194c6
[DEBUG] 2019-10-02 13:30:49.802 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2a3194c6
[DEBUG] 2019-10-02 13:30:49.804 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e469dfd
[DEBUG] 2019-10-02 13:30:49.805 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e469dfd
[DEBUG] 2019-10-02 13:30:49.805 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e469dfd
[DEBUG] 2019-10-02 13:30:49.805 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5b9396d3
[DEBUG] 2019-10-02 13:30:49.806 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5e65afb6
[DEBUG] 2019-10-02 13:30:49.810 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6eb17ec8
[DEBUG] 2019-10-02 13:30:49.810 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6eb17ec8
[DEBUG] 2019-10-02 13:30:49.811 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6a094db2
[DEBUG] 2019-10-02 13:30:49.813 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@48528634
[DEBUG] 2019-10-02 13:30:49.813 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@48528634
[DEBUG] 2019-10-02 13:30:49.816 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7add323c
[DEBUG] 2019-10-02 13:30:49.816 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7add323c
[DEBUG] 2019-10-02 13:30:49.817 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@35c12c7a
[DEBUG] 2019-10-02 13:30:49.818 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4ac86d6a
[DEBUG] 2019-10-02 13:30:49.820 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5d43409a
[DEBUG] 2019-10-02 13:30:49.828 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@433348bc
[DEBUG] 2019-10-02 13:30:49.828 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@433348bc
[DEBUG] 2019-10-02 13:30:49.829 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@26dc9bd5
[DEBUG] 2019-10-02 13:30:49.829 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@252dc8c4
[DEBUG] 2019-10-02 13:30:49.829 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@43045f9f
[DEBUG] 2019-10-02 13:30:49.830 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2643d762
[DEBUG] 2019-10-02 13:30:49.830 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6403e24c
[DEBUG] 2019-10-02 13:30:49.830 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f236de0
[DEBUG] 2019-10-02 13:30:49.831 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4eba373c
[DEBUG] 2019-10-02 13:30:49.831 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@767a014e
[DEBUG] 2019-10-02 13:30:49.930 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 13:30:49.932 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 13:30:49.934 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 13:30:49.934 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 13:30:49.935 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 13:30:49.937 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 13:30:49.938 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 13:30:49.941 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 13:30:49.943 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 13:30:49.944 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 13:30:49.945 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 13:30:49.945 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 13:30:49.946 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 13:30:49.947 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 13:30:49.961 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 13:30:49.961 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 13:30:49.961 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 13:30:50.312 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 13:30:50.596 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 13:30:50.596 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 13:30:50.596 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 13:30:50.640 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 13:30:50.672 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 13:30:50.715 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 13:30:50.829 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 13:30:50.838 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3382cf68] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2f74900b]
[DEBUG] 2019-10-02 13:30:50.928 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:30:50.968 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 13:30:50.977 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 13:30:50.982 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 13:30:51.018 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:30:51.023 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 13:30:51.026 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 13:30:51.029 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 13:30:51.032 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 13:30:51.038 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 13:30:51.039 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:30:51.040 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 13:30:51.040 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 13:30:51.040 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 13:30:51.040 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 13:30:51.041 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:30:51.041 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 13:30:51.041 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 13:30:51.041 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 13:30:51.042 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 13:30:51.042 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:30:51.042 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 13:30:51.042 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 13:30:51.042 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 13:30:51.043 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 13:30:51.045 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:30:51.046 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:30:51.051 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:30:51.066 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:30:51.066 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:30:51.068 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 13:30:51.070 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:30:51.070 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:30:51.072 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:30:51.077 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 13:30:51.078 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:30:51.078 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 13:30:51.078 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 13:30:51.078 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 13:30:51.078 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 13:30:51.081 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:30:51.082 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 13:30:51.082 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 13:30:51.082 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 13:30:51.085 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:30:51.085 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 13:30:51.085 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 13:30:51.085 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 13:30:51.086 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 13:30:51.086 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 13:30:51.086 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:30:51.086 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 13:30:51.086 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 13:30:51.086 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 13:30:51.086 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 13:30:51.087 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:30:51.087 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 13:30:51.087 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 13:30:51.087 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 13:30:51.087 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 13:30:51.088 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:30:51.088 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 13:30:51.088 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 13:30:51.088 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 13:30:51.088 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 13:30:51.088 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 13:30:51.088 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:30:51.091 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 13:30:51.093 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 13:30:51.093 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 13:30:51.093 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 13:30:51.093 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 13:30:51.093 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 13:30:51.093 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 13:30:51.093 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 13:30:51.093 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 13:30:51.094 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 13:30:51.100 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 13:30:51.100 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 13:30:51.100 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:30:51.101 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 13:30:51.102 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 13:30:51.103 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 13:30:51.103 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:30:51.104 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:30:51.107 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:30:51.157 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 13:30:51.159 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 13:30:51.159 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 13:30:51.159 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 13:30:51.159 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 13:30:51.159 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 13:30:51.160 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 13:30:51.160 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 13:30:51.160 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 13:30:51.160 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 13:30:51.160 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 13:30:51.160 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 13:30:51.160 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 13:30:51.160 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 13:30:51.160 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 13:30:51.160 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 13:30:51.160 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 13:30:51.160 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 13:30:51.160 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 13:30:51.160 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 13:30:51.161 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 13:30:51.161 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 13:30:51.161 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 13:30:51.161 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 13:30:51.161 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 13:30:51.161 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 13:30:51.161 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 13:30:51.161 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 13:30:51.161 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 13:30:51.161 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 13:30:51.161 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 13:30:51.161 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 13:30:51.161 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 13:30:51.162 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 13:30:51.162 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 13:30:51.162 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 13:30:51.162 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 13:30:51.162 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 13:30:51.162 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 13:30:51.235 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 13:30:51.261 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 13:30:51.262 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.RecipeDaoTest,testFindByProperty, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5232e3f1, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 13:30:51.287 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 13:30:51.287 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 13:30:51.288 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 13:30:51.288 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3382cf68] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7da635c0]
[DEBUG] 2019-10-02 13:30:51.370 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 13:30:51.370 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:30:51.396 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 13:30:51.396 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:30:51.716 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 13:30:51.716 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:30:51.717 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 13:30:51.717 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:30:51.764 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:30:51.764 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 13:30:51.764 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 13:30:51.764 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 13:30:51.764 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 13:30:51.771 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:30:51.771 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 13:30:51.771 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 13:30:51.771 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 13:30:51.771 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 13:30:51.771 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 13:30:51.771 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:30:51.811 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9a9aa68]
[DEBUG] 2019-10-02 13:30:51.813 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 13:30:51.813 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 13:30:51.813 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 13:30:51.813 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 13:30:51.821 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45d4421d]
[DEBUG] 2019-10-02 13:30:51.824 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a9b41a0]
[DEBUG] 2019-10-02 13:30:51.827 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 13:30:51.827 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 13:30:51.827 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 13:30:51.827 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 13:30:51.827 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 13:30:51.828 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 13:30:51.828 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:30:51.846 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:30:51.855 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 13:30:51.858 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:30:51.858 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ace6346]
[DEBUG] 2019-10-02 13:30:51.858 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 13:30:51.858 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 13:30:51.858 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 13:30:51.858 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 13:30:51.859 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17216605]
[DEBUG] 2019-10-02 13:30:51.859 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10a907ec]
[DEBUG] 2019-10-02 13:30:51.859 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 13:30:51.859 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 13:30:51.859 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 13:30:51.859 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 13:30:51.859 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 13:30:51.859 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 13:30:51.859 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:30:51.859 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:30:51.860 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 13:30:51.860 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:30:51.878 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:30:51.879 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:30:51.879 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:30:51.879 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 13:30:51.879 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 13:30:51.879 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 13:30:51.879 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 13:30:51.879 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 13:30:51.879 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:30:51.880 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@200d1a3d]
[DEBUG] 2019-10-02 13:30:51.880 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:30:51.880 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:30:51.880 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:30:51.880 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:30:51.880 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12567179]
[DEBUG] 2019-10-02 13:30:51.881 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 13:30:51.881 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 13:30:51.881 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 13:30:51.881 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 13:30:51.881 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 13:30:51.881 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 13:30:51.881 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:30:51.882 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:30:51.884 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 13:30:51.884 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:30:51.885 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@402b4f81]
[DEBUG] 2019-10-02 13:30:51.885 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:30:51.886 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:30:51.886 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:30:51.886 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:30:51.886 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23b1aa9]
[DEBUG] 2019-10-02 13:30:51.886 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 13:30:51.886 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 13:30:51.886 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 13:30:51.886 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 13:30:51.886 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 13:30:51.887 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 13:30:51.887 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:30:51.887 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:30:51.888 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 13:30:51.888 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:30:51.888 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 13:30:51.889 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 13:30:51.895 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a21c74]
[DEBUG] 2019-10-02 13:30:51.895 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b8a144e]
[DEBUG] 2019-10-02 13:30:51.895 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:30:51.895 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:30:51.895 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:30:51.895 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:30:51.895 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 13:30:51.896 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:30:51.899 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:30:51.899 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 13:30:51.900 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 13:30:51.945 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 13:30:51.945 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 13:30:51.946 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 13:30:51.957 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 13:30:51.957 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 13:30:51.959 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 13:30:51.959 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 13:30:51.962 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@19d53ab4
[DEBUG] 2019-10-02 13:30:51.964 [main] SessionFactoryRegistry - Registering SessionFactory: 1801b3ff-076c-4297-ad72-a14a6bf2421c (<unnamed>)
[DEBUG] 2019-10-02 13:30:51.964 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 13:30:52.092 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 13:30:52.144 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2019-10-02 13:30:52.170 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@46ab4efc
[DEBUG] 2019-10-02 13:30:52.207 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2019-10-02 13:30:52.216 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 13:30:52.227 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'alexmalotky'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Recipe'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-10-02 13:30:52.263 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-02 13:30:52.290 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.Recipe (generatedAlias0) -> recipe0_
[DEBUG] 2019-10-02 13:30:52.291 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 13:30:52.295 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 13:30:52.296 [main] DotNode - getDataType() : name -> org.hibernate.type.StringType@25d2f66
[DEBUG] 2019-10-02 13:30:52.297 [main] FromReferenceNode - Resolved : generatedAlias0.name -> recipe0_.name
[DEBUG] 2019-10-02 13:30:52.299 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-02 13:30:52.301 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipe0_.id ) ( FromClause{level=1} recipes recipe0_ ) ( where ( = ( recipe0_.name recipe0_.id name ) ? ) ) )
[DEBUG] 2019-10-02 13:30:52.313 [main] JoinProcessor - Using FROM fragment [recipes recipe0_]
[DEBUG] 2019-10-02 13:30:52.313 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-02 13:30:52.314 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipe0_.id as id1_0_' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipe0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'recipes recipe0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=recipes,tableAlias=recipe0_,origin=null,columns={,className=com.alexmalotky.entity.Recipe}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'recipe0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=recipe0_,className=com.alexmalotky.entity.Recipe,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'recipe0_.id' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@25d2f66}

[DEBUG] 2019-10-02 13:30:52.314 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 13:30:52.324 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2019-10-02 13:30:52.324 [main] QueryTranslatorImpl - SQL: select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_ where recipe0_.name=?
[DEBUG] 2019-10-02 13:30:52.324 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 13:30:52.355 [main] SQL - select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_ where recipe0_.name=?
[DEBUG] 2019-10-02 13:30:52.388 [main] Loader - Result set row: 0
[DEBUG] 2019-10-02 13:30:52.393 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:30:52.407 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:30:52.408 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 13:30:52.409 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:30:52.409 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 13:30:52.409 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:30:52.409 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 13:30:52.409 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:30:52.410 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 13:30:52.410 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:30:52.418 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:30:52.426 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:30:52.427 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 13:30:52.429 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:30:52.442 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:30:52.442 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 13:30:52.443 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:30:52.443 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 13:30:52.443 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:30:52.443 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 13:30:52.443 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:30:52.443 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 13:30:52.443 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:30:52.443 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 13:30:52.443 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:30:52.445 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:30:52.446 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:30:52.449 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:30:52.449 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:30:52.450 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:30:52.451 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 13:30:52.451 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:30:52.456 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:35:56.269 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 13:35:56.272 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 13:35:56.279 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 13:35:56.394 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 13:35:56.397 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 13:35:56.693 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 13:35:56.694 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 13:35:56.703 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 13:35:57.114 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 13:35:57.145 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 13:35:57.146 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 13:35:57.173 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 13:35:57.223 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3f4f5330
[DEBUG] 2019-10-02 13:35:57.224 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3f4f5330
[DEBUG] 2019-10-02 13:35:57.224 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3f4f5330
[DEBUG] 2019-10-02 13:35:57.224 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2620e717
[DEBUG] 2019-10-02 13:35:57.225 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b34e38c
[DEBUG] 2019-10-02 13:35:57.226 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@14b0e127
[DEBUG] 2019-10-02 13:35:57.227 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@38aafb53
[DEBUG] 2019-10-02 13:35:57.227 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@38aafb53
[DEBUG] 2019-10-02 13:35:57.227 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@38aafb53
[DEBUG] 2019-10-02 13:35:57.229 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3eda0aeb
[DEBUG] 2019-10-02 13:35:57.229 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3eda0aeb
[DEBUG] 2019-10-02 13:35:57.229 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3eda0aeb
[DEBUG] 2019-10-02 13:35:57.230 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4f668f29
[DEBUG] 2019-10-02 13:35:57.231 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4f668f29
[DEBUG] 2019-10-02 13:35:57.231 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4f668f29
[DEBUG] 2019-10-02 13:35:57.232 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@64b3b1ce
[DEBUG] 2019-10-02 13:35:57.232 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@64b3b1ce
[DEBUG] 2019-10-02 13:35:57.233 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@64b3b1ce
[DEBUG] 2019-10-02 13:35:57.234 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@56afdf9a
[DEBUG] 2019-10-02 13:35:57.235 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@56afdf9a
[DEBUG] 2019-10-02 13:35:57.235 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@56afdf9a
[DEBUG] 2019-10-02 13:35:57.236 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@17c2d509
[DEBUG] 2019-10-02 13:35:57.236 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@17c2d509
[DEBUG] 2019-10-02 13:35:57.236 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@17c2d509
[DEBUG] 2019-10-02 13:35:57.237 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@34d4860f
[DEBUG] 2019-10-02 13:35:57.238 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@34d4860f
[DEBUG] 2019-10-02 13:35:57.238 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@34d4860f
[DEBUG] 2019-10-02 13:35:57.239 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7d2998d8
[DEBUG] 2019-10-02 13:35:57.239 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7d2998d8
[DEBUG] 2019-10-02 13:35:57.240 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5555ffcf
[DEBUG] 2019-10-02 13:35:57.240 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5555ffcf
[DEBUG] 2019-10-02 13:35:57.242 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5a2fa51f
[DEBUG] 2019-10-02 13:35:57.242 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5a2fa51f
[DEBUG] 2019-10-02 13:35:57.243 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6ecdbab8
[DEBUG] 2019-10-02 13:35:57.243 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3c69362a
[DEBUG] 2019-10-02 13:35:57.245 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7c251f90
[DEBUG] 2019-10-02 13:35:57.245 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c251f90
[DEBUG] 2019-10-02 13:35:57.247 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1e86a5a7
[DEBUG] 2019-10-02 13:35:57.247 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1e86a5a7
[DEBUG] 2019-10-02 13:35:57.259 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@b16e202
[DEBUG] 2019-10-02 13:35:57.260 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@b16e202
[DEBUG] 2019-10-02 13:35:57.262 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4edef76c
[DEBUG] 2019-10-02 13:35:57.263 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4edef76c
[DEBUG] 2019-10-02 13:35:57.266 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@15383681
[DEBUG] 2019-10-02 13:35:57.266 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@15383681
[DEBUG] 2019-10-02 13:35:57.268 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1d23ff23
[DEBUG] 2019-10-02 13:35:57.268 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1d23ff23
[DEBUG] 2019-10-02 13:35:57.270 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@68d651f2
[DEBUG] 2019-10-02 13:35:57.270 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@68d651f2
[DEBUG] 2019-10-02 13:35:57.272 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@79fd6f95
[DEBUG] 2019-10-02 13:35:57.273 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@79fd6f95
[DEBUG] 2019-10-02 13:35:57.276 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2def7a7a
[DEBUG] 2019-10-02 13:35:57.276 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2def7a7a
[DEBUG] 2019-10-02 13:35:57.278 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@44e93c1f
[DEBUG] 2019-10-02 13:35:57.279 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@44e93c1f
[DEBUG] 2019-10-02 13:35:57.280 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4e08acf9
[DEBUG] 2019-10-02 13:35:57.281 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4e08acf9
[DEBUG] 2019-10-02 13:35:57.282 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ec4ff02
[DEBUG] 2019-10-02 13:35:57.283 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ec4ff02
[DEBUG] 2019-10-02 13:35:57.283 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ec4ff02
[DEBUG] 2019-10-02 13:35:57.285 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@711d1a52
[DEBUG] 2019-10-02 13:35:57.287 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1a865273
[DEBUG] 2019-10-02 13:35:57.287 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1a865273
[DEBUG] 2019-10-02 13:35:57.288 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1a865273
[DEBUG] 2019-10-02 13:35:57.289 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@216e0771
[DEBUG] 2019-10-02 13:35:57.290 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@dc79225
[DEBUG] 2019-10-02 13:35:57.291 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@dc79225
[DEBUG] 2019-10-02 13:35:57.292 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@fd9ebde
[DEBUG] 2019-10-02 13:35:57.293 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@fd9ebde
[DEBUG] 2019-10-02 13:35:57.294 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@33899f7a
[DEBUG] 2019-10-02 13:35:57.294 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@33899f7a
[DEBUG] 2019-10-02 13:35:57.295 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@e9ef5b6
[DEBUG] 2019-10-02 13:35:57.296 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@e9ef5b6
[DEBUG] 2019-10-02 13:35:57.298 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2436ea2f
[DEBUG] 2019-10-02 13:35:57.298 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2436ea2f
[DEBUG] 2019-10-02 13:35:57.299 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5f038248
[DEBUG] 2019-10-02 13:35:57.301 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@582a764a
[DEBUG] 2019-10-02 13:35:57.301 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@582a764a
[DEBUG] 2019-10-02 13:35:57.301 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@582a764a
[DEBUG] 2019-10-02 13:35:57.303 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6f49d153
[DEBUG] 2019-10-02 13:35:57.303 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6f49d153
[DEBUG] 2019-10-02 13:35:57.304 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6f49d153
[DEBUG] 2019-10-02 13:35:57.306 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6944e53e
[DEBUG] 2019-10-02 13:35:57.307 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@546e61d5
[DEBUG] 2019-10-02 13:35:57.309 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2819c460
[DEBUG] 2019-10-02 13:35:57.310 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2819c460
[DEBUG] 2019-10-02 13:35:57.310 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2819c460
[DEBUG] 2019-10-02 13:35:57.312 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@554f0dfb
[DEBUG] 2019-10-02 13:35:57.313 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@554f0dfb
[DEBUG] 2019-10-02 13:35:57.313 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@554f0dfb
[DEBUG] 2019-10-02 13:35:57.314 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@761e788f
[DEBUG] 2019-10-02 13:35:57.315 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5b3a7ef5
[DEBUG] 2019-10-02 13:35:57.318 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@730f9695
[DEBUG] 2019-10-02 13:35:57.319 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@730f9695
[DEBUG] 2019-10-02 13:35:57.319 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@65bdd558
[DEBUG] 2019-10-02 13:35:57.322 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5e1d03d7
[DEBUG] 2019-10-02 13:35:57.322 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5e1d03d7
[DEBUG] 2019-10-02 13:35:57.325 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4a734c04
[DEBUG] 2019-10-02 13:35:57.326 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4a734c04
[DEBUG] 2019-10-02 13:35:57.327 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@658255aa
[DEBUG] 2019-10-02 13:35:57.328 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3d904e9c
[DEBUG] 2019-10-02 13:35:57.331 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@38d17d80
[DEBUG] 2019-10-02 13:35:57.339 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6d1dcdff
[DEBUG] 2019-10-02 13:35:57.340 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6d1dcdff
[DEBUG] 2019-10-02 13:35:57.341 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@252dc8c4
[DEBUG] 2019-10-02 13:35:57.341 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@43045f9f
[DEBUG] 2019-10-02 13:35:57.341 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2643d762
[DEBUG] 2019-10-02 13:35:57.341 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6403e24c
[DEBUG] 2019-10-02 13:35:57.342 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2f236de0
[DEBUG] 2019-10-02 13:35:57.342 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4eba373c
[DEBUG] 2019-10-02 13:35:57.342 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@767a014e
[DEBUG] 2019-10-02 13:35:57.342 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d109c4f
[DEBUG] 2019-10-02 13:35:57.425 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 13:35:57.426 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 13:35:57.428 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 13:35:57.428 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 13:35:57.429 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 13:35:57.431 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 13:35:57.432 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 13:35:57.435 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 13:35:57.436 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 13:35:57.438 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 13:35:57.438 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 13:35:57.439 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 13:35:57.439 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 13:35:57.440 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 13:35:57.448 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 13:35:57.449 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 13:35:57.449 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 13:35:57.705 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 13:35:57.956 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 13:35:57.957 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 13:35:57.958 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 13:35:58.008 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 13:35:58.040 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 13:35:58.077 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 13:35:58.168 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 13:35:58.176 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2f74900b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6d8796c1]
[DEBUG] 2019-10-02 13:35:58.283 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:35:58.323 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 13:35:58.333 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 13:35:58.339 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 13:35:58.376 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:35:58.380 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 13:35:58.382 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 13:35:58.385 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 13:35:58.388 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 13:35:58.392 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 13:35:58.394 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:35:58.394 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 13:35:58.395 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 13:35:58.395 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 13:35:58.395 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 13:35:58.395 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:35:58.395 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 13:35:58.395 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 13:35:58.396 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 13:35:58.396 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 13:35:58.396 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:35:58.396 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 13:35:58.396 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 13:35:58.396 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 13:35:58.396 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 13:35:58.398 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:35:58.398 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:35:58.401 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:35:58.413 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:35:58.414 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:35:58.415 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 13:35:58.417 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:35:58.417 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:35:58.418 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:35:58.422 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 13:35:58.422 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:35:58.422 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 13:35:58.423 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 13:35:58.423 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 13:35:58.423 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 13:35:58.424 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:35:58.425 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 13:35:58.425 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 13:35:58.425 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 13:35:58.429 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:35:58.429 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 13:35:58.429 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 13:35:58.429 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 13:35:58.429 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 13:35:58.430 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 13:35:58.430 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:35:58.430 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 13:35:58.430 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 13:35:58.430 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 13:35:58.430 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 13:35:58.430 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:35:58.430 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 13:35:58.430 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 13:35:58.431 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 13:35:58.431 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 13:35:58.431 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:35:58.431 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 13:35:58.431 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 13:35:58.431 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 13:35:58.431 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 13:35:58.431 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 13:35:58.431 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:35:58.434 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 13:35:58.437 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 13:35:58.437 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 13:35:58.438 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 13:35:58.438 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 13:35:58.438 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 13:35:58.438 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 13:35:58.438 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 13:35:58.438 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 13:35:58.438 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 13:35:58.444 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 13:35:58.445 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 13:35:58.445 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:35:58.446 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 13:35:58.446 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 13:35:58.447 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 13:35:58.448 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:35:58.448 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:35:58.452 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:35:58.496 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 13:35:58.497 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 13:35:58.497 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 13:35:58.498 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 13:35:58.498 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 13:35:58.498 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 13:35:58.498 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 13:35:58.498 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 13:35:58.498 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 13:35:58.498 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 13:35:58.498 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 13:35:58.498 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 13:35:58.498 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 13:35:58.498 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 13:35:58.498 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 13:35:58.498 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 13:35:58.498 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 13:35:58.499 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 13:35:58.499 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 13:35:58.499 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 13:35:58.499 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 13:35:58.499 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 13:35:58.499 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 13:35:58.499 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 13:35:58.499 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 13:35:58.499 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 13:35:58.499 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 13:35:58.499 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 13:35:58.499 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 13:35:58.499 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 13:35:58.500 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 13:35:58.500 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 13:35:58.500 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 13:35:58.500 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 13:35:58.500 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 13:35:58.500 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 13:35:58.500 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 13:35:58.500 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 13:35:58.500 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 13:35:58.567 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 13:35:58.593 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 13:35:58.593 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.RecipeDaoTest,testFindByMultipleProerties, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6c8fe7a4, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 13:35:58.619 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 13:35:58.620 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 13:35:58.621 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 13:35:58.621 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2f74900b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2ed9f6f8]
[DEBUG] 2019-10-02 13:35:58.689 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 13:35:58.689 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:35:58.717 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 13:35:58.717 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:35:59.037 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 13:35:59.037 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:35:59.037 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 13:35:59.037 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:35:59.079 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:35:59.079 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 13:35:59.079 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 13:35:59.079 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 13:35:59.079 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 13:35:59.085 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:35:59.085 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 13:35:59.085 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 13:35:59.085 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 13:35:59.085 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 13:35:59.085 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 13:35:59.085 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:35:59.114 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a3883c4]
[DEBUG] 2019-10-02 13:35:59.116 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 13:35:59.116 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 13:35:59.116 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 13:35:59.116 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 13:35:59.122 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@782fd504]
[DEBUG] 2019-10-02 13:35:59.126 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fe46d52]
[DEBUG] 2019-10-02 13:35:59.128 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 13:35:59.128 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 13:35:59.128 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 13:35:59.128 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 13:35:59.128 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 13:35:59.129 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 13:35:59.129 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:35:59.145 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:35:59.153 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 13:35:59.156 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:35:59.156 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e48462d]
[DEBUG] 2019-10-02 13:35:59.156 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 13:35:59.156 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 13:35:59.156 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 13:35:59.156 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 13:35:59.156 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10a907ec]
[DEBUG] 2019-10-02 13:35:59.156 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59b492ec]
[DEBUG] 2019-10-02 13:35:59.157 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 13:35:59.157 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 13:35:59.157 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 13:35:59.157 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 13:35:59.157 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 13:35:59.157 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 13:35:59.157 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:35:59.157 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:35:59.158 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 13:35:59.158 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:35:59.175 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:35:59.175 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:35:59.176 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:35:59.176 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 13:35:59.176 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 13:35:59.176 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 13:35:59.176 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 13:35:59.176 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 13:35:59.176 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:35:59.176 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7de147e9]
[DEBUG] 2019-10-02 13:35:59.176 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:35:59.176 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:35:59.176 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:35:59.176 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:35:59.177 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37d699a1]
[DEBUG] 2019-10-02 13:35:59.177 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 13:35:59.177 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 13:35:59.177 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 13:35:59.177 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 13:35:59.178 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 13:35:59.178 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 13:35:59.178 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:35:59.178 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:35:59.179 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 13:35:59.179 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:35:59.179 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13ef7fa1]
[DEBUG] 2019-10-02 13:35:59.179 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:35:59.179 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:35:59.179 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:35:59.179 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:35:59.180 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54489296]
[DEBUG] 2019-10-02 13:35:59.180 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 13:35:59.180 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 13:35:59.180 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 13:35:59.180 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 13:35:59.180 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 13:35:59.180 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 13:35:59.180 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:35:59.180 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:35:59.181 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 13:35:59.181 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:35:59.182 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 13:35:59.182 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 13:35:59.189 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b8a144e]
[DEBUG] 2019-10-02 13:35:59.189 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fb8dc01]
[DEBUG] 2019-10-02 13:35:59.190 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:35:59.190 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:35:59.190 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:35:59.190 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:35:59.190 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 13:35:59.190 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:35:59.192 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:35:59.193 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 13:35:59.194 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 13:35:59.234 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 13:35:59.234 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 13:35:59.235 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 13:35:59.244 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 13:35:59.245 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 13:35:59.246 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 13:35:59.246 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 13:35:59.248 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@53cb0bcb
[DEBUG] 2019-10-02 13:35:59.251 [main] SessionFactoryRegistry - Registering SessionFactory: bc30b798-e442-42c6-822d-68690b6e2898 (<unnamed>)
[DEBUG] 2019-10-02 13:35:59.251 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 13:35:59.347 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 13:35:59.372 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:35:59.406 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:35:59.409 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 13:35:59.419 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:35:59.429 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:35:59.429 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 13:35:59.430 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:35:59.430 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 13:35:59.430 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:35:59.430 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 13:35:59.430 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:35:59.430 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 13:35:59.430 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:35:59.430 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 13:35:59.430 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:35:59.431 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:35:59.431 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:35:59.431 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 13:35:59.431 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:35:59.431 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 13:35:59.431 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:35:59.432 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 13:35:59.432 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:35:59.432 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 13:35:59.432 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:35:59.432 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:35:59.432 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:35:59.434 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:35:59.435 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:35:59.436 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:35:59.436 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 13:35:59.437 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:35:59.474 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-10-02 13:35:59.492 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@12f9f896
[DEBUG] 2019-10-02 13:35:59.525 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-10-02 13:35:59.534 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 13:35:59.544 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'alexmalotky'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Recipe'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'name'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'user'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

[DEBUG] 2019-10-02 13:35:59.576 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-02 13:35:59.599 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.Recipe (generatedAlias0) -> recipe0_
[DEBUG] 2019-10-02 13:35:59.601 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 13:35:59.606 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 13:35:59.609 [main] DotNode - getDataType() : name -> org.hibernate.type.StringType@5a2fa51f
[DEBUG] 2019-10-02 13:35:59.611 [main] FromReferenceNode - Resolved : generatedAlias0.name -> recipe0_.name
[DEBUG] 2019-10-02 13:35:59.614 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 13:35:59.615 [main] DotNode - getDataType() : user -> org.hibernate.type.ManyToOneType(com.alexmalotky.entity.User)
[DEBUG] 2019-10-02 13:35:59.615 [main] DotNode - dereferenceShortcut() : property user in com.alexmalotky.entity.Recipe does not require a join.
[DEBUG] 2019-10-02 13:35:59.615 [main] DotNode - Terminal getPropertyPath = [user]
[DEBUG] 2019-10-02 13:35:59.615 [main] FromReferenceNode - Resolved : generatedAlias0.user -> recipe0_.user_id
[DEBUG] 2019-10-02 13:35:59.615 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-02 13:35:59.615 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipe0_.id ) ( FromClause{level=1} recipes recipe0_ ) ( where ( and ( = ( recipe0_.name recipe0_.id name ) ? ) ( = ( recipe0_.user_id recipe0_.id user ) ? ) ) ) )
[DEBUG] 2019-10-02 13:35:59.631 [main] JoinProcessor - Using FROM fragment [recipes recipe0_]
[DEBUG] 2019-10-02 13:35:59.632 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-02 13:35:59.633 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipe0_.id as id1_0_' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipe0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'recipes recipe0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=recipes,tableAlias=recipe0_,origin=null,columns={,className=com.alexmalotky.entity.Recipe}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'recipe0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=recipe0_,className=com.alexmalotky.entity.Recipe,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'recipe0_.id' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@5a2fa51f}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'recipe0_.user_id' {propertyName=user,dereferenceType=UNKNOWN,getPropertyPath=user,path=generatedAlias0.user,tableAlias=recipe0_,className=com.alexmalotky.entity.Recipe,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'recipe0_.id' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
             |  \-[IDENT] IdentNode: 'user' {originalText=user}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.ManyToOneType(com.alexmalotky.entity.User)}

[DEBUG] 2019-10-02 13:35:59.633 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 13:35:59.643 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-10-02 13:35:59.643 [main] QueryTranslatorImpl - SQL: select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_ where recipe0_.name=? and recipe0_.user_id=?
[DEBUG] 2019-10-02 13:35:59.643 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 13:35:59.668 [main] SQL - select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_ where recipe0_.name=? and recipe0_.user_id=?
[DEBUG] 2019-10-02 13:35:59.675 [main] Loader - Result set row: 0
[DEBUG] 2019-10-02 13:35:59.676 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:35:59.676 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:35:59.677 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 13:35:59.677 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:35:59.677 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 13:35:59.677 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:35:59.677 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 13:35:59.677 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:35:59.677 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 13:35:59.677 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:35:59.677 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:35:59.679 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:35:59.680 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 13:35:59.680 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:35:59.681 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:35:59.681 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 13:35:59.681 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:35:59.681 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 13:35:59.681 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:35:59.681 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 13:35:59.681 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:35:59.681 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 13:35:59.682 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:35:59.682 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 13:35:59.682 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:35:59.682 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:35:59.682 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:35:59.682 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:35:59.682 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:35:59.682 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:35:59.683 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 13:35:59.683 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:35:59.686 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:36:17.819 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 13:36:17.822 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 13:36:17.829 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 13:36:17.949 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 13:36:17.953 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 13:36:18.246 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 13:36:18.247 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 13:36:18.258 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 13:36:18.728 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 13:36:18.765 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 13:36:18.766 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 13:36:18.805 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 13:36:18.864 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@24db6ce
[DEBUG] 2019-10-02 13:36:18.864 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@24db6ce
[DEBUG] 2019-10-02 13:36:18.864 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@24db6ce
[DEBUG] 2019-10-02 13:36:18.865 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2ba5aa7a
[DEBUG] 2019-10-02 13:36:18.866 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6c931d35
[DEBUG] 2019-10-02 13:36:18.867 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4beabeec
[DEBUG] 2019-10-02 13:36:18.868 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@31a3f4de
[DEBUG] 2019-10-02 13:36:18.868 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@31a3f4de
[DEBUG] 2019-10-02 13:36:18.868 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@31a3f4de
[DEBUG] 2019-10-02 13:36:18.870 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@14fa92af
[DEBUG] 2019-10-02 13:36:18.870 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@14fa92af
[DEBUG] 2019-10-02 13:36:18.870 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@14fa92af
[DEBUG] 2019-10-02 13:36:18.872 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@360bc645
[DEBUG] 2019-10-02 13:36:18.872 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@360bc645
[DEBUG] 2019-10-02 13:36:18.872 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@360bc645
[DEBUG] 2019-10-02 13:36:18.873 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2a331b46
[DEBUG] 2019-10-02 13:36:18.873 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2a331b46
[DEBUG] 2019-10-02 13:36:18.873 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2a331b46
[DEBUG] 2019-10-02 13:36:18.875 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@304d0259
[DEBUG] 2019-10-02 13:36:18.875 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@304d0259
[DEBUG] 2019-10-02 13:36:18.875 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@304d0259
[DEBUG] 2019-10-02 13:36:18.876 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7915bca3
[DEBUG] 2019-10-02 13:36:18.877 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7915bca3
[DEBUG] 2019-10-02 13:36:18.877 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7915bca3
[DEBUG] 2019-10-02 13:36:18.878 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@eca6a74
[DEBUG] 2019-10-02 13:36:18.878 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@eca6a74
[DEBUG] 2019-10-02 13:36:18.878 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@eca6a74
[DEBUG] 2019-10-02 13:36:18.879 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1442f788
[DEBUG] 2019-10-02 13:36:18.879 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1442f788
[DEBUG] 2019-10-02 13:36:18.881 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4f66ffc8
[DEBUG] 2019-10-02 13:36:18.881 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4f66ffc8
[DEBUG] 2019-10-02 13:36:18.883 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2b03d52f
[DEBUG] 2019-10-02 13:36:18.883 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2b03d52f
[DEBUG] 2019-10-02 13:36:18.884 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@397ef2
[DEBUG] 2019-10-02 13:36:18.884 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@9b21bd3
[DEBUG] 2019-10-02 13:36:18.886 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@42ea287
[DEBUG] 2019-10-02 13:36:18.886 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@42ea287
[DEBUG] 2019-10-02 13:36:18.887 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5ec4ff02
[DEBUG] 2019-10-02 13:36:18.887 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5ec4ff02
[DEBUG] 2019-10-02 13:36:18.902 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5f038248
[DEBUG] 2019-10-02 13:36:18.902 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5f038248
[DEBUG] 2019-10-02 13:36:18.905 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1deceb67
[DEBUG] 2019-10-02 13:36:18.905 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1deceb67
[DEBUG] 2019-10-02 13:36:18.908 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5d5c04f9
[DEBUG] 2019-10-02 13:36:18.908 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5d5c04f9
[DEBUG] 2019-10-02 13:36:18.910 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6724cdec
[DEBUG] 2019-10-02 13:36:18.911 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6724cdec
[DEBUG] 2019-10-02 13:36:18.913 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@60783105
[DEBUG] 2019-10-02 13:36:18.913 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@60783105
[DEBUG] 2019-10-02 13:36:18.930 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@38bb9d7a
[DEBUG] 2019-10-02 13:36:18.930 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@38bb9d7a
[DEBUG] 2019-10-02 13:36:18.935 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2d9dff65
[DEBUG] 2019-10-02 13:36:18.936 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2d9dff65
[DEBUG] 2019-10-02 13:36:18.939 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6a094db2
[DEBUG] 2019-10-02 13:36:18.940 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6a094db2
[DEBUG] 2019-10-02 13:36:18.942 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2af69643
[DEBUG] 2019-10-02 13:36:18.942 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2af69643
[DEBUG] 2019-10-02 13:36:18.944 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5c77ba8f
[DEBUG] 2019-10-02 13:36:18.944 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5c77ba8f
[DEBUG] 2019-10-02 13:36:18.944 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5c77ba8f
[DEBUG] 2019-10-02 13:36:18.947 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7add323c
[DEBUG] 2019-10-02 13:36:18.956 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4ac86d6a
[DEBUG] 2019-10-02 13:36:18.956 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ac86d6a
[DEBUG] 2019-10-02 13:36:18.957 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ac86d6a
[DEBUG] 2019-10-02 13:36:18.958 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@210308d5
[DEBUG] 2019-10-02 13:36:18.960 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6ede46f6
[DEBUG] 2019-10-02 13:36:18.960 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6ede46f6
[DEBUG] 2019-10-02 13:36:18.962 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@10a0fe30
[DEBUG] 2019-10-02 13:36:18.962 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@10a0fe30
[DEBUG] 2019-10-02 13:36:18.964 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6920614
[DEBUG] 2019-10-02 13:36:18.964 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6920614
[DEBUG] 2019-10-02 13:36:18.966 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7ff35a3f
[DEBUG] 2019-10-02 13:36:18.966 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7ff35a3f
[DEBUG] 2019-10-02 13:36:18.967 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4eba373c
[DEBUG] 2019-10-02 13:36:18.968 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4eba373c
[DEBUG] 2019-10-02 13:36:18.969 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@26f46fa6
[DEBUG] 2019-10-02 13:36:18.971 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@421056e5
[DEBUG] 2019-10-02 13:36:18.971 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@421056e5
[DEBUG] 2019-10-02 13:36:18.971 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@421056e5
[DEBUG] 2019-10-02 13:36:18.973 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@54e3658c
[DEBUG] 2019-10-02 13:36:18.974 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@54e3658c
[DEBUG] 2019-10-02 13:36:18.974 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@54e3658c
[DEBUG] 2019-10-02 13:36:18.976 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@cdb2d95
[DEBUG] 2019-10-02 13:36:18.977 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@895416d
[DEBUG] 2019-10-02 13:36:18.979 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@623dcf2a
[DEBUG] 2019-10-02 13:36:18.979 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@623dcf2a
[DEBUG] 2019-10-02 13:36:18.980 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@623dcf2a
[DEBUG] 2019-10-02 13:36:18.982 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5f7989fa
[DEBUG] 2019-10-02 13:36:18.982 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5f7989fa
[DEBUG] 2019-10-02 13:36:18.982 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5f7989fa
[DEBUG] 2019-10-02 13:36:18.983 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6dd1c3ed
[DEBUG] 2019-10-02 13:36:18.984 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6dfa915a
[DEBUG] 2019-10-02 13:36:18.986 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1e7ab390
[DEBUG] 2019-10-02 13:36:18.986 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1e7ab390
[DEBUG] 2019-10-02 13:36:18.987 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6cd64ee8
[DEBUG] 2019-10-02 13:36:18.989 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@12fcc71f
[DEBUG] 2019-10-02 13:36:18.989 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@12fcc71f
[DEBUG] 2019-10-02 13:36:18.991 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@77bbadc
[DEBUG] 2019-10-02 13:36:18.991 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@77bbadc
[DEBUG] 2019-10-02 13:36:18.992 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@25ad4f71
[DEBUG] 2019-10-02 13:36:18.993 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a451491
[DEBUG] 2019-10-02 13:36:18.995 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4da6d664
[DEBUG] 2019-10-02 13:36:19.000 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5f0f9947
[DEBUG] 2019-10-02 13:36:19.001 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5f0f9947
[DEBUG] 2019-10-02 13:36:19.001 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@799ed4e8
[DEBUG] 2019-10-02 13:36:19.001 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2e66bc32
[DEBUG] 2019-10-02 13:36:19.002 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@54d8c20d
[DEBUG] 2019-10-02 13:36:19.002 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4b65d9f4
[DEBUG] 2019-10-02 13:36:19.002 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@44536de4
[DEBUG] 2019-10-02 13:36:19.002 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5fcfde70
[DEBUG] 2019-10-02 13:36:19.002 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4d95a72e
[DEBUG] 2019-10-02 13:36:19.002 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@28da7d11
[DEBUG] 2019-10-02 13:36:19.052 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 13:36:19.053 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 13:36:19.055 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 13:36:19.055 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 13:36:19.056 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 13:36:19.058 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 13:36:19.059 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 13:36:19.060 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 13:36:19.062 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 13:36:19.063 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 13:36:19.064 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 13:36:19.065 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 13:36:19.065 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 13:36:19.067 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 13:36:19.077 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 13:36:19.077 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 13:36:19.077 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 13:36:19.350 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 13:36:19.600 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 13:36:19.610 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 13:36:19.611 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 13:36:19.670 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 13:36:19.705 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 13:36:19.755 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 13:36:19.839 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 13:36:19.848 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5eea5627] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3330f3ad]
[DEBUG] 2019-10-02 13:36:19.943 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:36:19.986 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 13:36:19.995 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 13:36:19.998 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 13:36:20.036 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:36:20.039 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 13:36:20.042 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 13:36:20.044 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 13:36:20.047 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 13:36:20.052 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 13:36:20.054 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:36:20.054 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 13:36:20.054 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 13:36:20.054 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 13:36:20.054 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 13:36:20.055 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:36:20.055 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 13:36:20.055 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 13:36:20.055 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 13:36:20.055 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 13:36:20.055 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:36:20.055 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 13:36:20.056 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 13:36:20.056 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 13:36:20.056 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 13:36:20.058 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:36:20.058 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:36:20.061 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:36:20.073 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:36:20.073 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:36:20.075 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 13:36:20.077 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:36:20.078 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 13:36:20.079 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:20.083 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 13:36:20.083 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:36:20.084 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 13:36:20.084 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 13:36:20.084 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 13:36:20.084 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 13:36:20.086 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:36:20.086 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 13:36:20.086 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 13:36:20.087 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 13:36:20.090 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:36:20.091 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 13:36:20.091 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 13:36:20.091 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 13:36:20.091 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 13:36:20.091 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 13:36:20.091 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:36:20.091 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 13:36:20.091 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 13:36:20.092 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 13:36:20.092 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 13:36:20.092 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:36:20.092 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 13:36:20.092 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 13:36:20.092 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 13:36:20.092 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 13:36:20.092 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:36:20.093 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 13:36:20.093 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 13:36:20.093 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 13:36:20.093 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 13:36:20.093 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 13:36:20.093 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 13:36:20.096 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 13:36:20.099 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 13:36:20.099 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 13:36:20.099 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 13:36:20.099 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 13:36:20.099 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 13:36:20.100 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 13:36:20.100 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 13:36:20.100 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 13:36:20.100 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 13:36:20.110 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 13:36:20.110 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 13:36:20.110 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:20.111 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 13:36:20.112 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 13:36:20.114 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 13:36:20.114 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:36:20.114 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:36:20.119 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:36:20.165 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 13:36:20.167 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 13:36:20.167 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 13:36:20.167 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 13:36:20.168 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 13:36:20.168 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 13:36:20.168 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 13:36:20.168 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 13:36:20.168 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 13:36:20.168 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 13:36:20.168 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 13:36:20.168 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 13:36:20.168 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 13:36:20.168 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 13:36:20.168 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 13:36:20.168 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 13:36:20.168 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 13:36:20.168 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 13:36:20.169 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 13:36:20.169 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 13:36:20.169 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 13:36:20.169 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 13:36:20.169 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 13:36:20.169 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 13:36:20.169 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 13:36:20.169 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 13:36:20.169 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 13:36:20.169 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 13:36:20.169 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 13:36:20.170 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 13:36:20.170 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 13:36:20.170 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 13:36:20.170 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 13:36:20.170 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 13:36:20.170 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 13:36:20.170 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 13:36:20.170 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 13:36:20.170 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 13:36:20.170 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 13:36:20.250 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 13:36:20.277 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 13:36:20.277 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.RecipeDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45292ec1, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 13:36:20.299 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 13:36:20.300 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 13:36:20.301 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 13:36:20.301 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5eea5627] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@53aa2fc9]
[DEBUG] 2019-10-02 13:36:20.369 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 13:36:20.369 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:36:20.398 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 13:36:20.398 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:36:20.818 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 13:36:20.818 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:36:20.819 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 13:36:20.819 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:36:20.874 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:20.874 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 13:36:20.875 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 13:36:20.875 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 13:36:20.875 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 13:36:20.883 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 13:36:20.884 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 13:36:20.884 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 13:36:20.884 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 13:36:20.884 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 13:36:20.884 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 13:36:20.884 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:36:20.924 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18cf5c52]
[DEBUG] 2019-10-02 13:36:20.926 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 13:36:20.927 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 13:36:20.927 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 13:36:20.927 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 13:36:20.937 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@105db94d]
[DEBUG] 2019-10-02 13:36:20.942 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a2773a8]
[DEBUG] 2019-10-02 13:36:20.945 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 13:36:20.945 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 13:36:20.945 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 13:36:20.945 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 13:36:20.946 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 13:36:20.947 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 13:36:20.947 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:36:20.968 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:36:20.979 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 13:36:20.982 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:36:20.982 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ee92e7d]
[DEBUG] 2019-10-02 13:36:20.982 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 13:36:20.982 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 13:36:20.982 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 13:36:20.982 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 13:36:20.982 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6cdbe5ec]
[DEBUG] 2019-10-02 13:36:20.982 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14b8a751]
[DEBUG] 2019-10-02 13:36:20.983 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 13:36:20.983 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 13:36:20.983 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 13:36:20.983 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 13:36:20.983 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 13:36:20.983 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 13:36:20.983 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:36:20.983 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:36:20.985 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 13:36:20.985 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:36:21.011 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:36:21.011 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:36:21.012 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 13:36:21.012 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 13:36:21.012 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 13:36:21.012 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 13:36:21.012 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 13:36:21.012 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 13:36:21.012 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:36:21.012 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a814310]
[DEBUG] 2019-10-02 13:36:21.012 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:36:21.012 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:36:21.013 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:36:21.013 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:36:21.013 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e67cfe1]
[DEBUG] 2019-10-02 13:36:21.014 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 13:36:21.015 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 13:36:21.015 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 13:36:21.015 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 13:36:21.015 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 13:36:21.015 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 13:36:21.015 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:36:21.015 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:36:21.016 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 13:36:21.016 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:36:21.016 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5da6b13d]
[DEBUG] 2019-10-02 13:36:21.017 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:36:21.017 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:36:21.017 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:36:21.017 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:36:21.017 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b16de91]
[DEBUG] 2019-10-02 13:36:21.017 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 13:36:21.017 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 13:36:21.017 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 13:36:21.017 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 13:36:21.017 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 13:36:21.018 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 13:36:21.018 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:36:21.018 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:36:21.019 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 13:36:21.019 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:36:21.019 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 13:36:21.020 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 13:36:21.029 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33de7f3d]
[DEBUG] 2019-10-02 13:36:21.030 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30159886]
[DEBUG] 2019-10-02 13:36:21.030 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 13:36:21.030 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 13:36:21.030 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 13:36:21.030 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 13:36:21.030 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 13:36:21.031 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 13:36:21.035 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 13:36:21.036 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 13:36:21.037 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 13:36:21.101 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 13:36:21.102 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 13:36:21.102 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 13:36:21.111 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 13:36:21.111 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 13:36:21.112 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 13:36:21.112 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 13:36:21.115 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@d108406
[DEBUG] 2019-10-02 13:36:21.117 [main] SessionFactoryRegistry - Registering SessionFactory: 754f4df3-bbff-436c-88e5-cc169db1fef2 (<unnamed>)
[DEBUG] 2019-10-02 13:36:21.118 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 13:36:21.244 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 13:36:21.277 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:36:21.318 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:36:21.321 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 13:36:21.336 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:21.348 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:36:21.349 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 13:36:21.349 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.349 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 13:36:21.349 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.349 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 13:36:21.349 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.349 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 13:36:21.349 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.350 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 13:36:21.350 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.351 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:36:21.351 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:36:21.351 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 13:36:21.351 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.351 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 13:36:21.352 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.352 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 13:36:21.352 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.352 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 13:36:21.352 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.352 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:36:21.353 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:21.357 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:21.358 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:21.359 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:36:21.361 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 13:36:21.361 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:36:21.415 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-10-02 13:36:21.441 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@78288f83
[DEBUG] 2019-10-02 13:36:21.482 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-10-02 13:36:21.495 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 13:36:21.509 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'alexmalotky'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Recipe'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'name'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'user'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

[DEBUG] 2019-10-02 13:36:21.558 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-02 13:36:21.586 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.Recipe (generatedAlias0) -> recipe0_
[DEBUG] 2019-10-02 13:36:21.587 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 13:36:21.592 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 13:36:21.594 [main] DotNode - getDataType() : name -> org.hibernate.type.StringType@2b03d52f
[DEBUG] 2019-10-02 13:36:21.596 [main] FromReferenceNode - Resolved : generatedAlias0.name -> recipe0_.name
[DEBUG] 2019-10-02 13:36:21.599 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 13:36:21.599 [main] DotNode - getDataType() : user -> org.hibernate.type.ManyToOneType(com.alexmalotky.entity.User)
[DEBUG] 2019-10-02 13:36:21.599 [main] DotNode - dereferenceShortcut() : property user in com.alexmalotky.entity.Recipe does not require a join.
[DEBUG] 2019-10-02 13:36:21.599 [main] DotNode - Terminal getPropertyPath = [user]
[DEBUG] 2019-10-02 13:36:21.600 [main] FromReferenceNode - Resolved : generatedAlias0.user -> recipe0_.user_id
[DEBUG] 2019-10-02 13:36:21.600 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-02 13:36:21.600 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipe0_.id ) ( FromClause{level=1} recipes recipe0_ ) ( where ( and ( = ( recipe0_.name recipe0_.id name ) ? ) ( = ( recipe0_.user_id recipe0_.id user ) ? ) ) ) )
[DEBUG] 2019-10-02 13:36:21.621 [main] JoinProcessor - Using FROM fragment [recipes recipe0_]
[DEBUG] 2019-10-02 13:36:21.622 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-02 13:36:21.623 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipe0_.id as id1_0_' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipe0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'recipes recipe0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=recipes,tableAlias=recipe0_,origin=null,columns={,className=com.alexmalotky.entity.Recipe}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'recipe0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=recipe0_,className=com.alexmalotky.entity.Recipe,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'recipe0_.id' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2b03d52f}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'recipe0_.user_id' {propertyName=user,dereferenceType=UNKNOWN,getPropertyPath=user,path=generatedAlias0.user,tableAlias=recipe0_,className=com.alexmalotky.entity.Recipe,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'recipe0_.id' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
             |  \-[IDENT] IdentNode: 'user' {originalText=user}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.ManyToOneType(com.alexmalotky.entity.User)}

[DEBUG] 2019-10-02 13:36:21.623 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 13:36:21.635 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-10-02 13:36:21.635 [main] QueryTranslatorImpl - SQL: select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_ where recipe0_.name=? and recipe0_.user_id=?
[DEBUG] 2019-10-02 13:36:21.635 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 13:36:21.656 [main] SQL - select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_ where recipe0_.name=? and recipe0_.user_id=?
[DEBUG] 2019-10-02 13:36:21.661 [main] Loader - Result set row: 0
[DEBUG] 2019-10-02 13:36:21.662 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:36:21.663 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:36:21.663 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 13:36:21.663 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.663 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 13:36:21.663 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.663 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 13:36:21.663 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.663 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 13:36:21.663 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.664 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:36:21.669 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:36:21.670 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 13:36:21.670 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:21.671 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:36:21.671 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 13:36:21.671 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.671 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 13:36:21.671 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.671 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 13:36:21.671 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.671 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 13:36:21.671 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.671 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 13:36:21.671 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.671 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:36:21.671 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:21.672 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:21.672 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:21.672 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:36:21.672 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 13:36:21.672 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:36:21.674 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:36:21.749 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2019-10-02 13:36:21.750 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2019-10-02 13:36:21.752 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 13:36:21.753 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'alexmalotky'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Recipe'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-10-02 13:36:21.754 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-02 13:36:21.754 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.Recipe (generatedAlias0) -> recipe0_
[DEBUG] 2019-10-02 13:36:21.755 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 13:36:21.755 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 13:36:21.755 [main] DotNode - getDataType() : name -> org.hibernate.type.StringType@2b03d52f
[DEBUG] 2019-10-02 13:36:21.755 [main] FromReferenceNode - Resolved : generatedAlias0.name -> recipe0_.name
[DEBUG] 2019-10-02 13:36:21.756 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-02 13:36:21.756 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipe0_.id ) ( FromClause{level=1} recipes recipe0_ ) ( where ( = ( recipe0_.name recipe0_.id name ) ? ) ) )
[DEBUG] 2019-10-02 13:36:21.756 [main] JoinProcessor - Using FROM fragment [recipes recipe0_]
[DEBUG] 2019-10-02 13:36:21.756 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-02 13:36:21.757 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipe0_.id as id1_0_' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipe0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'recipes recipe0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=recipes,tableAlias=recipe0_,origin=null,columns={,className=com.alexmalotky.entity.Recipe}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'recipe0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=recipe0_,className=com.alexmalotky.entity.Recipe,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'recipe0_.id' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@2b03d52f}

[DEBUG] 2019-10-02 13:36:21.757 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 13:36:21.757 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2019-10-02 13:36:21.757 [main] QueryTranslatorImpl - SQL: select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_ where recipe0_.name=?
[DEBUG] 2019-10-02 13:36:21.757 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 13:36:21.758 [main] SQL - select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_ where recipe0_.name=?
[DEBUG] 2019-10-02 13:36:21.761 [main] Loader - Result set row: 0
[DEBUG] 2019-10-02 13:36:21.762 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:36:21.762 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:36:21.763 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 13:36:21.763 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.763 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 13:36:21.763 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.763 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 13:36:21.763 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.763 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 13:36:21.763 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.764 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:36:21.766 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:36:21.767 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 13:36:21.767 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:21.768 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:36:21.768 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 13:36:21.768 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.768 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 13:36:21.768 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.768 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 13:36:21.768 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.768 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 13:36:21.768 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.768 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 13:36:21.768 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.769 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:36:21.769 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:21.769 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:21.769 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:21.769 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:36:21.769 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 13:36:21.770 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:36:21.770 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:36:21.840 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:36:21.844 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:36:21.844 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 13:36:21.845 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:21.845 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:36:21.845 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 13:36:21.845 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.845 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 13:36:21.845 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.846 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 13:36:21.846 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.846 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 13:36:21.846 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.846 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 13:36:21.846 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.846 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:36:21.846 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:36:21.846 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 13:36:21.846 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.846 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 13:36:21.846 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.847 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 13:36:21.847 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.847 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 13:36:21.847 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.847 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:36:21.847 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:21.847 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:21.847 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:21.847 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:36:21.848 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 13:36:21.848 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:36:21.853 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 13:36:21.853 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 13:36:21.866 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 13:36:21.869 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:36:21.876 [main] IdentifierGeneratorHelper - Natively generated identity: 16
[DEBUG] 2019-10-02 13:36:21.877 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:36:21.879 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 13:36:21.880 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 13:36:21.880 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 13:36:21.883 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-10-02 13:36:21.883 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-10-02 13:36:21.885 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 13:36:21.885 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=, name=testInsert, ingredients=, id=16, user=com.alexmalotky.entity.User#1}
[DEBUG] 2019-10-02 13:36:21.890 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:36:21.892 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:36:21.893 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:36:21.899 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:36:21.899 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 13:36:21.900 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#16]
[DEBUG] 2019-10-02 13:36:21.900 [main] TwoPhaseLoad - Processing attribute `directions` : value = 
[DEBUG] 2019-10-02 13:36:21.900 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.900 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = 
[DEBUG] 2019-10-02 13:36:21.900 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.900 [main] TwoPhaseLoad - Processing attribute `name` : value = testInsert
[DEBUG] 2019-10-02 13:36:21.900 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.900 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 13:36:21.900 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.901 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#16]
[DEBUG] 2019-10-02 13:36:21.901 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:36:21.901 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 13:36:21.901 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.901 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 13:36:21.901 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.901 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 13:36:21.901 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.901 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 13:36:21.901 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.902 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 13:36:21.902 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.902 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:36:21.902 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:36:21.905 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:21.905 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 13:36:21.908 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:21.908 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:36:21.909 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:21.909 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-02 13:36:21.909 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:21.909 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:36:21.909 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 13:36:21.909 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.909 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 13:36:21.909 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.910 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 13:36:21.910 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.910 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 13:36:21.910 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:21.910 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:36:21.910 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:21.910 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:21.910 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:21.910 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:36:21.911 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 13:36:21.911 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#16
[DEBUG] 2019-10-02 13:36:21.911 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:36:22.018 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:36:22.022 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:36:22.023 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 13:36:22.023 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:36:22.023 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 13:36:22.023 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.024 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 13:36:22.024 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.024 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 13:36:22.024 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.024 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 13:36:22.024 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.024 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:36:22.024 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:36:22.024 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 13:36:22.024 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.024 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 13:36:22.025 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.025 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 13:36:22.025 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.025 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 13:36:22.025 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.025 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 13:36:22.025 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.025 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:36:22.025 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:36:22.026 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:22.026 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 13:36:22.028 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:22.028 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:36:22.029 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:22.029 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:22.030 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:22.030 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:22.030 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:36:22.030 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 13:36:22.030 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#1
[DEBUG] 2019-10-02 13:36:22.030 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:36:22.084 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 13:36:22.085 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 13:36:22.086 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 13:36:22.087 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 13:36:22.090 [main] IdentifierGeneratorHelper - Natively generated identity: 17
[DEBUG] 2019-10-02 13:36:22.091 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:36:22.091 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 13:36:22.091 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 13:36:22.091 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 13:36:22.092 [main] JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:206) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:392) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:145) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1499) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:496) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3371) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2540) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:473) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:178) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:104) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at com.alexmalotky.persistence.GenericDao.insert(GenericDao.java:90) [classes/:?]
	at com.alexmalotky.persistence.RecipeDaoTest.lambda$testInsertFail$0(RecipeDaoTest.java:58) [test-classes/:?]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:50) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:38) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:1108) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at com.alexmalotky.persistence.RecipeDaoTest.testInsertFail(RecipeDaoTest.java:58) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) [junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69) [junit5-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
[DEBUG] 2019-10-02 13:36:22.106 [main] JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:187) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:104) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at com.alexmalotky.persistence.GenericDao.insert(GenericDao.java:90) [classes/:?]
	at com.alexmalotky.persistence.RecipeDaoTest.lambda$testInsertFail$0(RecipeDaoTest.java:58) [test-classes/:?]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:50) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:38) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:1108) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at com.alexmalotky.persistence.RecipeDaoTest.testInsertFail(RecipeDaoTest.java:58) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) [junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69) [junit5-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
[DEBUG] 2019-10-02 13:36:22.111 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:36:22.112 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:36:22.161 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:36:22.164 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:36:22.165 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 13:36:22.165 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 13:36:22.165 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-02 13:36:22.165 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.165 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-02 13:36:22.166 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.166 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 13:36:22.166 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.166 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 13:36:22.166 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.166 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 13:36:22.166 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 13:36:22.166 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 13:36:22.166 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.166 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 13:36:22.167 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.167 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 13:36:22.167 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.167 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 13:36:22.167 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.167 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 13:36:22.167 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.167 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 13:36:22.167 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:36:22.168 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 13:36:22.168 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 13:36:22.170 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 13:36:22.170 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:36:22.171 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 13:36:22.171 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:22.171 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 13:36:22.171 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:22.171 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:36:22.172 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 13:36:22.172 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-02 13:36:22.172 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:36:22.174 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 13:36:22.174 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 13:36:22.185 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 13:36:22.185 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 13:36:22.185 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 13:36:22.185 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2019-10-02 13:36:22.185 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-10-02 13:36:22.185 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 13:36:22.186 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions={"Instruction 1", "Instruction 2"}, name=Test Recipe, ingredients={ {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }, id=3, user=com.alexmalotky.entity.User#3}
[DEBUG] 2019-10-02 13:36:22.199 [main] SQL - delete from recipes where id=?
[DEBUG] 2019-10-02 13:36:22.205 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:36:22.206 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:36:22.206 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2019-10-02 13:36:22.206 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0
[DEBUG] 2019-10-02 13:36:22.207 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0
[DEBUG] 2019-10-02 13:36:22.208 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 13:36:22.208 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'alexmalotky'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Recipe'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-10-02 13:36:22.209 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-02 13:36:22.209 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.Recipe (generatedAlias0) -> recipe0_
[DEBUG] 2019-10-02 13:36:22.209 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 13:36:22.209 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-02 13:36:22.209 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipe0_.id ) ( FromClause{level=1} recipes recipe0_ ) )
[DEBUG] 2019-10-02 13:36:22.210 [main] JoinProcessor - Using FROM fragment [recipes recipe0_]
[DEBUG] 2019-10-02 13:36:22.210 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-02 13:36:22.210 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipe0_.id as id1_0_' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipe0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'recipes recipe0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=recipes,tableAlias=recipe0_,origin=null,columns={,className=com.alexmalotky.entity.Recipe}}

[DEBUG] 2019-10-02 13:36:22.210 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 13:36:22.210 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0
[DEBUG] 2019-10-02 13:36:22.211 [main] QueryTranslatorImpl - SQL: select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_
[DEBUG] 2019-10-02 13:36:22.211 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 13:36:22.211 [main] SQL - select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_
[DEBUG] 2019-10-02 13:36:22.215 [main] Loader - Result set row: 0
[DEBUG] 2019-10-02 13:36:22.216 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:36:22.216 [main] Loader - Result set row: 1
[DEBUG] 2019-10-02 13:36:22.216 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 13:36:22.216 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:36:22.216 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 13:36:22.217 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.217 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 13:36:22.217 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.217 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 13:36:22.217 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.217 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 13:36:22.217 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.217 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:36:22.220 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:36:22.220 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 13:36:22.221 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:22.221 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:36:22.221 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 13:36:22.221 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.221 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 13:36:22.221 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.221 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 13:36:22.221 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.221 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 13:36:22.221 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.222 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 13:36:22.222 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.222 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:36:22.222 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:22.222 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:22.222 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:22.223 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:36:22.223 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 13:36:22.223 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:36:22.223 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 13:36:22.223 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-02 13:36:22.223 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.223 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-02 13:36:22.223 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.223 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-02 13:36:22.224 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.224 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-02 13:36:22.224 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.224 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:36:22.227 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:36:22.227 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 13:36:22.228 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 13:36:22.228 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 13:36:22.228 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 13:36:22.228 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.228 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 13:36:22.228 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.228 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 13:36:22.228 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.228 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 13:36:22.228 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.228 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-02 13:36:22.228 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.229 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 13:36:22.229 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:22.229 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 13:36:22.229 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:22.229 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:36:22.229 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#2
[DEBUG] 2019-10-02 13:36:22.229 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 13:36:22.230 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:36:22.283 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0
[DEBUG] 2019-10-02 13:36:22.284 [main] SQL - select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_
[DEBUG] 2019-10-02 13:36:22.287 [main] Loader - Result set row: 0
[DEBUG] 2019-10-02 13:36:22.288 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:36:22.288 [main] Loader - Result set row: 1
[DEBUG] 2019-10-02 13:36:22.288 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 13:36:22.288 [main] Loader - Result set row: 2
[DEBUG] 2019-10-02 13:36:22.289 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 13:36:22.289 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:36:22.289 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 13:36:22.289 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.290 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 13:36:22.290 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.290 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 13:36:22.290 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.290 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 13:36:22.290 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.290 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:36:22.293 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:36:22.293 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 13:36:22.294 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:22.294 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:36:22.294 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 13:36:22.294 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.294 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 13:36:22.294 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.294 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 13:36:22.294 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.294 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 13:36:22.294 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.294 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 13:36:22.295 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.295 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 13:36:22.295 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:22.295 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 13:36:22.295 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:22.295 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:36:22.295 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 13:36:22.295 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 13:36:22.295 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 13:36:22.295 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-02 13:36:22.295 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.295 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-02 13:36:22.295 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.295 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-02 13:36:22.296 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.296 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-02 13:36:22.296 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.296 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:36:22.299 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:36:22.299 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 13:36:22.299 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 13:36:22.299 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 13:36:22.300 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 13:36:22.300 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.300 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 13:36:22.300 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.300 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 13:36:22.300 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.300 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 13:36:22.300 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.300 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-02 13:36:22.300 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.300 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 13:36:22.300 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:22.300 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 13:36:22.300 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:22.301 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:36:22.301 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#2
[DEBUG] 2019-10-02 13:36:22.301 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 13:36:22.301 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 13:36:22.301 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-02 13:36:22.301 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.301 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-02 13:36:22.301 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.301 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 13:36:22.301 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.301 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 13:36:22.301 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.302 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 13:36:22.305 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:36:22.305 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 13:36:22.305 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 13:36:22.306 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 13:36:22.306 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 13:36:22.306 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.306 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 13:36:22.306 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.306 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 13:36:22.306 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.306 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 13:36:22.306 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.306 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 13:36:22.306 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.306 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 13:36:22.306 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:22.306 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 13:36:22.307 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:22.307 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:36:22.307 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#3
[DEBUG] 2019-10-02 13:36:22.307 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 13:36:22.307 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:36:22.374 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 13:36:22.379 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:36:22.379 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 13:36:22.379 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 13:36:22.379 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-02 13:36:22.380 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.380 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-02 13:36:22.380 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.380 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 13:36:22.380 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.380 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 13:36:22.380 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.380 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 13:36:22.380 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 13:36:22.380 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 13:36:22.380 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.380 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 13:36:22.380 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.380 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 13:36:22.380 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.380 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 13:36:22.380 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.381 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 13:36:22.381 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 13:36:22.381 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 13:36:22.381 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:36:22.381 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 13:36:22.382 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 13:36:22.384 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 13:36:22.384 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 13:36:22.384 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 13:36:22.385 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:22.385 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 13:36:22.385 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 13:36:22.385 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 13:36:22.385 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 13:36:22.385 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-02 13:36:22.385 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:36:22.387 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 13:36:22.387 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 13:36:22.390 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 13:36:22.390 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 13:36:22.390 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 13:36:22.391 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2019-10-02 13:36:22.392 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-10-02 13:36:22.392 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 13:36:22.392 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=Do the thing, name=Test Recipe, ingredients={ {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }, id=3, user=com.alexmalotky.entity.User#3}
[DEBUG] 2019-10-02 13:36:22.392 [main] SQL - update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 13:36:22.398 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 13:36:22.399 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:43:46.067 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 18:43:46.072 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 18:43:46.083 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 18:43:46.243 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 18:43:46.246 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 18:43:46.607 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 18:43:46.608 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 18:43:46.617 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 18:43:47.145 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 18:43:47.181 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 18:43:47.183 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 18:43:47.215 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 18:43:47.274 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7dd611c8
[DEBUG] 2019-10-02 18:43:47.274 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7dd611c8
[DEBUG] 2019-10-02 18:43:47.274 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7dd611c8
[DEBUG] 2019-10-02 18:43:47.275 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@278667fd
[DEBUG] 2019-10-02 18:43:47.276 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@e042c99
[DEBUG] 2019-10-02 18:43:47.277 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f4f5330
[DEBUG] 2019-10-02 18:43:47.279 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2b34e38c
[DEBUG] 2019-10-02 18:43:47.279 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2b34e38c
[DEBUG] 2019-10-02 18:43:47.279 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2b34e38c
[DEBUG] 2019-10-02 18:43:47.281 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@468dda3e
[DEBUG] 2019-10-02 18:43:47.281 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@468dda3e
[DEBUG] 2019-10-02 18:43:47.281 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@468dda3e
[DEBUG] 2019-10-02 18:43:47.284 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@67f3d192
[DEBUG] 2019-10-02 18:43:47.284 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@67f3d192
[DEBUG] 2019-10-02 18:43:47.284 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@67f3d192
[DEBUG] 2019-10-02 18:43:47.286 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6b4283c4
[DEBUG] 2019-10-02 18:43:47.286 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6b4283c4
[DEBUG] 2019-10-02 18:43:47.286 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6b4283c4
[DEBUG] 2019-10-02 18:43:47.288 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7e744f43
[DEBUG] 2019-10-02 18:43:47.289 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7e744f43
[DEBUG] 2019-10-02 18:43:47.289 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e744f43
[DEBUG] 2019-10-02 18:43:47.290 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@49ec6a9f
[DEBUG] 2019-10-02 18:43:47.291 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@49ec6a9f
[DEBUG] 2019-10-02 18:43:47.291 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@49ec6a9f
[DEBUG] 2019-10-02 18:43:47.292 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@70cccd8f
[DEBUG] 2019-10-02 18:43:47.292 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@70cccd8f
[DEBUG] 2019-10-02 18:43:47.293 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@70cccd8f
[DEBUG] 2019-10-02 18:43:47.294 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1a0b5323
[DEBUG] 2019-10-02 18:43:47.294 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1a0b5323
[DEBUG] 2019-10-02 18:43:47.296 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@41fe8e5f
[DEBUG] 2019-10-02 18:43:47.296 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@41fe8e5f
[DEBUG] 2019-10-02 18:43:47.297 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@51a6cc2a
[DEBUG] 2019-10-02 18:43:47.298 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@51a6cc2a
[DEBUG] 2019-10-02 18:43:47.298 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28cb3a25
[DEBUG] 2019-10-02 18:43:47.299 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@9aa2002
[DEBUG] 2019-10-02 18:43:47.301 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@49ede9c7
[DEBUG] 2019-10-02 18:43:47.301 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@49ede9c7
[DEBUG] 2019-10-02 18:43:47.302 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@45404d5
[DEBUG] 2019-10-02 18:43:47.303 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@45404d5
[DEBUG] 2019-10-02 18:43:47.317 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@59ed3e6c
[DEBUG] 2019-10-02 18:43:47.317 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@59ed3e6c
[DEBUG] 2019-10-02 18:43:47.320 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4195105b
[DEBUG] 2019-10-02 18:43:47.320 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4195105b
[DEBUG] 2019-10-02 18:43:47.322 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6cd5122d
[DEBUG] 2019-10-02 18:43:47.323 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6cd5122d
[DEBUG] 2019-10-02 18:43:47.325 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@70c53dbe
[DEBUG] 2019-10-02 18:43:47.325 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@70c53dbe
[DEBUG] 2019-10-02 18:43:47.328 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@109a2025
[DEBUG] 2019-10-02 18:43:47.328 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@109a2025
[DEBUG] 2019-10-02 18:43:47.331 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6c9320c2
[DEBUG] 2019-10-02 18:43:47.332 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6c9320c2
[DEBUG] 2019-10-02 18:43:47.336 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@14823f76
[DEBUG] 2019-10-02 18:43:47.337 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@14823f76
[DEBUG] 2019-10-02 18:43:47.340 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@124ac145
[DEBUG] 2019-10-02 18:43:47.340 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@124ac145
[DEBUG] 2019-10-02 18:43:47.342 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4af70944
[DEBUG] 2019-10-02 18:43:47.343 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4af70944
[DEBUG] 2019-10-02 18:43:47.345 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7661b5a
[DEBUG] 2019-10-02 18:43:47.345 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7661b5a
[DEBUG] 2019-10-02 18:43:47.345 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7661b5a
[DEBUG] 2019-10-02 18:43:47.347 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e08acf9
[DEBUG] 2019-10-02 18:43:47.349 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5ec4ff02
[DEBUG] 2019-10-02 18:43:47.350 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5ec4ff02
[DEBUG] 2019-10-02 18:43:47.350 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5ec4ff02
[DEBUG] 2019-10-02 18:43:47.351 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@612e21b9
[DEBUG] 2019-10-02 18:43:47.353 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1a865273
[DEBUG] 2019-10-02 18:43:47.353 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a865273
[DEBUG] 2019-10-02 18:43:47.356 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@fcc6023
[DEBUG] 2019-10-02 18:43:47.357 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@fcc6023
[DEBUG] 2019-10-02 18:43:47.358 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@46185a1b
[DEBUG] 2019-10-02 18:43:47.359 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@46185a1b
[DEBUG] 2019-10-02 18:43:47.361 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4ee5b2d9
[DEBUG] 2019-10-02 18:43:47.361 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4ee5b2d9
[DEBUG] 2019-10-02 18:43:47.363 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@290d10ef
[DEBUG] 2019-10-02 18:43:47.363 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@290d10ef
[DEBUG] 2019-10-02 18:43:47.364 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@13d9261f
[DEBUG] 2019-10-02 18:43:47.367 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2436ea2f
[DEBUG] 2019-10-02 18:43:47.367 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2436ea2f
[DEBUG] 2019-10-02 18:43:47.367 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2436ea2f
[DEBUG] 2019-10-02 18:43:47.369 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@59f93db8
[DEBUG] 2019-10-02 18:43:47.369 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@59f93db8
[DEBUG] 2019-10-02 18:43:47.370 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@59f93db8
[DEBUG] 2019-10-02 18:43:47.372 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@292158f8
[DEBUG] 2019-10-02 18:43:47.372 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5d5c04f9
[DEBUG] 2019-10-02 18:43:47.374 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6724cdec
[DEBUG] 2019-10-02 18:43:47.374 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6724cdec
[DEBUG] 2019-10-02 18:43:47.374 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6724cdec
[DEBUG] 2019-10-02 18:43:47.376 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60783105
[DEBUG] 2019-10-02 18:43:47.377 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60783105
[DEBUG] 2019-10-02 18:43:47.377 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60783105
[DEBUG] 2019-10-02 18:43:47.378 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2a3194c6
[DEBUG] 2019-10-02 18:43:47.379 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1e8ab90f
[DEBUG] 2019-10-02 18:43:47.381 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1907874b
[DEBUG] 2019-10-02 18:43:47.382 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1907874b
[DEBUG] 2019-10-02 18:43:47.382 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2d9dff65
[DEBUG] 2019-10-02 18:43:47.385 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@fab35b1
[DEBUG] 2019-10-02 18:43:47.385 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@fab35b1
[DEBUG] 2019-10-02 18:43:47.389 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@587a1cfb
[DEBUG] 2019-10-02 18:43:47.389 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@587a1cfb
[DEBUG] 2019-10-02 18:43:47.390 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@48d293ee
[DEBUG] 2019-10-02 18:43:47.391 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@660f0c
[DEBUG] 2019-10-02 18:43:47.393 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@76563d26
[DEBUG] 2019-10-02 18:43:47.400 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@10a0fe30
[DEBUG] 2019-10-02 18:43:47.401 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@10a0fe30
[DEBUG] 2019-10-02 18:43:47.402 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@262816a8
[DEBUG] 2019-10-02 18:43:47.402 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1effd53c
[DEBUG] 2019-10-02 18:43:47.402 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@46c269e0
[DEBUG] 2019-10-02 18:43:47.403 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6920614
[DEBUG] 2019-10-02 18:43:47.403 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6069dd38
[DEBUG] 2019-10-02 18:43:47.403 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5fa23c
[DEBUG] 2019-10-02 18:43:47.403 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@558756be
[DEBUG] 2019-10-02 18:43:47.403 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@433348bc
[DEBUG] 2019-10-02 18:43:47.486 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 18:43:47.488 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 18:43:47.490 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 18:43:47.490 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 18:43:47.491 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 18:43:47.494 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 18:43:47.495 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 18:43:47.497 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 18:43:47.499 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 18:43:47.500 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 18:43:47.502 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 18:43:47.503 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 18:43:47.503 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 18:43:47.505 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 18:43:47.514 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 18:43:47.515 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 18:43:47.515 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 18:43:47.881 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 18:43:48.269 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 18:43:48.269 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 18:43:48.270 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 18:43:48.331 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 18:43:48.391 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 18:43:48.483 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 18:43:48.563 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 18:43:48.571 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18539cb1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@748f93bb]
[DEBUG] 2019-10-02 18:43:48.672 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 18:43:48.708 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 18:43:48.715 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 18:43:48.721 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 18:43:48.783 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:43:48.788 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 18:43:48.791 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 18:43:48.795 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 18:43:48.799 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 18:43:48.808 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 18:43:48.812 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:43:48.812 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 18:43:48.812 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 18:43:48.812 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 18:43:48.813 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 18:43:48.813 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:43:48.813 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 18:43:48.813 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 18:43:48.814 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 18:43:48.814 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 18:43:48.814 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:43:48.814 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 18:43:48.814 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 18:43:48.815 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 18:43:48.815 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 18:43:48.817 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 18:43:48.818 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:43:48.821 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:43:48.839 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:43:48.840 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:43:48.842 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 18:43:48.846 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 18:43:48.846 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 18:43:48.847 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:43:48.852 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 18:43:48.853 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:43:48.853 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 18:43:48.853 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 18:43:48.853 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 18:43:48.854 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 18:43:48.856 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 18:43:48.856 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 18:43:48.857 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 18:43:48.857 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 18:43:48.861 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:43:48.862 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 18:43:48.862 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 18:43:48.862 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 18:43:48.862 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 18:43:48.862 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 18:43:48.863 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:43:48.863 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 18:43:48.863 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 18:43:48.863 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 18:43:48.863 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 18:43:48.863 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:43:48.864 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 18:43:48.864 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 18:43:48.864 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 18:43:48.864 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 18:43:48.864 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:43:48.864 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 18:43:48.865 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 18:43:48.865 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 18:43:48.865 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 18:43:48.865 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 18:43:48.865 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:43:48.868 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 18:43:48.872 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 18:43:48.873 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 18:43:48.873 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 18:43:48.873 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 18:43:48.873 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 18:43:48.873 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 18:43:48.873 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 18:43:48.873 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 18:43:48.873 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 18:43:48.883 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 18:43:48.883 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 18:43:48.883 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:43:48.884 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 18:43:48.885 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 18:43:48.887 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 18:43:48.888 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 18:43:48.888 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 18:43:48.894 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 18:43:48.953 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 18:43:48.954 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 18:43:48.954 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 18:43:48.955 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 18:43:48.955 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 18:43:48.955 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 18:43:48.955 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 18:43:48.955 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 18:43:48.955 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 18:43:48.955 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 18:43:48.955 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 18:43:48.955 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 18:43:48.956 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 18:43:48.956 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 18:43:48.956 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 18:43:48.956 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 18:43:48.956 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 18:43:48.956 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 18:43:48.956 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 18:43:48.956 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 18:43:48.956 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 18:43:48.956 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 18:43:48.957 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 18:43:48.957 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 18:43:48.957 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 18:43:48.957 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 18:43:48.957 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 18:43:48.957 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 18:43:48.957 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 18:43:48.957 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 18:43:48.957 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 18:43:48.958 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 18:43:48.958 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 18:43:48.958 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 18:43:48.958 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 18:43:48.958 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 18:43:48.958 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 18:43:48.958 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 18:43:48.958 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 18:43:49.045 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 18:43:49.084 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 18:43:49.084 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.UserDaoTest,testInsertNewRecipe, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3249e278, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 18:43:49.111 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 18:43:49.111 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 18:43:49.112 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 18:43:49.112 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18539cb1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4f281aaf]
[DEBUG] 2019-10-02 18:43:49.184 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 18:43:49.185 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 18:43:49.217 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 18:43:49.217 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 18:43:49.601 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 18:43:49.601 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 18:43:49.602 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 18:43:49.602 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 18:43:49.646 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:43:49.646 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 18:43:49.646 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 18:43:49.646 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 18:43:49.646 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 18:43:49.651 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 18:43:49.652 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 18:43:49.652 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 18:43:49.652 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 18:43:49.652 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 18:43:49.652 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 18:43:49.652 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 18:43:49.682 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27da994b]
[DEBUG] 2019-10-02 18:43:49.684 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 18:43:49.684 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 18:43:49.684 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 18:43:49.684 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 18:43:49.692 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@35d7386b]
[DEBUG] 2019-10-02 18:43:49.695 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c7d7430]
[DEBUG] 2019-10-02 18:43:49.697 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 18:43:49.697 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 18:43:49.697 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 18:43:49.697 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 18:43:49.697 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 18:43:49.698 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 18:43:49.698 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 18:43:49.717 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 18:43:49.729 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 18:43:49.732 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:43:49.732 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@159ac15f]
[DEBUG] 2019-10-02 18:43:49.732 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 18:43:49.732 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 18:43:49.732 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 18:43:49.732 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 18:43:49.733 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7af1d072]
[DEBUG] 2019-10-02 18:43:49.733 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27ffd9f8]
[DEBUG] 2019-10-02 18:43:49.733 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 18:43:49.733 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 18:43:49.733 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 18:43:49.733 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 18:43:49.733 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 18:43:49.733 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 18:43:49.733 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 18:43:49.734 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 18:43:49.734 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 18:43:49.734 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:43:49.752 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:43:49.752 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:43:49.753 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 18:43:49.753 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 18:43:49.753 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 18:43:49.753 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 18:43:49.753 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 18:43:49.753 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 18:43:49.753 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 18:43:49.753 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@935d3f9]
[DEBUG] 2019-10-02 18:43:49.753 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 18:43:49.754 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 18:43:49.754 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 18:43:49.754 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 18:43:49.754 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5db0003d]
[DEBUG] 2019-10-02 18:43:49.755 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 18:43:49.755 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 18:43:49.755 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 18:43:49.755 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 18:43:49.755 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 18:43:49.755 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 18:43:49.755 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 18:43:49.755 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 18:43:49.756 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 18:43:49.756 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 18:43:49.756 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37d699a1]
[DEBUG] 2019-10-02 18:43:49.757 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 18:43:49.757 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 18:43:49.757 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 18:43:49.757 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 18:43:49.757 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8eb6f9a]
[DEBUG] 2019-10-02 18:43:49.757 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 18:43:49.758 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 18:43:49.758 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 18:43:49.758 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 18:43:49.758 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 18:43:49.758 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 18:43:49.758 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 18:43:49.758 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 18:43:49.759 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 18:43:49.759 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 18:43:49.760 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 18:43:49.760 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 18:43:49.767 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57e03347]
[DEBUG] 2019-10-02 18:43:49.767 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2edb2f8b]
[DEBUG] 2019-10-02 18:43:49.767 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 18:43:49.768 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 18:43:49.768 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 18:43:49.768 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 18:43:49.768 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 18:43:49.768 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 18:43:49.772 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 18:43:49.772 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 18:43:49.773 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 18:43:49.829 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 18:43:49.829 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 18:43:49.830 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 18:43:49.841 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 18:43:49.841 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 18:43:49.843 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 18:43:49.843 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 18:43:49.846 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@203b953c
[DEBUG] 2019-10-02 18:43:49.849 [main] SessionFactoryRegistry - Registering SessionFactory: 7c93d27b-d988-492f-83e5-a44b5ae92fe2 (<unnamed>)
[DEBUG] 2019-10-02 18:43:49.849 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 18:43:49.988 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 18:43:50.002 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 18:43:50.003 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 18:43:50.037 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 18:43:50.047 [main] SQL - insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 18:43:50.080 [main] IdentifierGeneratorHelper - Natively generated identity: 19
[DEBUG] 2019-10-02 18:43:50.080 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 18:43:50.087 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 18:43:50.087 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 18:43:50.091 [main] IdentifierGeneratorHelper - Natively generated identity: 4
[DEBUG] 2019-10-02 18:43:50.091 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 18:43:50.094 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 18:43:50.095 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 18:43:50.097 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 18:43:50.105 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#19], was: [<unreferenced>] (initialized)
[DEBUG] 2019-10-02 18:43:50.108 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2019-10-02 18:43:50.109 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-02 18:43:50.111 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 18:43:50.111 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Alex, lastName=Malotky, recipes=[com.alexmalotky.entity.Recipe#4], id=19, userName=ajmalotky, email=}
[DEBUG] 2019-10-02 18:43:50.111 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=, name=TestRecipe, ingredients=, id=4, user=com.alexmalotky.entity.User#19}
[DEBUG] 2019-10-02 18:43:50.120 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:43:50.122 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:43:50.141 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:43:50.150 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 18:43:50.153 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 18:43:50.159 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#19]
[DEBUG] 2019-10-02 18:43:50.168 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#19]
[DEBUG] 2019-10-02 18:43:50.168 [main] TwoPhaseLoad - Processing attribute `email` : value = 
[DEBUG] 2019-10-02 18:43:50.168 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:43:50.169 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 18:43:50.169 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:43:50.169 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 18:43:50.169 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:43:50.169 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 18:43:50.169 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:43:50.169 [main] TwoPhaseLoad - Processing attribute `userName` : value = ajmalotky
[DEBUG] 2019-10-02 18:43:50.169 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:43:50.170 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#19]
[DEBUG] 2019-10-02 18:43:50.170 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#4]
[DEBUG] 2019-10-02 18:43:50.170 [main] TwoPhaseLoad - Processing attribute `directions` : value = 
[DEBUG] 2019-10-02 18:43:50.170 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:43:50.170 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = 
[DEBUG] 2019-10-02 18:43:50.170 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:43:50.170 [main] TwoPhaseLoad - Processing attribute `name` : value = TestRecipe
[DEBUG] 2019-10-02 18:43:50.170 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:43:50.171 [main] TwoPhaseLoad - Processing attribute `user` : value = 19
[DEBUG] 2019-10-02 18:43:50.171 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:43:50.171 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#4]
[DEBUG] 2019-10-02 18:43:50.171 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:43:50.172 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#19]
[DEBUG] 2019-10-02 18:43:50.172 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:43:50.172 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 18:43:50.173 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#19
[DEBUG] 2019-10-02 18:43:50.173 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:44:44.461 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 18:44:44.465 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 18:44:44.471 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 18:44:44.590 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 18:44:44.593 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 18:44:44.901 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 18:44:44.903 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 18:44:44.911 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 18:44:45.313 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 18:44:45.343 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 18:44:45.344 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 18:44:45.371 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 18:44:45.414 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6850b758
[DEBUG] 2019-10-02 18:44:45.414 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6850b758
[DEBUG] 2019-10-02 18:44:45.414 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6850b758
[DEBUG] 2019-10-02 18:44:45.415 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4207609e
[DEBUG] 2019-10-02 18:44:45.416 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c6c82aa
[DEBUG] 2019-10-02 18:44:45.417 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3bddc676
[DEBUG] 2019-10-02 18:44:45.418 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@22e5f96e
[DEBUG] 2019-10-02 18:44:45.418 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@22e5f96e
[DEBUG] 2019-10-02 18:44:45.418 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@22e5f96e
[DEBUG] 2019-10-02 18:44:45.420 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3b4d50b
[DEBUG] 2019-10-02 18:44:45.421 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3b4d50b
[DEBUG] 2019-10-02 18:44:45.421 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3b4d50b
[DEBUG] 2019-10-02 18:44:45.422 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@31a3f4de
[DEBUG] 2019-10-02 18:44:45.422 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@31a3f4de
[DEBUG] 2019-10-02 18:44:45.422 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@31a3f4de
[DEBUG] 2019-10-02 18:44:45.424 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@14fa92af
[DEBUG] 2019-10-02 18:44:45.424 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@14fa92af
[DEBUG] 2019-10-02 18:44:45.424 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14fa92af
[DEBUG] 2019-10-02 18:44:45.426 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@360bc645
[DEBUG] 2019-10-02 18:44:45.426 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@360bc645
[DEBUG] 2019-10-02 18:44:45.426 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@360bc645
[DEBUG] 2019-10-02 18:44:45.427 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2a331b46
[DEBUG] 2019-10-02 18:44:45.427 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2a331b46
[DEBUG] 2019-10-02 18:44:45.427 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2a331b46
[DEBUG] 2019-10-02 18:44:45.429 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@304d0259
[DEBUG] 2019-10-02 18:44:45.429 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@304d0259
[DEBUG] 2019-10-02 18:44:45.429 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@304d0259
[DEBUG] 2019-10-02 18:44:45.430 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7915bca3
[DEBUG] 2019-10-02 18:44:45.430 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7915bca3
[DEBUG] 2019-10-02 18:44:45.432 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@eca6a74
[DEBUG] 2019-10-02 18:44:45.432 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@eca6a74
[DEBUG] 2019-10-02 18:44:45.433 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1442f788
[DEBUG] 2019-10-02 18:44:45.434 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1442f788
[DEBUG] 2019-10-02 18:44:45.434 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7a04fea7
[DEBUG] 2019-10-02 18:44:45.435 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@124ac145
[DEBUG] 2019-10-02 18:44:45.436 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@37e0292a
[DEBUG] 2019-10-02 18:44:45.436 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@37e0292a
[DEBUG] 2019-10-02 18:44:45.437 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@9b21bd3
[DEBUG] 2019-10-02 18:44:45.438 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@9b21bd3
[DEBUG] 2019-10-02 18:44:45.449 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@644ded04
[DEBUG] 2019-10-02 18:44:45.450 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@644ded04
[DEBUG] 2019-10-02 18:44:45.452 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@62e93c3a
[DEBUG] 2019-10-02 18:44:45.452 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@62e93c3a
[DEBUG] 2019-10-02 18:44:45.456 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5f038248
[DEBUG] 2019-10-02 18:44:45.456 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5f038248
[DEBUG] 2019-10-02 18:44:45.458 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1deceb67
[DEBUG] 2019-10-02 18:44:45.459 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1deceb67
[DEBUG] 2019-10-02 18:44:45.461 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d5c04f9
[DEBUG] 2019-10-02 18:44:45.461 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5d5c04f9
[DEBUG] 2019-10-02 18:44:45.463 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6724cdec
[DEBUG] 2019-10-02 18:44:45.463 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6724cdec
[DEBUG] 2019-10-02 18:44:45.479 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e8ab90f
[DEBUG] 2019-10-02 18:44:45.480 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1e8ab90f
[DEBUG] 2019-10-02 18:44:45.482 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5e65afb6
[DEBUG] 2019-10-02 18:44:45.483 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5e65afb6
[DEBUG] 2019-10-02 18:44:45.485 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5d21202d
[DEBUG] 2019-10-02 18:44:45.486 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5d21202d
[DEBUG] 2019-10-02 18:44:45.488 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1dba4e06
[DEBUG] 2019-10-02 18:44:45.488 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1dba4e06
[DEBUG] 2019-10-02 18:44:45.488 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1dba4e06
[DEBUG] 2019-10-02 18:44:45.491 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2f37f1f9
[DEBUG] 2019-10-02 18:44:45.493 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@146dcfe6
[DEBUG] 2019-10-02 18:44:45.493 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@146dcfe6
[DEBUG] 2019-10-02 18:44:45.493 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@146dcfe6
[DEBUG] 2019-10-02 18:44:45.495 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1b1f5012
[DEBUG] 2019-10-02 18:44:45.497 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@25290bca
[DEBUG] 2019-10-02 18:44:45.497 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@25290bca
[DEBUG] 2019-10-02 18:44:45.500 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@210308d5
[DEBUG] 2019-10-02 18:44:45.500 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@210308d5
[DEBUG] 2019-10-02 18:44:45.509 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6ede46f6
[DEBUG] 2019-10-02 18:44:45.509 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6ede46f6
[DEBUG] 2019-10-02 18:44:45.511 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@10a0fe30
[DEBUG] 2019-10-02 18:44:45.511 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10a0fe30
[DEBUG] 2019-10-02 18:44:45.513 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6920614
[DEBUG] 2019-10-02 18:44:45.513 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6920614
[DEBUG] 2019-10-02 18:44:45.514 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@433348bc
[DEBUG] 2019-10-02 18:44:45.516 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6403e24c
[DEBUG] 2019-10-02 18:44:45.517 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6403e24c
[DEBUG] 2019-10-02 18:44:45.517 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6403e24c
[DEBUG] 2019-10-02 18:44:45.519 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@227a47
[DEBUG] 2019-10-02 18:44:45.519 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@227a47
[DEBUG] 2019-10-02 18:44:45.519 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@227a47
[DEBUG] 2019-10-02 18:44:45.521 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@421056e5
[DEBUG] 2019-10-02 18:44:45.522 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@255eaa6b
[DEBUG] 2019-10-02 18:44:45.524 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7aac8884
[DEBUG] 2019-10-02 18:44:45.525 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7aac8884
[DEBUG] 2019-10-02 18:44:45.525 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7aac8884
[DEBUG] 2019-10-02 18:44:45.527 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@895416d
[DEBUG] 2019-10-02 18:44:45.528 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@895416d
[DEBUG] 2019-10-02 18:44:45.528 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@895416d
[DEBUG] 2019-10-02 18:44:45.529 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4c6007fb
[DEBUG] 2019-10-02 18:44:45.530 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2eae4349
[DEBUG] 2019-10-02 18:44:45.533 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6dd1c3ed
[DEBUG] 2019-10-02 18:44:45.533 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6dd1c3ed
[DEBUG] 2019-10-02 18:44:45.534 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6dfa915a
[DEBUG] 2019-10-02 18:44:45.537 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1e7ab390
[DEBUG] 2019-10-02 18:44:45.538 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1e7ab390
[DEBUG] 2019-10-02 18:44:45.540 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4b200971
[DEBUG] 2019-10-02 18:44:45.541 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b200971
[DEBUG] 2019-10-02 18:44:45.542 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12fcc71f
[DEBUG] 2019-10-02 18:44:45.542 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4f0f7849
[DEBUG] 2019-10-02 18:44:45.544 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@25ad4f71
[DEBUG] 2019-10-02 18:44:45.550 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@62dbe64e
[DEBUG] 2019-10-02 18:44:45.550 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62dbe64e
[DEBUG] 2019-10-02 18:44:45.551 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7baf1f5a
[DEBUG] 2019-10-02 18:44:45.551 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6cc86152
[DEBUG] 2019-10-02 18:44:45.551 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@611a990b
[DEBUG] 2019-10-02 18:44:45.551 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7cbeac65
[DEBUG] 2019-10-02 18:44:45.551 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7fe82967
[DEBUG] 2019-10-02 18:44:45.552 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@50850539
[DEBUG] 2019-10-02 18:44:45.552 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@65e21ce3
[DEBUG] 2019-10-02 18:44:45.552 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6c3659be
[DEBUG] 2019-10-02 18:44:45.614 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 18:44:45.616 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 18:44:45.618 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 18:44:45.618 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 18:44:45.619 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 18:44:45.621 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 18:44:45.622 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 18:44:45.625 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 18:44:45.627 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 18:44:45.628 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 18:44:45.629 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 18:44:45.630 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 18:44:45.631 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 18:44:45.632 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 18:44:45.644 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 18:44:45.645 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 18:44:45.645 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 18:44:45.894 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 18:44:46.168 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 18:44:46.168 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 18:44:46.169 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 18:44:46.218 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 18:44:46.258 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 18:44:46.302 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 18:44:46.396 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 18:44:46.401 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4a3bd45b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@34c70b5e]
[DEBUG] 2019-10-02 18:44:46.515 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 18:44:46.572 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 18:44:46.599 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 18:44:46.605 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 18:44:46.660 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:44:46.664 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 18:44:46.666 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 18:44:46.670 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 18:44:46.673 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 18:44:46.679 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 18:44:46.681 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:44:46.682 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 18:44:46.682 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 18:44:46.682 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 18:44:46.682 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 18:44:46.683 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:44:46.683 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 18:44:46.683 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 18:44:46.683 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 18:44:46.683 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 18:44:46.685 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:44:46.686 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 18:44:46.686 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 18:44:46.686 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 18:44:46.686 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 18:44:46.689 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 18:44:46.689 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:44:46.693 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:44:46.707 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:44:46.708 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:44:46.710 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 18:44:46.713 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 18:44:46.713 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 18:44:46.714 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:44:46.719 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 18:44:46.719 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:44:46.719 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 18:44:46.720 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 18:44:46.720 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 18:44:46.720 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 18:44:46.722 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 18:44:46.722 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 18:44:46.723 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 18:44:46.723 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 18:44:46.727 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:44:46.727 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 18:44:46.727 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 18:44:46.727 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 18:44:46.728 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 18:44:46.728 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 18:44:46.728 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:44:46.729 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 18:44:46.729 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 18:44:46.729 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 18:44:46.729 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 18:44:46.729 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:44:46.729 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 18:44:46.730 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 18:44:46.730 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 18:44:46.730 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 18:44:46.730 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:44:46.731 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 18:44:46.731 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 18:44:46.731 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 18:44:46.731 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 18:44:46.731 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 18:44:46.732 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:44:46.735 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 18:44:46.738 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 18:44:46.738 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 18:44:46.738 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 18:44:46.738 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 18:44:46.738 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 18:44:46.739 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 18:44:46.739 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 18:44:46.739 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 18:44:46.739 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 18:44:46.748 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 18:44:46.749 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 18:44:46.749 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:44:46.750 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 18:44:46.752 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 18:44:46.754 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 18:44:46.754 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 18:44:46.754 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 18:44:46.761 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 18:44:46.835 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 18:44:46.837 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 18:44:46.838 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 18:44:46.838 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 18:44:46.838 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 18:44:46.838 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 18:44:46.838 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 18:44:46.838 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 18:44:46.838 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 18:44:46.839 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 18:44:46.839 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 18:44:46.839 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 18:44:46.839 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 18:44:46.839 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 18:44:46.839 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 18:44:46.839 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 18:44:46.839 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 18:44:46.839 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 18:44:46.839 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 18:44:46.840 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 18:44:46.840 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 18:44:46.840 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 18:44:46.840 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 18:44:46.840 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 18:44:46.840 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 18:44:46.840 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 18:44:46.840 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 18:44:46.840 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 18:44:46.841 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 18:44:46.841 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 18:44:46.841 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 18:44:46.841 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 18:44:46.841 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 18:44:46.841 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 18:44:46.841 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 18:44:46.841 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 18:44:46.841 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 18:44:46.841 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 18:44:46.842 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 18:44:46.925 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 18:44:46.953 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 18:44:46.953 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.UserDaoTest,testInsertNewRecipe, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3292d91a, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 18:44:46.991 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 18:44:46.991 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 18:44:46.992 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 18:44:46.992 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4a3bd45b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4e0cc334]
[DEBUG] 2019-10-02 18:44:47.071 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 18:44:47.072 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 18:44:47.096 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 18:44:47.096 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 18:44:47.396 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 18:44:47.397 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 18:44:47.397 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 18:44:47.397 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 18:44:47.437 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:44:47.437 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 18:44:47.438 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 18:44:47.438 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 18:44:47.438 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 18:44:47.443 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 18:44:47.443 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 18:44:47.443 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 18:44:47.443 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 18:44:47.443 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 18:44:47.443 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 18:44:47.443 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 18:44:47.471 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23ad2d17]
[DEBUG] 2019-10-02 18:44:47.473 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 18:44:47.473 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 18:44:47.473 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 18:44:47.473 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 18:44:47.479 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@259287ac]
[DEBUG] 2019-10-02 18:44:47.482 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b4814d0]
[DEBUG] 2019-10-02 18:44:47.484 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 18:44:47.484 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 18:44:47.485 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 18:44:47.485 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 18:44:47.485 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 18:44:47.485 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 18:44:47.486 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 18:44:47.501 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 18:44:47.512 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 18:44:47.515 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:44:47.515 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2edb2f8b]
[DEBUG] 2019-10-02 18:44:47.515 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 18:44:47.515 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 18:44:47.515 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 18:44:47.515 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 18:44:47.515 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@21dea711]
[DEBUG] 2019-10-02 18:44:47.516 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7772d266]
[DEBUG] 2019-10-02 18:44:47.516 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 18:44:47.516 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 18:44:47.516 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 18:44:47.516 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 18:44:47.516 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 18:44:47.516 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 18:44:47.516 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 18:44:47.516 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 18:44:47.517 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 18:44:47.517 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:44:47.534 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:44:47.534 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:44:47.534 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 18:44:47.535 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 18:44:47.535 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 18:44:47.535 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 18:44:47.535 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 18:44:47.535 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 18:44:47.535 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 18:44:47.535 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b56ec6c]
[DEBUG] 2019-10-02 18:44:47.535 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 18:44:47.535 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 18:44:47.535 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 18:44:47.535 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 18:44:47.535 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dc59ec2]
[DEBUG] 2019-10-02 18:44:47.536 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 18:44:47.536 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 18:44:47.536 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 18:44:47.536 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 18:44:47.536 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 18:44:47.536 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 18:44:47.537 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 18:44:47.537 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 18:44:47.537 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 18:44:47.538 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 18:44:47.538 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a814310]
[DEBUG] 2019-10-02 18:44:47.538 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 18:44:47.538 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 18:44:47.538 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 18:44:47.538 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 18:44:47.538 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e67cfe1]
[DEBUG] 2019-10-02 18:44:47.538 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 18:44:47.538 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 18:44:47.539 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 18:44:47.539 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 18:44:47.539 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 18:44:47.539 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 18:44:47.539 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 18:44:47.539 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 18:44:47.540 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 18:44:47.540 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 18:44:47.541 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 18:44:47.541 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 18:44:47.547 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4df7d9ee]
[DEBUG] 2019-10-02 18:44:47.547 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@781dac73]
[DEBUG] 2019-10-02 18:44:47.547 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 18:44:47.547 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 18:44:47.547 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 18:44:47.547 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 18:44:47.548 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 18:44:47.548 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 18:44:47.551 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 18:44:47.552 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 18:44:47.553 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 18:44:47.591 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 18:44:47.591 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 18:44:47.592 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 18:44:47.599 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 18:44:47.599 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 18:44:47.601 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 18:44:47.601 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 18:44:47.603 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3a0896b3
[DEBUG] 2019-10-02 18:44:47.605 [main] SessionFactoryRegistry - Registering SessionFactory: a2a385d4-e86e-476f-9ced-f05ab993bd49 (<unnamed>)
[DEBUG] 2019-10-02 18:44:47.605 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 18:44:47.706 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 18:44:47.721 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 18:44:47.721 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 18:44:47.749 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 18:44:47.755 [main] SQL - insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 18:44:47.793 [main] IdentifierGeneratorHelper - Natively generated identity: 20
[DEBUG] 2019-10-02 18:44:47.794 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 18:44:47.800 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 18:44:47.800 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 18:44:47.804 [main] IdentifierGeneratorHelper - Natively generated identity: 5
[DEBUG] 2019-10-02 18:44:47.804 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 18:44:47.807 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 18:44:47.808 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 18:44:47.809 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 18:44:47.815 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#20], was: [<unreferenced>] (initialized)
[DEBUG] 2019-10-02 18:44:47.817 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2019-10-02 18:44:47.817 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-02 18:44:47.819 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 18:44:47.820 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Alex, lastName=Malotky, recipes=[com.alexmalotky.entity.Recipe#5], id=20, userName=ajmalotky, email=}
[DEBUG] 2019-10-02 18:44:47.820 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=, name=TestRecipe, ingredients=, id=5, user=com.alexmalotky.entity.User#20}
[DEBUG] 2019-10-02 18:44:47.824 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:44:47.826 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:44:47.840 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:44:47.847 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 18:44:47.849 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 18:44:47.853 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#20]
[DEBUG] 2019-10-02 18:44:47.859 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#20]
[DEBUG] 2019-10-02 18:44:47.859 [main] TwoPhaseLoad - Processing attribute `email` : value = 
[DEBUG] 2019-10-02 18:44:47.859 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:44:47.859 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 18:44:47.860 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:44:47.860 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 18:44:47.860 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:44:47.860 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 18:44:47.860 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:44:47.860 [main] TwoPhaseLoad - Processing attribute `userName` : value = ajmalotky
[DEBUG] 2019-10-02 18:44:47.860 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:44:47.860 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#20]
[DEBUG] 2019-10-02 18:44:47.860 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#5]
[DEBUG] 2019-10-02 18:44:47.860 [main] TwoPhaseLoad - Processing attribute `directions` : value = 
[DEBUG] 2019-10-02 18:44:47.860 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:44:47.861 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = 
[DEBUG] 2019-10-02 18:44:47.861 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:44:47.861 [main] TwoPhaseLoad - Processing attribute `name` : value = TestRecipe
[DEBUG] 2019-10-02 18:44:47.861 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:44:47.861 [main] TwoPhaseLoad - Processing attribute `user` : value = 20
[DEBUG] 2019-10-02 18:44:47.861 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:44:47.861 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#5]
[DEBUG] 2019-10-02 18:44:47.861 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:44:47.861 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#20]
[DEBUG] 2019-10-02 18:44:47.861 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:44:47.862 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 18:44:47.862 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#20
[DEBUG] 2019-10-02 18:44:47.862 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:45:31.734 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 18:45:31.738 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 18:45:31.746 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 18:45:31.863 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 18:45:31.866 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 18:45:32.178 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 18:45:32.179 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 18:45:32.188 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 18:45:32.599 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 18:45:32.628 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 18:45:32.629 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 18:45:32.657 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 18:45:32.698 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2a2ef072
[DEBUG] 2019-10-02 18:45:32.699 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2a2ef072
[DEBUG] 2019-10-02 18:45:32.699 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2a2ef072
[DEBUG] 2019-10-02 18:45:32.699 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1f77b5cc
[DEBUG] 2019-10-02 18:45:32.700 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2e179f3e
[DEBUG] 2019-10-02 18:45:32.701 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@29a1505c
[DEBUG] 2019-10-02 18:45:32.702 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6a638c79
[DEBUG] 2019-10-02 18:45:32.702 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6a638c79
[DEBUG] 2019-10-02 18:45:32.703 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6a638c79
[DEBUG] 2019-10-02 18:45:32.704 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5b22d8a1
[DEBUG] 2019-10-02 18:45:32.704 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5b22d8a1
[DEBUG] 2019-10-02 18:45:32.704 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5b22d8a1
[DEBUG] 2019-10-02 18:45:32.706 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@68880c21
[DEBUG] 2019-10-02 18:45:32.706 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@68880c21
[DEBUG] 2019-10-02 18:45:32.706 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@68880c21
[DEBUG] 2019-10-02 18:45:32.707 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@b16e202
[DEBUG] 2019-10-02 18:45:32.707 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@b16e202
[DEBUG] 2019-10-02 18:45:32.707 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@b16e202
[DEBUG] 2019-10-02 18:45:32.709 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4edef76c
[DEBUG] 2019-10-02 18:45:32.709 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4edef76c
[DEBUG] 2019-10-02 18:45:32.709 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4edef76c
[DEBUG] 2019-10-02 18:45:32.710 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@15383681
[DEBUG] 2019-10-02 18:45:32.710 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@15383681
[DEBUG] 2019-10-02 18:45:32.711 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15383681
[DEBUG] 2019-10-02 18:45:32.712 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1d23ff23
[DEBUG] 2019-10-02 18:45:32.712 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1d23ff23
[DEBUG] 2019-10-02 18:45:32.713 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1d23ff23
[DEBUG] 2019-10-02 18:45:32.714 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@68d651f2
[DEBUG] 2019-10-02 18:45:32.714 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@68d651f2
[DEBUG] 2019-10-02 18:45:32.715 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@79fd6f95
[DEBUG] 2019-10-02 18:45:32.715 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@79fd6f95
[DEBUG] 2019-10-02 18:45:32.717 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@113e13f9
[DEBUG] 2019-10-02 18:45:32.717 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@113e13f9
[DEBUG] 2019-10-02 18:45:32.718 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1bc49bc5
[DEBUG] 2019-10-02 18:45:32.718 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2def7a7a
[DEBUG] 2019-10-02 18:45:32.719 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4af70944
[DEBUG] 2019-10-02 18:45:32.720 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4af70944
[DEBUG] 2019-10-02 18:45:32.721 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@a62c7cd
[DEBUG] 2019-10-02 18:45:32.721 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@a62c7cd
[DEBUG] 2019-10-02 18:45:32.733 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5292ceca
[DEBUG] 2019-10-02 18:45:32.733 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5292ceca
[DEBUG] 2019-10-02 18:45:32.735 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@673919a7
[DEBUG] 2019-10-02 18:45:32.735 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@673919a7
[DEBUG] 2019-10-02 18:45:32.738 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@78e22d35
[DEBUG] 2019-10-02 18:45:32.738 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@78e22d35
[DEBUG] 2019-10-02 18:45:32.740 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@582a764a
[DEBUG] 2019-10-02 18:45:32.740 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@582a764a
[DEBUG] 2019-10-02 18:45:32.742 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6f49d153
[DEBUG] 2019-10-02 18:45:32.742 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6f49d153
[DEBUG] 2019-10-02 18:45:32.757 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6944e53e
[DEBUG] 2019-10-02 18:45:32.757 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6944e53e
[DEBUG] 2019-10-02 18:45:32.761 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@78d6447a
[DEBUG] 2019-10-02 18:45:32.761 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@78d6447a
[DEBUG] 2019-10-02 18:45:32.763 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5b3a7ef5
[DEBUG] 2019-10-02 18:45:32.763 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5b3a7ef5
[DEBUG] 2019-10-02 18:45:32.765 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@14b789f6
[DEBUG] 2019-10-02 18:45:32.765 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@14b789f6
[DEBUG] 2019-10-02 18:45:32.766 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4beaf6bd
[DEBUG] 2019-10-02 18:45:32.766 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4beaf6bd
[DEBUG] 2019-10-02 18:45:32.767 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4beaf6bd
[DEBUG] 2019-10-02 18:45:32.768 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3374b5bc
[DEBUG] 2019-10-02 18:45:32.769 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@22587507
[DEBUG] 2019-10-02 18:45:32.770 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@22587507
[DEBUG] 2019-10-02 18:45:32.770 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@22587507
[DEBUG] 2019-10-02 18:45:32.771 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7add323c
[DEBUG] 2019-10-02 18:45:32.780 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@76563d26
[DEBUG] 2019-10-02 18:45:32.780 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@76563d26
[DEBUG] 2019-10-02 18:45:32.782 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@22a736d7
[DEBUG] 2019-10-02 18:45:32.782 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@22a736d7
[DEBUG] 2019-10-02 18:45:32.783 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@66273da0
[DEBUG] 2019-10-02 18:45:32.784 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@66273da0
[DEBUG] 2019-10-02 18:45:32.785 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7b6860f9
[DEBUG] 2019-10-02 18:45:32.786 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7b6860f9
[DEBUG] 2019-10-02 18:45:32.787 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6069dd38
[DEBUG] 2019-10-02 18:45:32.787 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6069dd38
[DEBUG] 2019-10-02 18:45:32.787 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6d1dcdff
[DEBUG] 2019-10-02 18:45:32.789 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2f236de0
[DEBUG] 2019-10-02 18:45:32.789 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2f236de0
[DEBUG] 2019-10-02 18:45:32.789 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2f236de0
[DEBUG] 2019-10-02 18:45:32.790 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@9596ce8
[DEBUG] 2019-10-02 18:45:32.790 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@9596ce8
[DEBUG] 2019-10-02 18:45:32.790 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@9596ce8
[DEBUG] 2019-10-02 18:45:32.792 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@2849434b
[DEBUG] 2019-10-02 18:45:32.792 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@476fe690
[DEBUG] 2019-10-02 18:45:32.794 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@a66e580
[DEBUG] 2019-10-02 18:45:32.794 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@a66e580
[DEBUG] 2019-10-02 18:45:32.794 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@a66e580
[DEBUG] 2019-10-02 18:45:32.795 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71a06021
[DEBUG] 2019-10-02 18:45:32.796 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71a06021
[DEBUG] 2019-10-02 18:45:32.796 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71a06021
[DEBUG] 2019-10-02 18:45:32.796 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3e33d73e
[DEBUG] 2019-10-02 18:45:32.797 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@e84fb85
[DEBUG] 2019-10-02 18:45:32.799 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@22a6e998
[DEBUG] 2019-10-02 18:45:32.799 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@22a6e998
[DEBUG] 2019-10-02 18:45:32.800 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@78054f54
[DEBUG] 2019-10-02 18:45:32.801 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@625d9132
[DEBUG] 2019-10-02 18:45:32.801 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@625d9132
[DEBUG] 2019-10-02 18:45:32.803 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1a2bcd56
[DEBUG] 2019-10-02 18:45:32.803 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1a2bcd56
[DEBUG] 2019-10-02 18:45:32.804 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5679e96b
[DEBUG] 2019-10-02 18:45:32.804 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@56a4f272
[DEBUG] 2019-10-02 18:45:32.805 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@49faf066
[DEBUG] 2019-10-02 18:45:32.810 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6cff61fc
[DEBUG] 2019-10-02 18:45:32.810 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6cff61fc
[DEBUG] 2019-10-02 18:45:32.811 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6cc86152
[DEBUG] 2019-10-02 18:45:32.811 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@611a990b
[DEBUG] 2019-10-02 18:45:32.811 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7cbeac65
[DEBUG] 2019-10-02 18:45:32.812 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7fe82967
[DEBUG] 2019-10-02 18:45:32.812 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@50850539
[DEBUG] 2019-10-02 18:45:32.812 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@65e21ce3
[DEBUG] 2019-10-02 18:45:32.812 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6c3659be
[DEBUG] 2019-10-02 18:45:32.812 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@522bf64e
[DEBUG] 2019-10-02 18:45:32.861 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 18:45:32.862 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 18:45:32.863 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 18:45:32.864 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 18:45:32.865 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 18:45:32.866 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 18:45:32.867 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 18:45:32.869 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 18:45:32.870 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 18:45:32.871 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 18:45:32.871 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 18:45:32.872 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 18:45:32.872 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 18:45:32.873 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 18:45:32.883 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 18:45:32.883 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 18:45:32.883 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 18:45:33.150 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 18:45:33.476 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 18:45:33.477 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 18:45:33.477 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 18:45:33.514 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 18:45:33.543 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 18:45:33.605 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 18:45:33.703 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 18:45:33.711 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@34c70b5e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4f2d995e]
[DEBUG] 2019-10-02 18:45:33.792 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 18:45:33.828 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 18:45:33.840 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 18:45:33.845 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 18:45:33.902 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:45:33.907 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 18:45:33.909 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 18:45:33.913 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 18:45:33.917 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 18:45:33.924 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 18:45:33.925 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:45:33.926 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 18:45:33.926 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 18:45:33.926 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 18:45:33.926 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 18:45:33.926 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:45:33.927 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 18:45:33.927 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 18:45:33.927 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 18:45:33.927 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 18:45:33.927 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:45:33.927 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 18:45:33.927 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 18:45:33.927 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 18:45:33.927 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 18:45:33.929 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 18:45:33.929 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:45:33.932 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:45:33.943 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:45:33.944 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:45:33.945 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 18:45:33.947 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 18:45:33.947 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 18:45:33.949 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:33.952 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 18:45:33.952 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:45:33.952 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 18:45:33.953 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 18:45:33.953 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 18:45:33.953 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 18:45:33.954 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 18:45:33.955 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 18:45:33.955 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 18:45:33.955 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 18:45:33.958 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:45:33.958 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 18:45:33.958 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 18:45:33.958 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 18:45:33.958 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 18:45:33.959 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 18:45:33.959 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:45:33.959 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 18:45:33.959 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 18:45:33.959 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 18:45:33.959 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 18:45:33.959 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:45:33.960 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 18:45:33.960 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 18:45:33.960 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 18:45:33.960 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 18:45:33.960 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:45:33.961 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 18:45:33.963 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 18:45:33.963 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 18:45:33.963 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 18:45:33.964 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 18:45:33.964 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 18:45:33.967 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 18:45:33.970 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 18:45:33.971 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 18:45:33.971 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 18:45:33.971 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 18:45:33.971 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 18:45:33.971 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 18:45:33.971 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 18:45:33.971 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 18:45:33.971 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 18:45:33.979 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 18:45:33.979 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 18:45:33.980 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:33.981 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 18:45:33.983 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 18:45:33.985 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 18:45:33.985 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 18:45:33.985 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 18:45:33.990 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 18:45:34.032 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 18:45:34.033 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 18:45:34.033 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 18:45:34.033 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 18:45:34.034 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 18:45:34.034 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 18:45:34.034 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 18:45:34.034 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 18:45:34.034 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 18:45:34.034 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 18:45:34.034 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 18:45:34.034 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 18:45:34.034 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 18:45:34.034 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 18:45:34.035 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 18:45:34.035 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 18:45:34.035 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 18:45:34.035 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 18:45:34.035 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 18:45:34.035 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 18:45:34.035 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 18:45:34.035 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 18:45:34.035 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 18:45:34.035 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 18:45:34.035 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 18:45:34.035 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 18:45:34.035 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 18:45:34.036 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 18:45:34.036 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 18:45:34.036 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 18:45:34.036 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 18:45:34.036 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 18:45:34.036 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 18:45:34.036 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 18:45:34.036 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 18:45:34.036 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 18:45:34.036 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 18:45:34.036 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 18:45:34.036 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 18:45:34.107 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 18:45:34.138 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 18:45:34.138 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.UserDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5921b93c, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 18:45:34.160 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 18:45:34.161 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 18:45:34.162 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 18:45:34.162 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@34c70b5e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1e12a5a6]
[DEBUG] 2019-10-02 18:45:34.229 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 18:45:34.229 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 18:45:34.252 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 18:45:34.252 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 18:45:34.643 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 18:45:34.643 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 18:45:34.645 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 18:45:34.645 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 18:45:34.695 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:34.695 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 18:45:34.695 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 18:45:34.695 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 18:45:34.695 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 18:45:34.700 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 18:45:34.700 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 18:45:34.700 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 18:45:34.700 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 18:45:34.700 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 18:45:34.700 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 18:45:34.700 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 18:45:34.728 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bce4140]
[DEBUG] 2019-10-02 18:45:34.729 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 18:45:34.730 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 18:45:34.730 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 18:45:34.730 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 18:45:34.736 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1abcd059]
[DEBUG] 2019-10-02 18:45:34.739 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ae8fb2a]
[DEBUG] 2019-10-02 18:45:34.741 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 18:45:34.741 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 18:45:34.741 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 18:45:34.741 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 18:45:34.741 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 18:45:34.742 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 18:45:34.742 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 18:45:34.758 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 18:45:34.766 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 18:45:34.768 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:45:34.769 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@733f1395]
[DEBUG] 2019-10-02 18:45:34.769 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 18:45:34.769 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 18:45:34.769 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 18:45:34.769 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 18:45:34.769 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7772d266]
[DEBUG] 2019-10-02 18:45:34.769 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a21c74]
[DEBUG] 2019-10-02 18:45:34.769 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 18:45:34.769 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 18:45:34.769 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 18:45:34.769 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 18:45:34.769 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 18:45:34.770 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 18:45:34.770 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 18:45:34.770 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 18:45:34.770 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 18:45:34.771 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:45:34.787 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:45:34.788 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:45:34.788 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 18:45:34.788 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 18:45:34.788 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 18:45:34.788 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 18:45:34.789 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 18:45:34.789 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 18:45:34.789 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 18:45:34.789 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5abf6a99]
[DEBUG] 2019-10-02 18:45:34.789 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 18:45:34.789 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 18:45:34.789 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 18:45:34.789 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 18:45:34.789 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@375084c9]
[DEBUG] 2019-10-02 18:45:34.790 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 18:45:34.790 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 18:45:34.790 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 18:45:34.790 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 18:45:34.790 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 18:45:34.790 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 18:45:34.790 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 18:45:34.791 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 18:45:34.792 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 18:45:34.792 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 18:45:34.792 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bbf38b8]
[DEBUG] 2019-10-02 18:45:34.792 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 18:45:34.792 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 18:45:34.792 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 18:45:34.792 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 18:45:34.792 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55bf35e5]
[DEBUG] 2019-10-02 18:45:34.792 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 18:45:34.793 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 18:45:34.793 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 18:45:34.793 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 18:45:34.793 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 18:45:34.793 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 18:45:34.793 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 18:45:34.793 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 18:45:34.794 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 18:45:34.794 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 18:45:34.794 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 18:45:34.795 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 18:45:34.800 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@781dac73]
[DEBUG] 2019-10-02 18:45:34.800 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a4e524]
[DEBUG] 2019-10-02 18:45:34.801 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 18:45:34.801 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 18:45:34.801 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 18:45:34.801 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 18:45:34.801 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 18:45:34.801 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 18:45:34.805 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 18:45:34.805 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 18:45:34.806 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 18:45:34.845 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 18:45:34.845 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 18:45:34.845 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 18:45:34.852 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 18:45:34.852 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 18:45:34.854 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 18:45:34.854 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 18:45:34.856 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@50a7c72b
[DEBUG] 2019-10-02 18:45:34.858 [main] SessionFactoryRegistry - Registering SessionFactory: 66ae5d46-9d31-4782-a67e-3c14c251b378 (<unnamed>)
[DEBUG] 2019-10-02 18:45:34.858 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 18:45:34.951 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 18:45:34.993 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2019-10-02 18:45:35.015 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3a3ad8e7
[DEBUG] 2019-10-02 18:45:35.048 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.User as generatedAlias0
[DEBUG] 2019-10-02 18:45:35.057 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 18:45:35.068 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'alexmalotky'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-10-02 18:45:35.100 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-02 18:45:35.120 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.User (generatedAlias0) -> user0_
[DEBUG] 2019-10-02 18:45:35.121 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-10-02 18:45:35.124 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-02 18:45:35.124 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} users user0_ ) )
[DEBUG] 2019-10-02 18:45:35.136 [main] JoinProcessor - Using FROM fragment [users user0_]
[DEBUG] 2019-10-02 18:45:35.136 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-02 18:45:35.137 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_1_' {alias=generatedAlias0, className=com.alexmalotky.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_1_, user0_.first_name as first_na3_1_, user0_.last_name as last_nam4_1_, user0_.user_name as user_nam5_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.alexmalotky.entity.User}}

[DEBUG] 2019-10-02 18:45:35.137 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 18:45:35.145 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.User as generatedAlias0
[DEBUG] 2019-10-02 18:45:35.145 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_1_, user0_.email as email2_1_, user0_.first_name as first_na3_1_, user0_.last_name as last_nam4_1_, user0_.user_name as user_nam5_1_ from users user0_
[DEBUG] 2019-10-02 18:45:35.145 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 18:45:35.168 [main] SQL - select user0_.id as id1_1_, user0_.email as email2_1_, user0_.first_name as first_na3_1_, user0_.last_name as last_nam4_1_, user0_.user_name as user_nam5_1_ from users user0_
[DEBUG] 2019-10-02 18:45:35.197 [main] Loader - Result set row: 0
[DEBUG] 2019-10-02 18:45:35.201 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 18:45:35.210 [main] Loader - Result set row: 1
[DEBUG] 2019-10-02 18:45:35.210 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 18:45:35.210 [main] Loader - Result set row: 2
[DEBUG] 2019-10-02 18:45:35.210 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 18:45:35.211 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 18:45:35.212 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 18:45:35.213 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.213 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 18:45:35.213 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.213 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 18:45:35.213 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.213 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 18:45:35.214 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.223 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 18:45:35.223 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.224 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 18:45:35.224 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 18:45:35.225 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 18:45:35.225 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.225 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 18:45:35.225 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.225 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 18:45:35.225 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.225 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 18:45:35.225 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.225 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-02 18:45:35.225 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.225 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 18:45:35.225 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 18:45:35.225 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 18:45:35.225 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.225 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 18:45:35.226 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.226 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 18:45:35.226 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.226 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 18:45:35.226 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.226 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 18:45:35.226 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.226 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 18:45:35.230 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 18:45:35.231 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 18:45:35.238 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 18:45:35.243 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 18:45:35.246 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 18:45:35.252 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 18:45:35.253 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-02 18:45:35.253 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.253 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-02 18:45:35.253 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.253 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 18:45:35.253 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.253 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 18:45:35.253 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.253 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 18:45:35.253 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:35.254 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 18:45:35.254 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:35.254 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 18:45:35.254 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 18:45:35.254 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 18:45:35.254 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 18:45:35.256 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 18:45:35.257 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 18:45:35.257 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 18:45:35.257 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 18:45:35.257 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-02 18:45:35.257 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.257 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-02 18:45:35.257 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.257 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-02 18:45:35.257 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.257 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-02 18:45:35.258 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.258 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 18:45:35.258 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:35.258 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 18:45:35.258 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:35.258 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 18:45:35.258 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 18:45:35.258 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 18:45:35.258 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 18:45:35.260 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 18:45:35.261 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 18:45:35.261 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 18:45:35.261 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 18:45:35.261 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 18:45:35.261 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.261 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 18:45:35.261 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.261 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 18:45:35.261 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.261 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 18:45:35.262 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.262 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 18:45:35.262 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:35.262 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 18:45:35.262 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:35.262 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 18:45:35.262 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 18:45:35.264 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:45:35.363 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:45:35.370 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 18:45:35.370 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 18:45:35.371 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 18:45:35.371 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 18:45:35.371 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 18:45:35.371 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.371 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 18:45:35.371 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.372 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 18:45:35.372 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.372 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 18:45:35.372 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.372 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-02 18:45:35.372 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.372 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 18:45:35.372 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 18:45:35.373 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-02 18:45:35.373 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.373 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-02 18:45:35.373 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.373 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-02 18:45:35.373 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.373 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-02 18:45:35.373 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.373 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 18:45:35.374 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:35.374 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 18:45:35.374 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:35.374 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 18:45:35.375 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#2
[DEBUG] 2019-10-02 18:45:35.375 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:45:35.382 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 18:45:35.382 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 18:45:35.400 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 18:45:35.402 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 18:45:35.402 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 18:45:35.403 [main] CollectionEntry - Collection dirty: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 18:45:35.411 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#2], was: [com.alexmalotky.entity.User.recipes#2] (initialized)
[DEBUG] 2019-10-02 18:45:35.413 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 1 deletions to 2 objects
[DEBUG] 2019-10-02 18:45:35.413 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 1 updates, 0 removals to 1 collections
[DEBUG] 2019-10-02 18:45:35.415 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 18:45:35.415 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Alex, lastName=Malotky, recipes=[], id=2, userName=test2, email=null}
[DEBUG] 2019-10-02 18:45:35.415 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions={"Poor sauce into sauce pan", " Bring sauce to a boil"}, name=Boss Sauce, ingredients={ {"Spagheti Sauce" , "16 oz" } }, id=2, user=com.alexmalotky.entity.User#2}
[DEBUG] 2019-10-02 18:45:35.421 [main] SQL - update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 18:45:35.434 [main] SQL - delete from recipes where id=?
[DEBUG] 2019-10-02 18:45:35.444 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:45:35.446 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:45:35.446 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2019-10-02 18:45:35.499 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:45:35.506 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 18:45:35.507 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 18:45:35.507 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 18:45:35.508 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 18:45:35.508 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 18:45:35.508 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.508 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 18:45:35.508 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.508 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 18:45:35.508 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.508 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 18:45:35.508 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.508 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-02 18:45:35.508 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.508 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 18:45:35.508 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 18:45:35.509 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-02 18:45:35.509 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.509 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-02 18:45:35.509 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.509 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-02 18:45:35.509 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.509 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-02 18:45:35.509 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.509 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 18:45:35.509 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:35.509 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 18:45:35.509 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:35.509 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 18:45:35.510 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#2
[DEBUG] 2019-10-02 18:45:35.510 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:45:35.568 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:45:35.574 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 18:45:35.575 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 18:45:35.575 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 18:45:35.576 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 18:45:35.576 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 18:45:35.576 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.576 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 18:45:35.576 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.576 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 18:45:35.576 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.576 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 18:45:35.576 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.577 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 18:45:35.577 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.577 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 18:45:35.577 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 18:45:35.577 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-02 18:45:35.577 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.577 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-02 18:45:35.577 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.577 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 18:45:35.577 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.578 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 18:45:35.578 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.578 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 18:45:35.578 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:35.578 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 18:45:35.578 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:35.578 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 18:45:35.579 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#3
[DEBUG] 2019-10-02 18:45:35.579 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:45:35.582 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 18:45:35.582 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 18:45:35.586 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 18:45:35.586 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 18:45:35.586 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 18:45:35.586 [main] Collections - Collection dereferenced: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 18:45:35.587 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 2 deletions to 2 objects
[DEBUG] 2019-10-02 18:45:35.587 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2019-10-02 18:45:35.587 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 18:45:35.588 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions={"Instruction 1", "Instruction 2"}, name=Test Recipe, ingredients={ {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }, id=3, user=com.alexmalotky.entity.User#3}
[DEBUG] 2019-10-02 18:45:35.588 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Ben, lastName=Wyatt, recipes=[com.alexmalotky.entity.Recipe#3], id=3, userName=test3, email=null}
[DEBUG] 2019-10-02 18:45:35.588 [main] SQL - delete from recipes where id=?
[DEBUG] 2019-10-02 18:45:35.591 [main] SQL - delete from users where id=?
[DEBUG] 2019-10-02 18:45:35.596 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:45:35.597 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:45:35.598 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2019-10-02 18:45:35.598 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:45:35.601 [main] CollectionLoadContext - No collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:35.601 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 18:45:35.602 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#3
[DEBUG] 2019-10-02 18:45:35.602 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:45:35.655 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 18:45:35.655 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 18:45:35.664 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 18:45:35.666 [main] SQL - insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 18:45:35.675 [main] IdentifierGeneratorHelper - Natively generated identity: 21
[DEBUG] 2019-10-02 18:45:35.676 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 18:45:35.677 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 18:45:35.677 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 18:45:35.677 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 18:45:35.677 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#21], was: [<unreferenced>] (initialized)
[DEBUG] 2019-10-02 18:45:35.678 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-10-02 18:45:35.678 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-02 18:45:35.678 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 18:45:35.678 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Leroy, lastName=Jenkins, recipes=[], id=21, userName=Blah Blah Blah, email=null}
[DEBUG] 2019-10-02 18:45:35.680 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:45:35.681 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:45:35.682 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:45:35.685 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 18:45:35.686 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 18:45:35.686 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.alexmalotky.entity.User.recipes#21]
[DEBUG] 2019-10-02 18:45:35.686 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#21]
[DEBUG] 2019-10-02 18:45:35.687 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 18:45:35.687 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.687 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Leroy
[DEBUG] 2019-10-02 18:45:35.687 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.687 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jenkins
[DEBUG] 2019-10-02 18:45:35.687 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.687 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 18:45:35.687 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.687 [main] TwoPhaseLoad - Processing attribute `userName` : value = Blah Blah Blah
[DEBUG] 2019-10-02 18:45:35.687 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.687 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#21]
[DEBUG] 2019-10-02 18:45:35.687 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:35.687 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#21]
[DEBUG] 2019-10-02 18:45:35.688 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:35.688 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 18:45:35.688 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#21
[DEBUG] 2019-10-02 18:45:35.688 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:45:35.731 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 18:45:35.732 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 18:45:35.734 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 18:45:35.734 [main] SQL - insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 18:45:35.736 [main] IdentifierGeneratorHelper - Natively generated identity: 22
[DEBUG] 2019-10-02 18:45:35.736 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 18:45:35.738 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 18:45:35.739 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 18:45:35.741 [main] IdentifierGeneratorHelper - Natively generated identity: 6
[DEBUG] 2019-10-02 18:45:35.741 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 18:45:35.742 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 18:45:35.742 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 18:45:35.742 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 18:45:35.743 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#22], was: [<unreferenced>] (initialized)
[DEBUG] 2019-10-02 18:45:35.743 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2019-10-02 18:45:35.743 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-02 18:45:35.743 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 18:45:35.743 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Alex, lastName=Malotky, recipes=[com.alexmalotky.entity.Recipe#6], id=22, userName=ajmalotky, email=}
[DEBUG] 2019-10-02 18:45:35.743 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=, name=TestRecipe, ingredients=, id=6, user=com.alexmalotky.entity.User#22}
[DEBUG] 2019-10-02 18:45:35.745 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:45:35.748 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:45:35.749 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:45:35.756 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 18:45:35.757 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 18:45:35.757 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#22]
[DEBUG] 2019-10-02 18:45:35.758 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#22]
[DEBUG] 2019-10-02 18:45:35.758 [main] TwoPhaseLoad - Processing attribute `email` : value = 
[DEBUG] 2019-10-02 18:45:35.758 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.758 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 18:45:35.758 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.758 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 18:45:35.758 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.758 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 18:45:35.758 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.758 [main] TwoPhaseLoad - Processing attribute `userName` : value = ajmalotky
[DEBUG] 2019-10-02 18:45:35.758 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.758 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#22]
[DEBUG] 2019-10-02 18:45:35.758 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#6]
[DEBUG] 2019-10-02 18:45:35.758 [main] TwoPhaseLoad - Processing attribute `directions` : value = 
[DEBUG] 2019-10-02 18:45:35.758 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.759 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = 
[DEBUG] 2019-10-02 18:45:35.759 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.759 [main] TwoPhaseLoad - Processing attribute `name` : value = TestRecipe
[DEBUG] 2019-10-02 18:45:35.759 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.759 [main] TwoPhaseLoad - Processing attribute `user` : value = 22
[DEBUG] 2019-10-02 18:45:35.759 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.759 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#6]
[DEBUG] 2019-10-02 18:45:35.759 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:35.759 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#22]
[DEBUG] 2019-10-02 18:45:35.759 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:35.760 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 18:45:35.760 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#22
[DEBUG] 2019-10-02 18:45:35.760 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:45:35.894 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 18:45:35.899 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 18:45:35.900 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 18:45:35.903 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 18:45:35.903 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 18:45:35.903 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 18:45:35.903 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.903 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 18:45:35.903 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.903 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 18:45:35.903 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.904 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 18:45:35.904 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.904 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 18:45:35.904 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.904 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 18:45:35.904 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 18:45:35.904 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-02 18:45:35.904 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.904 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-02 18:45:35.904 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.904 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 18:45:35.904 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.904 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 18:45:35.904 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 18:45:35.904 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 18:45:35.905 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:35.905 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 18:45:35.905 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 18:45:35.905 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 18:45:35.905 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#3
[DEBUG] 2019-10-02 18:45:35.905 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:45:35.907 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 18:45:35.907 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 18:45:35.912 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 18:45:35.912 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 18:45:35.912 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 18:45:35.913 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#3], was: [com.alexmalotky.entity.User.recipes#3] (initialized)
[DEBUG] 2019-10-02 18:45:35.913 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 2 objects
[DEBUG] 2019-10-02 18:45:35.913 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-02 18:45:35.913 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 18:45:35.913 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions={"Instruction 1", "Instruction 2"}, name=Test Recipe, ingredients={ {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }, id=3, user=com.alexmalotky.entity.User#3}
[DEBUG] 2019-10-02 18:45:35.913 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Ben, lastName=Wyatt, recipes=[com.alexmalotky.entity.Recipe#3], id=3, userName=test3, email=CalzoneZone@gmail.com}
[DEBUG] 2019-10-02 18:45:35.913 [main] SQL - update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 18:45:35.916 [main] SQL - update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 18:45:35.920 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 18:45:35.921 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:23:37.232 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 19:23:37.242 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 19:23:37.262 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 19:23:37.512 [http-nio-8080-exec-9] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 19:23:37.518 [http-nio-8080-exec-9] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 19:23:37.917 [http-nio-8080-exec-9] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 19:23:37.917 [http-nio-8080-exec-9] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 19:23:37.963 [http-nio-8080-exec-9] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 19:23:38.575 [http-nio-8080-exec-9] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 19:23:38.642 [http-nio-8080-exec-9] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 19:23:38.647 [http-nio-8080-exec-9] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 19:23:38.723 [http-nio-8080-exec-9] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 19:23:38.856 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6b57c267
[DEBUG] 2019-10-02 19:23:38.857 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6b57c267
[DEBUG] 2019-10-02 19:23:38.857 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6b57c267
[DEBUG] 2019-10-02 19:23:38.859 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1eb57031
[DEBUG] 2019-10-02 19:23:38.860 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1cf5b663
[DEBUG] 2019-10-02 19:23:38.862 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6dc78bc8
[DEBUG] 2019-10-02 19:23:38.865 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@55ed0958
[DEBUG] 2019-10-02 19:23:38.866 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@55ed0958
[DEBUG] 2019-10-02 19:23:38.866 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@55ed0958
[DEBUG] 2019-10-02 19:23:38.869 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1e385b58
[DEBUG] 2019-10-02 19:23:38.869 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1e385b58
[DEBUG] 2019-10-02 19:23:38.869 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1e385b58
[DEBUG] 2019-10-02 19:23:38.872 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4b75c8a7
[DEBUG] 2019-10-02 19:23:38.872 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4b75c8a7
[DEBUG] 2019-10-02 19:23:38.872 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4b75c8a7
[DEBUG] 2019-10-02 19:23:38.876 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@383c7b1
[DEBUG] 2019-10-02 19:23:38.876 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@383c7b1
[DEBUG] 2019-10-02 19:23:38.877 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@383c7b1
[DEBUG] 2019-10-02 19:23:38.881 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2c5cf9d6
[DEBUG] 2019-10-02 19:23:38.881 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2c5cf9d6
[DEBUG] 2019-10-02 19:23:38.881 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2c5cf9d6
[DEBUG] 2019-10-02 19:23:38.884 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@491d26d4
[DEBUG] 2019-10-02 19:23:38.884 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@491d26d4
[DEBUG] 2019-10-02 19:23:38.884 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@491d26d4
[DEBUG] 2019-10-02 19:23:38.887 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5f752e7e
[DEBUG] 2019-10-02 19:23:38.887 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5f752e7e
[DEBUG] 2019-10-02 19:23:38.887 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5f752e7e
[DEBUG] 2019-10-02 19:23:38.890 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@389fde1a
[DEBUG] 2019-10-02 19:23:38.890 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@389fde1a
[DEBUG] 2019-10-02 19:23:38.893 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@45fff888
[DEBUG] 2019-10-02 19:23:38.893 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@45fff888
[DEBUG] 2019-10-02 19:23:38.896 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@438f20bc
[DEBUG] 2019-10-02 19:23:38.896 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@438f20bc
[DEBUG] 2019-10-02 19:23:38.898 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28b07077
[DEBUG] 2019-10-02 19:23:38.900 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f4d1f39
[DEBUG] 2019-10-02 19:23:38.902 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@485a87d2
[DEBUG] 2019-10-02 19:23:38.902 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@485a87d2
[DEBUG] 2019-10-02 19:23:38.905 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4e30664b
[DEBUG] 2019-10-02 19:23:38.905 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4e30664b
[DEBUG] 2019-10-02 19:23:38.917 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@16e15224
[DEBUG] 2019-10-02 19:23:38.917 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@16e15224
[DEBUG] 2019-10-02 19:23:38.920 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6cf924a4
[DEBUG] 2019-10-02 19:23:38.920 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6cf924a4
[DEBUG] 2019-10-02 19:23:38.922 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@96ce60a
[DEBUG] 2019-10-02 19:23:38.923 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@96ce60a
[DEBUG] 2019-10-02 19:23:38.925 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3bd7cc7f
[DEBUG] 2019-10-02 19:23:38.925 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3bd7cc7f
[DEBUG] 2019-10-02 19:23:38.929 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@60fbe15
[DEBUG] 2019-10-02 19:23:38.929 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@60fbe15
[DEBUG] 2019-10-02 19:23:38.933 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2e6bf455
[DEBUG] 2019-10-02 19:23:38.933 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2e6bf455
[DEBUG] 2019-10-02 19:23:38.937 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27b02214
[DEBUG] 2019-10-02 19:23:38.937 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@27b02214
[DEBUG] 2019-10-02 19:23:38.941 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@502fe047
[DEBUG] 2019-10-02 19:23:38.941 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@502fe047
[DEBUG] 2019-10-02 19:23:38.944 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4ead430a
[DEBUG] 2019-10-02 19:23:38.944 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4ead430a
[DEBUG] 2019-10-02 19:23:38.947 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@6953caff
[DEBUG] 2019-10-02 19:23:38.947 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6953caff
[DEBUG] 2019-10-02 19:23:38.947 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6953caff
[DEBUG] 2019-10-02 19:23:38.951 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@a02de82
[DEBUG] 2019-10-02 19:23:38.953 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@9936293
[DEBUG] 2019-10-02 19:23:38.954 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@9936293
[DEBUG] 2019-10-02 19:23:38.954 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@9936293
[DEBUG] 2019-10-02 19:23:38.955 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7fe31c0
[DEBUG] 2019-10-02 19:23:38.957 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6ac0825e
[DEBUG] 2019-10-02 19:23:38.958 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6ac0825e
[DEBUG] 2019-10-02 19:23:38.960 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4a8b4db5
[DEBUG] 2019-10-02 19:23:38.960 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4a8b4db5
[DEBUG] 2019-10-02 19:23:38.963 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@a883900
[DEBUG] 2019-10-02 19:23:38.963 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@a883900
[DEBUG] 2019-10-02 19:23:38.966 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@706ed507
[DEBUG] 2019-10-02 19:23:38.966 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@706ed507
[DEBUG] 2019-10-02 19:23:38.969 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4eee1527
[DEBUG] 2019-10-02 19:23:38.969 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4eee1527
[DEBUG] 2019-10-02 19:23:38.970 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2599a19f
[DEBUG] 2019-10-02 19:23:38.973 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3a0fadd3
[DEBUG] 2019-10-02 19:23:38.973 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3a0fadd3
[DEBUG] 2019-10-02 19:23:38.973 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3a0fadd3
[DEBUG] 2019-10-02 19:23:38.976 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@408e913d
[DEBUG] 2019-10-02 19:23:38.976 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@408e913d
[DEBUG] 2019-10-02 19:23:38.976 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@408e913d
[DEBUG] 2019-10-02 19:23:38.979 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@653496f8
[DEBUG] 2019-10-02 19:23:38.981 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4e6499e3
[DEBUG] 2019-10-02 19:23:38.984 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27b4ce3c
[DEBUG] 2019-10-02 19:23:38.984 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27b4ce3c
[DEBUG] 2019-10-02 19:23:38.984 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27b4ce3c
[DEBUG] 2019-10-02 19:23:38.988 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1115cd2a
[DEBUG] 2019-10-02 19:23:38.988 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1115cd2a
[DEBUG] 2019-10-02 19:23:38.988 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1115cd2a
[DEBUG] 2019-10-02 19:23:38.990 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@175a44b
[DEBUG] 2019-10-02 19:23:38.991 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@12910269
[DEBUG] 2019-10-02 19:23:38.995 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@48b722ad
[DEBUG] 2019-10-02 19:23:38.996 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@48b722ad
[DEBUG] 2019-10-02 19:23:38.998 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@69755697
[DEBUG] 2019-10-02 19:23:39.002 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7610630
[DEBUG] 2019-10-02 19:23:39.002 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7610630
[DEBUG] 2019-10-02 19:23:39.006 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@44763cce
[DEBUG] 2019-10-02 19:23:39.006 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@44763cce
[DEBUG] 2019-10-02 19:23:39.007 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@79dc8a0d
[DEBUG] 2019-10-02 19:23:39.009 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@50219b09
[DEBUG] 2019-10-02 19:23:39.013 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@35d67914
[DEBUG] 2019-10-02 19:23:39.025 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@492104bb
[DEBUG] 2019-10-02 19:23:39.025 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@492104bb
[DEBUG] 2019-10-02 19:23:39.027 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@52519f71
[DEBUG] 2019-10-02 19:23:39.027 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@713ff13f
[DEBUG] 2019-10-02 19:23:39.027 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3106aca8
[DEBUG] 2019-10-02 19:23:39.027 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@8f099
[DEBUG] 2019-10-02 19:23:39.028 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e7c5dfe
[DEBUG] 2019-10-02 19:23:39.028 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@50c4e907
[DEBUG] 2019-10-02 19:23:39.028 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@54236c5b
[DEBUG] 2019-10-02 19:23:39.028 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1368c27e
[DEBUG] 2019-10-02 19:23:39.103 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 19:23:39.104 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 19:23:39.106 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 19:23:39.106 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 19:23:39.107 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 19:23:39.111 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 19:23:39.112 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 19:23:39.115 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 19:23:39.118 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 19:23:39.119 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 19:23:39.120 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 19:23:39.121 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 19:23:39.121 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 19:23:39.122 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 19:23:39.137 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 19:23:39.137 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 19:23:39.137 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 19:23:39.452 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 19:23:40.490 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 19:23:40.490 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 19:23:40.490 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 19:23:40.615 [http-nio-8080-exec-9] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 19:23:40.672 [http-nio-8080-exec-9] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 19:23:40.733 [http-nio-8080-exec-9] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 19:23:40.829 [http-nio-8080-exec-9] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 19:23:40.840 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d9acb2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@58a06361]
[DEBUG] 2019-10-02 19:23:40.984 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:23:41.059 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 19:23:41.093 [http-nio-8080-exec-9] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 19:23:41.107 [http-nio-8080-exec-9] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 19:23:41.202 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:23:41.210 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 19:23:41.213 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 19:23:41.220 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 19:23:41.227 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2019-10-02 19:23:41.240 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 19:23:41.244 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:23:41.244 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 19:23:41.244 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 19:23:41.244 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 19:23:41.245 [http-nio-8080-exec-9] PropertyBinder - Building property email
[DEBUG] 2019-10-02 19:23:41.245 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:23:41.245 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 19:23:41.246 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 19:23:41.246 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 19:23:41.246 [http-nio-8080-exec-9] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 19:23:41.246 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:23:41.246 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 19:23:41.246 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 19:23:41.246 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 19:23:41.246 [http-nio-8080-exec-9] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 19:23:41.250 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:23:41.250 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:23:41.256 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:23:41.284 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:23:41.285 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:23:41.287 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 19:23:41.293 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:23:41.294 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:23:41.295 [http-nio-8080-exec-9] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:23:41.306 [http-nio-8080-exec-9] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 19:23:41.307 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:23:41.307 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 19:23:41.307 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 19:23:41.307 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 19:23:41.308 [http-nio-8080-exec-9] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 19:23:41.311 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:23:41.311 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 19:23:41.311 [http-nio-8080-exec-9] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 19:23:41.311 [http-nio-8080-exec-9] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 19:23:41.314 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:23:41.315 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 19:23:41.315 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 19:23:41.315 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 19:23:41.315 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2019-10-02 19:23:41.316 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 19:23:41.316 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:23:41.316 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 19:23:41.316 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 19:23:41.317 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 19:23:41.317 [http-nio-8080-exec-9] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 19:23:41.317 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:23:41.317 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 19:23:41.317 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 19:23:41.317 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 19:23:41.318 [http-nio-8080-exec-9] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 19:23:41.318 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:23:41.318 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 19:23:41.318 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 19:23:41.318 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 19:23:41.318 [http-nio-8080-exec-9] PropertyBinder - Building property name
[DEBUG] 2019-10-02 19:23:41.318 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 19:23:41.319 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:23:41.325 [http-nio-8080-exec-9] PropertyBinder - Building property user
[DEBUG] 2019-10-02 19:23:41.330 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 19:23:41.330 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 19:23:41.330 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 19:23:41.330 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 19:23:41.331 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 19:23:41.331 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 19:23:41.331 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 19:23:41.331 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 19:23:41.331 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 19:23:41.349 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 19:23:41.349 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 19:23:41.349 [http-nio-8080-exec-9] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:23:41.351 [http-nio-8080-exec-9] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 19:23:41.354 [http-nio-8080-exec-9] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 19:23:41.360 [http-nio-8080-exec-9] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 19:23:41.360 [http-nio-8080-exec-9] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:23:41.360 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:23:41.369 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:23:41.480 [http-nio-8080-exec-9] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 19:23:41.482 [http-nio-8080-exec-9] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 19:23:41.483 [http-nio-8080-exec-9] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 19:23:41.483 [http-nio-8080-exec-9] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 19:23:41.483 [http-nio-8080-exec-9] Settings - Statistics: disabled
[DEBUG] 2019-10-02 19:23:41.483 [http-nio-8080-exec-9] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 19:23:41.483 [http-nio-8080-exec-9] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 19:23:41.483 [http-nio-8080-exec-9] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 19:23:41.483 [http-nio-8080-exec-9] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 19:23:41.483 [http-nio-8080-exec-9] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 19:23:41.483 [http-nio-8080-exec-9] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 19:23:41.483 [http-nio-8080-exec-9] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 19:23:41.483 [http-nio-8080-exec-9] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 19:23:41.484 [http-nio-8080-exec-9] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 19:23:41.484 [http-nio-8080-exec-9] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 19:23:41.484 [http-nio-8080-exec-9] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 19:23:41.484 [http-nio-8080-exec-9] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 19:23:41.484 [http-nio-8080-exec-9] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 19:23:41.484 [http-nio-8080-exec-9] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 19:23:41.484 [http-nio-8080-exec-9] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 19:23:41.485 [http-nio-8080-exec-9] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 19:23:41.485 [http-nio-8080-exec-9] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 19:23:41.485 [http-nio-8080-exec-9] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 19:23:41.485 [http-nio-8080-exec-9] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 19:23:41.485 [http-nio-8080-exec-9] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 19:23:41.485 [http-nio-8080-exec-9] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 19:23:41.485 [http-nio-8080-exec-9] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 19:23:41.485 [http-nio-8080-exec-9] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 19:23:41.485 [http-nio-8080-exec-9] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 19:23:41.486 [http-nio-8080-exec-9] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 19:23:41.486 [http-nio-8080-exec-9] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 19:23:41.486 [http-nio-8080-exec-9] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 19:23:41.486 [http-nio-8080-exec-9] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 19:23:41.486 [http-nio-8080-exec-9] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 19:23:41.486 [http-nio-8080-exec-9] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 19:23:41.487 [http-nio-8080-exec-9] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 19:23:41.487 [http-nio-8080-exec-9] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 19:23:41.487 [http-nio-8080-exec-9] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 19:23:41.487 [http-nio-8080-exec-9] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 19:23:41.695 [http-nio-8080-exec-9] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 19:23:41.741 [http-nio-8080-exec-9] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 19:23:41.741 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.2+9-LTS, user.name=Alex, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, java.vendor.version=18.9, derby.system.home=C:\Users\Alex\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\Users\Alex\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.2, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=windows, java.class.path=C:\Users\Alex\tomcat\bin\bootstrap.jar;C:\Users\Alex\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\Users\Alex\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/Users/Alex/tomcat/lib","C:/Users/Alex/tomcat/lib/*.jar","C:\Users\Alex\tomcat/lib","C:\Users\Alex\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=10.0, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=http://bugreport.java.com/bugreport/, tomee.remote.support=true, catalina.home=C:\Users\Alex\tomcat, user.dir=C:\Users\Alex\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@78a71f04, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2019-10-02 19:23:41.786 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:23:41.786 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:23:41.811 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:23:41.811 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:23:41.816 [http-nio-8080-exec-9] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 19:23:41.817 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 19:23:41.817 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d9acb2] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@d393a5]
[DEBUG] 2019-10-02 19:23:41.931 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:23:41.931 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:23:41.984 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:23:41.985 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:23:42.558 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:23:42.558 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:23:42.559 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:23:42.559 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:23:42.608 [http-nio-8080-exec-9] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:23:42.609 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 19:23:42.609 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 19:23:42.609 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 19:23:42.609 [http-nio-8080-exec-9] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 19:23:42.619 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:23:42.620 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 19:23:42.620 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 19:23:42.620 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 19:23:42.620 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 19:23:42.620 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 19:23:42.620 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 19:23:42.689 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7248f0b2]
[DEBUG] 2019-10-02 19:23:42.703 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 19:23:42.703 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 19:23:42.703 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 19:23:42.703 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 19:23:42.717 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c82aa7b]
[DEBUG] 2019-10-02 19:23:42.723 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5946892c]
[DEBUG] 2019-10-02 19:23:42.727 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 19:23:42.727 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 19:23:42.727 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 19:23:42.727 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 19:23:42.728 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 19:23:42.729 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 19:23:42.730 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:23:42.764 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:23:42.779 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 19:23:42.785 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:23:42.785 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cc27017]
[DEBUG] 2019-10-02 19:23:42.785 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 19:23:42.785 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 19:23:42.785 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 19:23:42.785 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 19:23:42.785 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45f14874]
[DEBUG] 2019-10-02 19:23:42.786 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7330dd]
[DEBUG] 2019-10-02 19:23:42.786 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 19:23:42.786 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 19:23:42.786 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 19:23:42.786 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 19:23:42.786 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 19:23:42.786 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 19:23:42.786 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:23:42.786 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:23:42.787 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 19:23:42.787 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:23:42.824 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:23:42.825 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:23:42.826 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:23:42.826 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 19:23:42.826 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 19:23:42.826 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 19:23:42.826 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 19:23:42.826 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 19:23:42.827 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 19:23:42.827 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ed64dd]
[DEBUG] 2019-10-02 19:23:42.827 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:23:42.827 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:23:42.827 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:23:42.827 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:23:42.827 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@564ca396]
[DEBUG] 2019-10-02 19:23:42.829 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 19:23:42.829 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 19:23:42.829 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 19:23:42.829 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 19:23:42.829 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 19:23:42.829 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 19:23:42.830 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:23:42.830 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:23:42.831 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 19:23:42.831 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:23:42.831 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75af5b53]
[DEBUG] 2019-10-02 19:23:42.831 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:23:42.831 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:23:42.831 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:23:42.832 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:23:42.832 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ce0336b]
[DEBUG] 2019-10-02 19:23:42.832 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 19:23:42.832 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 19:23:42.832 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 19:23:42.832 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 19:23:42.832 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 19:23:42.832 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 19:23:42.833 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:23:42.833 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:23:42.834 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 19:23:42.834 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:23:42.834 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 19:23:42.835 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 19:23:42.850 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@20204af9]
[DEBUG] 2019-10-02 19:23:42.851 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62c36428]
[DEBUG] 2019-10-02 19:23:42.851 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:23:42.851 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:23:42.851 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:23:42.851 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:23:42.851 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 19:23:42.851 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:23:42.857 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:23:42.858 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 19:23:42.860 [http-nio-8080-exec-9] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:23:42.971 [http-nio-8080-exec-9] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 19:23:42.971 [http-nio-8080-exec-9] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 19:23:42.972 [http-nio-8080-exec-9] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 19:23:42.993 [http-nio-8080-exec-9] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 19:23:42.994 [http-nio-8080-exec-9] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 19:23:42.995 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 19:23:42.995 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 19:23:42.999 [http-nio-8080-exec-9] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5c6fab9e
[DEBUG] 2019-10-02 19:23:43.002 [http-nio-8080-exec-9] SessionFactoryRegistry - Registering SessionFactory: fe955e75-5749-4309-8287-7039d299a8b4 (<unnamed>)
[DEBUG] 2019-10-02 19:23:43.003 [http-nio-8080-exec-9] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 19:23:43.213 [http-nio-8080-exec-9] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 19:29:39.296 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 19:29:39.300 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 19:29:39.306 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 19:29:39.429 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 19:29:39.431 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 19:29:39.716 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 19:29:39.717 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 19:29:39.724 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 19:29:40.109 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 19:29:40.137 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 19:29:40.138 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 19:29:40.164 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 19:29:40.216 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@14b7786
[DEBUG] 2019-10-02 19:29:40.216 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@14b7786
[DEBUG] 2019-10-02 19:29:40.216 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@14b7786
[DEBUG] 2019-10-02 19:29:40.217 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7c8d5312
[DEBUG] 2019-10-02 19:29:40.218 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3d37203b
[DEBUG] 2019-10-02 19:29:40.218 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@10823d72
[DEBUG] 2019-10-02 19:29:40.220 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1729ec00
[DEBUG] 2019-10-02 19:29:40.220 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1729ec00
[DEBUG] 2019-10-02 19:29:40.220 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1729ec00
[DEBUG] 2019-10-02 19:29:40.221 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@459b187a
[DEBUG] 2019-10-02 19:29:40.222 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@459b187a
[DEBUG] 2019-10-02 19:29:40.222 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@459b187a
[DEBUG] 2019-10-02 19:29:40.223 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@716e431d
[DEBUG] 2019-10-02 19:29:40.223 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@716e431d
[DEBUG] 2019-10-02 19:29:40.223 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@716e431d
[DEBUG] 2019-10-02 19:29:40.225 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6884f0d9
[DEBUG] 2019-10-02 19:29:40.225 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6884f0d9
[DEBUG] 2019-10-02 19:29:40.225 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6884f0d9
[DEBUG] 2019-10-02 19:29:40.226 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@64fe9da7
[DEBUG] 2019-10-02 19:29:40.226 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@64fe9da7
[DEBUG] 2019-10-02 19:29:40.227 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@64fe9da7
[DEBUG] 2019-10-02 19:29:40.228 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@36bf84e
[DEBUG] 2019-10-02 19:29:40.228 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@36bf84e
[DEBUG] 2019-10-02 19:29:40.228 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@36bf84e
[DEBUG] 2019-10-02 19:29:40.230 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@665522c2
[DEBUG] 2019-10-02 19:29:40.230 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@665522c2
[DEBUG] 2019-10-02 19:29:40.230 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@665522c2
[DEBUG] 2019-10-02 19:29:40.231 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6a0094c9
[DEBUG] 2019-10-02 19:29:40.231 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6a0094c9
[DEBUG] 2019-10-02 19:29:40.232 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6cfd9a54
[DEBUG] 2019-10-02 19:29:40.233 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6cfd9a54
[DEBUG] 2019-10-02 19:29:40.234 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@71945bc0
[DEBUG] 2019-10-02 19:29:40.234 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@71945bc0
[DEBUG] 2019-10-02 19:29:40.235 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3dd4a6fa
[DEBUG] 2019-10-02 19:29:40.236 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2412a42b
[DEBUG] 2019-10-02 19:29:40.237 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@51841ac6
[DEBUG] 2019-10-02 19:29:40.237 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@51841ac6
[DEBUG] 2019-10-02 19:29:40.238 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@10afe71a
[DEBUG] 2019-10-02 19:29:40.238 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@10afe71a
[DEBUG] 2019-10-02 19:29:40.250 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@339a3670
[DEBUG] 2019-10-02 19:29:40.250 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@339a3670
[DEBUG] 2019-10-02 19:29:40.253 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5d51e129
[DEBUG] 2019-10-02 19:29:40.253 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5d51e129
[DEBUG] 2019-10-02 19:29:40.256 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@743e66f7
[DEBUG] 2019-10-02 19:29:40.257 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@743e66f7
[DEBUG] 2019-10-02 19:29:40.259 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2133661d
[DEBUG] 2019-10-02 19:29:40.260 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2133661d
[DEBUG] 2019-10-02 19:29:40.263 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3ad4a7d6
[DEBUG] 2019-10-02 19:29:40.263 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3ad4a7d6
[DEBUG] 2019-10-02 19:29:40.266 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@48840594
[DEBUG] 2019-10-02 19:29:40.266 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@48840594
[DEBUG] 2019-10-02 19:29:40.271 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24e83d19
[DEBUG] 2019-10-02 19:29:40.271 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24e83d19
[DEBUG] 2019-10-02 19:29:40.273 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@42373389
[DEBUG] 2019-10-02 19:29:40.274 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@42373389
[DEBUG] 2019-10-02 19:29:40.275 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@42ea287
[DEBUG] 2019-10-02 19:29:40.276 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@42ea287
[DEBUG] 2019-10-02 19:29:40.277 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1f11f64e
[DEBUG] 2019-10-02 19:29:40.278 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1f11f64e
[DEBUG] 2019-10-02 19:29:40.278 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1f11f64e
[DEBUG] 2019-10-02 19:29:40.280 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@612e21b9
[DEBUG] 2019-10-02 19:29:40.282 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@288ca5f0
[DEBUG] 2019-10-02 19:29:40.282 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@288ca5f0
[DEBUG] 2019-10-02 19:29:40.283 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@288ca5f0
[DEBUG] 2019-10-02 19:29:40.284 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21079a12
[DEBUG] 2019-10-02 19:29:40.286 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@30e9ca13
[DEBUG] 2019-10-02 19:29:40.286 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30e9ca13
[DEBUG] 2019-10-02 19:29:40.288 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@14982a82
[DEBUG] 2019-10-02 19:29:40.288 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@14982a82
[DEBUG] 2019-10-02 19:29:40.289 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7899de11
[DEBUG] 2019-10-02 19:29:40.289 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7899de11
[DEBUG] 2019-10-02 19:29:40.290 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5300cac
[DEBUG] 2019-10-02 19:29:40.291 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5300cac
[DEBUG] 2019-10-02 19:29:40.292 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@f951a7f
[DEBUG] 2019-10-02 19:29:40.292 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@f951a7f
[DEBUG] 2019-10-02 19:29:40.293 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@78e22d35
[DEBUG] 2019-10-02 19:29:40.295 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@64984b0f
[DEBUG] 2019-10-02 19:29:40.295 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@64984b0f
[DEBUG] 2019-10-02 19:29:40.295 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@64984b0f
[DEBUG] 2019-10-02 19:29:40.297 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4b790d86
[DEBUG] 2019-10-02 19:29:40.297 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4b790d86
[DEBUG] 2019-10-02 19:29:40.297 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4b790d86
[DEBUG] 2019-10-02 19:29:40.299 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@52e04737
[DEBUG] 2019-10-02 19:29:40.300 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4674d90
[DEBUG] 2019-10-02 19:29:40.302 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@30364216
[DEBUG] 2019-10-02 19:29:40.303 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@30364216
[DEBUG] 2019-10-02 19:29:40.303 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@30364216
[DEBUG] 2019-10-02 19:29:40.305 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1f7076bc
[DEBUG] 2019-10-02 19:29:40.306 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1f7076bc
[DEBUG] 2019-10-02 19:29:40.306 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1f7076bc
[DEBUG] 2019-10-02 19:29:40.307 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6a472566
[DEBUG] 2019-10-02 19:29:40.308 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@8851ce1
[DEBUG] 2019-10-02 19:29:40.311 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@277bf091
[DEBUG] 2019-10-02 19:29:40.311 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@277bf091
[DEBUG] 2019-10-02 19:29:40.312 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1dba4e06
[DEBUG] 2019-10-02 19:29:40.314 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4047d2d9
[DEBUG] 2019-10-02 19:29:40.315 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4047d2d9
[DEBUG] 2019-10-02 19:29:40.317 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4760f169
[DEBUG] 2019-10-02 19:29:40.317 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4760f169
[DEBUG] 2019-10-02 19:29:40.318 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@25290bca
[DEBUG] 2019-10-02 19:29:40.319 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@508a65bf
[DEBUG] 2019-10-02 19:29:40.321 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6ede46f6
[DEBUG] 2019-10-02 19:29:40.326 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@102ecc22
[DEBUG] 2019-10-02 19:29:40.326 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@102ecc22
[DEBUG] 2019-10-02 19:29:40.327 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@43045f9f
[DEBUG] 2019-10-02 19:29:40.328 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2643d762
[DEBUG] 2019-10-02 19:29:40.328 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6403e24c
[DEBUG] 2019-10-02 19:29:40.328 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f236de0
[DEBUG] 2019-10-02 19:29:40.328 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4eba373c
[DEBUG] 2019-10-02 19:29:40.328 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@767a014e
[DEBUG] 2019-10-02 19:29:40.328 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@d109c4f
[DEBUG] 2019-10-02 19:29:40.328 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3968bc60
[DEBUG] 2019-10-02 19:29:40.410 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 19:29:40.412 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 19:29:40.413 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 19:29:40.414 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 19:29:40.415 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 19:29:40.417 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 19:29:40.418 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 19:29:40.420 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 19:29:40.422 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 19:29:40.423 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 19:29:40.424 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 19:29:40.425 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 19:29:40.425 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 19:29:40.427 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 19:29:40.437 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 19:29:40.437 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 19:29:40.438 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 19:29:40.672 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 19:29:40.949 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 19:29:40.949 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 19:29:40.950 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 19:29:41.000 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 19:29:41.037 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 19:29:41.082 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 19:29:41.170 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 19:29:41.176 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6d8796c1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2e26173]
[DEBUG] 2019-10-02 19:29:41.273 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:29:41.305 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 19:29:41.313 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 19:29:41.318 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 19:29:41.364 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:29:41.367 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 19:29:41.370 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 19:29:41.373 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 19:29:41.375 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 19:29:41.380 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 19:29:41.383 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:29:41.383 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 19:29:41.384 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 19:29:41.384 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 19:29:41.384 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 19:29:41.384 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:29:41.384 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 19:29:41.385 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 19:29:41.385 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 19:29:41.385 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 19:29:41.385 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:29:41.385 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 19:29:41.385 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 19:29:41.385 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 19:29:41.385 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 19:29:41.387 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:29:41.388 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:29:41.390 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:29:41.402 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:29:41.403 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:29:41.404 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 19:29:41.406 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:29:41.406 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:29:41.407 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:41.409 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 19:29:41.410 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:29:41.410 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 19:29:41.410 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 19:29:41.411 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 19:29:41.411 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 19:29:41.413 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:29:41.413 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 19:29:41.413 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 19:29:41.413 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 19:29:41.416 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:29:41.416 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 19:29:41.417 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 19:29:41.417 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 19:29:41.417 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 19:29:41.417 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 19:29:41.417 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:29:41.417 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 19:29:41.417 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 19:29:41.417 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 19:29:41.418 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 19:29:41.418 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:29:41.418 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 19:29:41.418 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 19:29:41.418 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 19:29:41.418 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 19:29:41.418 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:29:41.418 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 19:29:41.419 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 19:29:41.419 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 19:29:41.419 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 19:29:41.419 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 19:29:41.419 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:29:41.421 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 19:29:41.424 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 19:29:41.424 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 19:29:41.424 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 19:29:41.424 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 19:29:41.424 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 19:29:41.424 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 19:29:41.424 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 19:29:41.424 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 19:29:41.424 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 19:29:41.430 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 19:29:41.430 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 19:29:41.430 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:41.431 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 19:29:41.432 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 19:29:41.433 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 19:29:41.434 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:29:41.434 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:29:41.438 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:29:41.490 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 19:29:41.491 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 19:29:41.491 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 19:29:41.492 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 19:29:41.492 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 19:29:41.492 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 19:29:41.492 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 19:29:41.492 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 19:29:41.492 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 19:29:41.492 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 19:29:41.492 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 19:29:41.492 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 19:29:41.492 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 19:29:41.492 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 19:29:41.492 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 19:29:41.492 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 19:29:41.492 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 19:29:41.493 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 19:29:41.493 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 19:29:41.493 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 19:29:41.493 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 19:29:41.493 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 19:29:41.493 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 19:29:41.493 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 19:29:41.493 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 19:29:41.493 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 19:29:41.493 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 19:29:41.493 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 19:29:41.493 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 19:29:41.494 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 19:29:41.494 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 19:29:41.494 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 19:29:41.494 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 19:29:41.494 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 19:29:41.494 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 19:29:41.494 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 19:29:41.494 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 19:29:41.494 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 19:29:41.494 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 19:29:41.561 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 19:29:41.590 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 19:29:41.590 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.RecipeDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2047981, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 19:29:41.613 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 19:29:41.614 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 19:29:41.615 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 19:29:41.615 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6d8796c1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@251c4280]
[DEBUG] 2019-10-02 19:29:41.743 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:29:41.743 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:29:41.791 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:29:41.792 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:29:42.187 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:29:42.188 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:29:42.188 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:29:42.188 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:29:42.231 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:42.231 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 19:29:42.231 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 19:29:42.231 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 19:29:42.231 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 19:29:42.237 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:29:42.237 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 19:29:42.237 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 19:29:42.237 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 19:29:42.237 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 19:29:42.237 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 19:29:42.237 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 19:29:42.266 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1537e43]
[DEBUG] 2019-10-02 19:29:42.268 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 19:29:42.268 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 19:29:42.268 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 19:29:42.268 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 19:29:42.274 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1537c744]
[DEBUG] 2019-10-02 19:29:42.277 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@448ade1]
[DEBUG] 2019-10-02 19:29:42.279 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 19:29:42.279 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 19:29:42.279 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 19:29:42.279 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 19:29:42.279 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 19:29:42.280 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 19:29:42.280 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:29:42.295 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:29:42.303 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 19:29:42.305 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:29:42.306 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17216605]
[DEBUG] 2019-10-02 19:29:42.306 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 19:29:42.306 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 19:29:42.306 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 19:29:42.306 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 19:29:42.306 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59b492ec]
[DEBUG] 2019-10-02 19:29:42.306 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55c1ced9]
[DEBUG] 2019-10-02 19:29:42.306 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 19:29:42.306 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 19:29:42.306 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 19:29:42.306 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 19:29:42.306 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 19:29:42.306 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 19:29:42.307 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:29:42.307 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:29:42.307 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 19:29:42.308 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:29:42.324 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:29:42.325 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:29:42.325 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:29:42.325 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 19:29:42.325 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 19:29:42.325 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 19:29:42.325 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 19:29:42.325 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 19:29:42.325 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 19:29:42.325 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12567179]
[DEBUG] 2019-10-02 19:29:42.326 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:29:42.326 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:29:42.326 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:29:42.326 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:29:42.326 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f42b194]
[DEBUG] 2019-10-02 19:29:42.327 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 19:29:42.327 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 19:29:42.327 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 19:29:42.327 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 19:29:42.327 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 19:29:42.327 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 19:29:42.327 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:29:42.327 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:29:42.328 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 19:29:42.328 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:29:42.328 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23b1aa9]
[DEBUG] 2019-10-02 19:29:42.328 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:29:42.328 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:29:42.328 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:29:42.329 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:29:42.329 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e8598d9]
[DEBUG] 2019-10-02 19:29:42.329 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 19:29:42.329 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 19:29:42.329 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 19:29:42.329 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 19:29:42.329 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 19:29:42.329 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 19:29:42.329 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:29:42.329 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:29:42.330 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 19:29:42.330 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:29:42.331 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 19:29:42.331 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 19:29:42.337 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fb8dc01]
[DEBUG] 2019-10-02 19:29:42.337 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e38c472]
[DEBUG] 2019-10-02 19:29:42.337 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:29:42.337 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:29:42.337 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:29:42.337 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:29:42.337 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 19:29:42.337 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:29:42.340 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:29:42.340 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 19:29:42.341 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:29:42.380 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 19:29:42.380 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 19:29:42.380 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 19:29:42.388 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 19:29:42.388 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 19:29:42.390 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 19:29:42.390 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 19:29:42.392 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@51fe7f15
[DEBUG] 2019-10-02 19:29:42.395 [main] SessionFactoryRegistry - Registering SessionFactory: 2decb5d5-bc4f-4014-bca3-f3f2852c7603 (<unnamed>)
[DEBUG] 2019-10-02 19:29:42.395 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 19:29:42.489 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 19:29:42.513 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:29:42.543 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:29:42.545 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:29:42.556 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:42.565 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:29:42.566 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:29:42.566 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.566 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 19:29:42.566 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.566 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 19:29:42.566 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.566 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:29:42.567 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.567 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 19:29:42.567 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.568 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:29:42.568 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:29:42.568 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 19:29:42.568 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.568 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 19:29:42.568 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.568 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 19:29:42.568 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.569 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 19:29:42.569 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.569 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:29:42.569 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:42.572 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:42.573 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:42.574 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:29:42.575 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 19:29:42.575 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:29:42.615 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-10-02 19:29:42.636 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7548e1fb
[DEBUG] 2019-10-02 19:29:42.685 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-10-02 19:29:42.697 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 19:29:42.709 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'alexmalotky'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Recipe'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'name'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'user'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

[DEBUG] 2019-10-02 19:29:42.764 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-02 19:29:42.793 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.Recipe (generatedAlias0) -> recipe0_
[DEBUG] 2019-10-02 19:29:42.796 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 19:29:42.801 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 19:29:42.804 [main] DotNode - getDataType() : name -> org.hibernate.type.StringType@71945bc0
[DEBUG] 2019-10-02 19:29:42.806 [main] FromReferenceNode - Resolved : generatedAlias0.name -> recipe0_.name
[DEBUG] 2019-10-02 19:29:42.810 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 19:29:42.810 [main] DotNode - getDataType() : user -> org.hibernate.type.ManyToOneType(com.alexmalotky.entity.User)
[DEBUG] 2019-10-02 19:29:42.810 [main] DotNode - dereferenceShortcut() : property user in com.alexmalotky.entity.Recipe does not require a join.
[DEBUG] 2019-10-02 19:29:42.812 [main] DotNode - Terminal getPropertyPath = [user]
[DEBUG] 2019-10-02 19:29:42.812 [main] FromReferenceNode - Resolved : generatedAlias0.user -> recipe0_.user_id
[DEBUG] 2019-10-02 19:29:42.812 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-02 19:29:42.813 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipe0_.id ) ( FromClause{level=1} recipes recipe0_ ) ( where ( and ( = ( recipe0_.name recipe0_.id name ) ? ) ( = ( recipe0_.user_id recipe0_.id user ) ? ) ) ) )
[DEBUG] 2019-10-02 19:29:42.830 [main] JoinProcessor - Using FROM fragment [recipes recipe0_]
[DEBUG] 2019-10-02 19:29:42.831 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-02 19:29:42.832 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipe0_.id as id1_0_' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipe0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'recipes recipe0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=recipes,tableAlias=recipe0_,origin=null,columns={,className=com.alexmalotky.entity.Recipe}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'recipe0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=recipe0_,className=com.alexmalotky.entity.Recipe,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'recipe0_.id' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@71945bc0}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'recipe0_.user_id' {propertyName=user,dereferenceType=UNKNOWN,getPropertyPath=user,path=generatedAlias0.user,tableAlias=recipe0_,className=com.alexmalotky.entity.Recipe,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'recipe0_.id' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
             |  \-[IDENT] IdentNode: 'user' {originalText=user}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.ManyToOneType(com.alexmalotky.entity.User)}

[DEBUG] 2019-10-02 19:29:42.832 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 19:29:42.843 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-10-02 19:29:42.843 [main] QueryTranslatorImpl - SQL: select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_ where recipe0_.name=? and recipe0_.user_id=?
[DEBUG] 2019-10-02 19:29:42.844 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 19:29:42.869 [main] SQL - select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_ where recipe0_.name=? and recipe0_.user_id=?
[DEBUG] 2019-10-02 19:29:42.883 [main] Loader - Result set row: 0
[DEBUG] 2019-10-02 19:29:42.884 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:29:42.887 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:29:42.887 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 19:29:42.889 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.889 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 19:29:42.889 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.889 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 19:29:42.889 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.889 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 19:29:42.889 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.889 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:29:42.893 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:29:42.893 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:29:42.894 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:42.894 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:29:42.895 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:29:42.895 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.895 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 19:29:42.895 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.895 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 19:29:42.895 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.895 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:29:42.895 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.895 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 19:29:42.895 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.895 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:29:42.896 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:42.896 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:42.896 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:42.896 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:29:42.896 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 19:29:42.896 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:29:42.899 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:29:42.959 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2019-10-02 19:29:42.960 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2019-10-02 19:29:42.961 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 19:29:42.964 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'alexmalotky'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Recipe'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-10-02 19:29:42.964 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-02 19:29:42.965 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.Recipe (generatedAlias0) -> recipe0_
[DEBUG] 2019-10-02 19:29:42.966 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 19:29:42.966 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 19:29:42.966 [main] DotNode - getDataType() : name -> org.hibernate.type.StringType@71945bc0
[DEBUG] 2019-10-02 19:29:42.966 [main] FromReferenceNode - Resolved : generatedAlias0.name -> recipe0_.name
[DEBUG] 2019-10-02 19:29:42.966 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-02 19:29:42.967 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipe0_.id ) ( FromClause{level=1} recipes recipe0_ ) ( where ( = ( recipe0_.name recipe0_.id name ) ? ) ) )
[DEBUG] 2019-10-02 19:29:42.967 [main] JoinProcessor - Using FROM fragment [recipes recipe0_]
[DEBUG] 2019-10-02 19:29:42.967 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-02 19:29:42.967 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipe0_.id as id1_0_' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipe0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'recipes recipe0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=recipes,tableAlias=recipe0_,origin=null,columns={,className=com.alexmalotky.entity.Recipe}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'recipe0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=recipe0_,className=com.alexmalotky.entity.Recipe,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'recipe0_.id' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@71945bc0}

[DEBUG] 2019-10-02 19:29:42.968 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 19:29:42.968 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2019-10-02 19:29:42.968 [main] QueryTranslatorImpl - SQL: select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_ where recipe0_.name=?
[DEBUG] 2019-10-02 19:29:42.968 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 19:29:42.968 [main] SQL - select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_ where recipe0_.name=?
[DEBUG] 2019-10-02 19:29:42.973 [main] Loader - Result set row: 0
[DEBUG] 2019-10-02 19:29:42.974 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:29:42.974 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:29:42.974 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 19:29:42.974 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.974 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 19:29:42.974 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.974 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 19:29:42.975 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.975 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 19:29:42.975 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.975 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:29:42.978 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:29:42.979 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:29:42.979 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:42.980 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:29:42.980 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:29:42.980 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.980 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 19:29:42.980 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.980 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 19:29:42.980 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.981 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:29:42.986 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.986 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 19:29:42.987 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:42.987 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:29:42.987 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:42.987 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:42.987 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:42.988 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:29:42.988 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 19:29:42.988 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:29:42.989 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:29:43.058 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:29:43.061 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:29:43.061 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:29:43.062 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:43.062 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:29:43.062 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:29:43.062 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.062 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 19:29:43.063 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.063 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 19:29:43.063 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.063 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:29:43.063 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.063 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 19:29:43.063 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.063 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:29:43.063 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:29:43.063 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 19:29:43.063 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.063 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 19:29:43.063 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.063 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 19:29:43.064 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.064 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 19:29:43.064 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.064 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:29:43.064 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:43.064 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:43.064 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:43.064 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:29:43.064 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 19:29:43.064 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:29:43.069 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 19:29:43.070 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 19:29:43.080 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 19:29:43.084 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 19:29:43.092 [main] IdentifierGeneratorHelper - Natively generated identity: 7
[DEBUG] 2019-10-02 19:29:43.092 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:29:43.094 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 19:29:43.095 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 19:29:43.095 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 19:29:43.097 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-10-02 19:29:43.097 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-10-02 19:29:43.099 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 19:29:43.099 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=, name=testInsert, ingredients=, id=7, user=com.alexmalotky.entity.User#1}
[DEBUG] 2019-10-02 19:29:43.106 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:29:43.108 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:29:43.109 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:29:43.114 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:29:43.115 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:29:43.115 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#7]
[DEBUG] 2019-10-02 19:29:43.115 [main] TwoPhaseLoad - Processing attribute `directions` : value = 
[DEBUG] 2019-10-02 19:29:43.115 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.115 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = 
[DEBUG] 2019-10-02 19:29:43.115 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.115 [main] TwoPhaseLoad - Processing attribute `name` : value = testInsert
[DEBUG] 2019-10-02 19:29:43.115 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.115 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 19:29:43.116 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.116 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#7]
[DEBUG] 2019-10-02 19:29:43.116 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:29:43.116 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:29:43.116 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.116 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 19:29:43.116 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.116 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 19:29:43.116 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.116 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:29:43.117 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.117 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 19:29:43.117 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.117 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:29:43.117 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:29:43.120 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:43.120 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:29:43.123 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:43.123 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:29:43.124 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:43.124 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-02 19:29:43.125 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:43.125 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:29:43.125 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 19:29:43.125 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.125 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 19:29:43.125 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.125 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 19:29:43.125 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.125 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 19:29:43.125 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.126 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:29:43.126 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:43.126 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:43.126 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:43.126 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:29:43.127 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 19:29:43.127 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#7
[DEBUG] 2019-10-02 19:29:43.127 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:29:43.235 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:29:43.240 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:29:43.241 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:29:43.242 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:29:43.242 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 19:29:43.242 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.243 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 19:29:43.243 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.243 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 19:29:43.243 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.243 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 19:29:43.243 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.243 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:29:43.243 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:29:43.243 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:29:43.243 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.244 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 19:29:43.244 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.244 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 19:29:43.244 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.244 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:29:43.244 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.244 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 19:29:43.244 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.244 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:29:43.245 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:29:43.245 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:43.245 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:29:43.247 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:43.248 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:29:43.248 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:43.248 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:43.248 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:43.248 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:43.248 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:29:43.249 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 19:29:43.249 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#1
[DEBUG] 2019-10-02 19:29:43.249 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:29:43.300 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 19:29:43.300 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 19:29:43.301 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 19:29:43.302 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 19:29:43.309 [main] IdentifierGeneratorHelper - Natively generated identity: 8
[DEBUG] 2019-10-02 19:29:43.310 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:29:43.310 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 19:29:43.310 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 19:29:43.310 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 19:29:43.311 [main] JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:206) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:392) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:145) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1499) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:496) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3371) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2540) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:473) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:178) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:104) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at com.alexmalotky.persistence.GenericDao.insert(GenericDao.java:90) [classes/:?]
	at com.alexmalotky.persistence.RecipeDaoTest.lambda$testInsertFail$0(RecipeDaoTest.java:58) [test-classes/:?]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:50) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:38) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:1108) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at com.alexmalotky.persistence.RecipeDaoTest.testInsertFail(RecipeDaoTest.java:58) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) [junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69) [junit5-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
[DEBUG] 2019-10-02 19:29:43.323 [main] JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:187) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:104) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at com.alexmalotky.persistence.GenericDao.insert(GenericDao.java:90) [classes/:?]
	at com.alexmalotky.persistence.RecipeDaoTest.lambda$testInsertFail$0(RecipeDaoTest.java:58) [test-classes/:?]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:50) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:38) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:1108) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at com.alexmalotky.persistence.RecipeDaoTest.testInsertFail(RecipeDaoTest.java:58) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) [junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69) [junit5-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
[DEBUG] 2019-10-02 19:29:43.330 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:29:43.331 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:29:43.381 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:29:43.384 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:29:43.385 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:29:43.385 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:29:43.385 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-02 19:29:43.385 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.386 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-02 19:29:43.386 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.386 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 19:29:43.386 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.386 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 19:29:43.386 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.386 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:29:43.386 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:29:43.386 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:29:43.386 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.387 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 19:29:43.387 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.387 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 19:29:43.387 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.387 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:29:43.387 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.387 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 19:29:43.387 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.387 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:29:43.388 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:29:43.389 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:29:43.389 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:29:43.393 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:29:43.393 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:29:43.394 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:29:43.394 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:43.394 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:29:43.394 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:43.394 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:29:43.394 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 19:29:43.395 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-02 19:29:43.395 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:29:43.396 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 19:29:43.396 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 19:29:43.404 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 19:29:43.404 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 19:29:43.404 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 19:29:43.404 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2019-10-02 19:29:43.404 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-10-02 19:29:43.404 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 19:29:43.405 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions={"Instruction 1", "Instruction 2"}, name=Test Recipe, ingredients={ {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }, id=3, user=com.alexmalotky.entity.User#3}
[DEBUG] 2019-10-02 19:29:43.412 [main] SQL - delete from recipes where id=?
[DEBUG] 2019-10-02 19:29:43.418 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:29:43.420 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:29:43.420 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2019-10-02 19:29:43.421 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0
[DEBUG] 2019-10-02 19:29:43.421 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0
[DEBUG] 2019-10-02 19:29:43.423 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 19:29:43.424 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'alexmalotky'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Recipe'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-10-02 19:29:43.424 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-02 19:29:43.424 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.Recipe (generatedAlias0) -> recipe0_
[DEBUG] 2019-10-02 19:29:43.424 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 19:29:43.425 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-02 19:29:43.425 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipe0_.id ) ( FromClause{level=1} recipes recipe0_ ) )
[DEBUG] 2019-10-02 19:29:43.425 [main] JoinProcessor - Using FROM fragment [recipes recipe0_]
[DEBUG] 2019-10-02 19:29:43.425 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-02 19:29:43.425 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipe0_.id as id1_0_' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipe0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'recipes recipe0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=recipes,tableAlias=recipe0_,origin=null,columns={,className=com.alexmalotky.entity.Recipe}}

[DEBUG] 2019-10-02 19:29:43.426 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 19:29:43.426 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0
[DEBUG] 2019-10-02 19:29:43.426 [main] QueryTranslatorImpl - SQL: select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_
[DEBUG] 2019-10-02 19:29:43.426 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 19:29:43.426 [main] SQL - select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_
[DEBUG] 2019-10-02 19:29:43.430 [main] Loader - Result set row: 0
[DEBUG] 2019-10-02 19:29:43.430 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:29:43.431 [main] Loader - Result set row: 1
[DEBUG] 2019-10-02 19:29:43.431 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 19:29:43.431 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:29:43.431 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 19:29:43.431 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.431 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 19:29:43.431 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.431 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 19:29:43.431 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.431 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 19:29:43.431 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.431 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:29:43.435 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:29:43.435 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:29:43.435 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:43.436 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:29:43.436 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:29:43.436 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.436 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 19:29:43.436 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.436 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 19:29:43.436 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.436 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:29:43.436 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.436 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 19:29:43.436 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.436 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:29:43.437 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:43.437 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:43.437 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:43.437 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:29:43.437 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 19:29:43.438 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:29:43.438 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 19:29:43.438 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-02 19:29:43.438 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.438 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-02 19:29:43.438 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.438 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-02 19:29:43.438 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.438 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-02 19:29:43.438 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.438 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:29:43.441 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:29:43.442 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:29:43.442 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 19:29:43.442 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 19:29:43.442 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:29:43.442 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.442 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 19:29:43.442 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.442 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 19:29:43.443 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.443 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:29:43.443 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.443 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-02 19:29:43.443 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.443 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 19:29:43.443 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:43.443 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 19:29:43.443 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:43.443 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:29:43.443 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#2
[DEBUG] 2019-10-02 19:29:43.443 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 19:29:43.444 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:29:43.500 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0
[DEBUG] 2019-10-02 19:29:43.501 [main] SQL - select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_
[DEBUG] 2019-10-02 19:29:43.504 [main] Loader - Result set row: 0
[DEBUG] 2019-10-02 19:29:43.505 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:29:43.505 [main] Loader - Result set row: 1
[DEBUG] 2019-10-02 19:29:43.505 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 19:29:43.507 [main] Loader - Result set row: 2
[DEBUG] 2019-10-02 19:29:43.508 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:29:43.509 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:29:43.509 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 19:29:43.509 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.509 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 19:29:43.509 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.509 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 19:29:43.509 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.509 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 19:29:43.510 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.510 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:29:43.513 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:29:43.513 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:29:43.514 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:43.514 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:29:43.514 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:29:43.514 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.514 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 19:29:43.514 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.514 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 19:29:43.514 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.514 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:29:43.515 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.515 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 19:29:43.515 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.515 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:29:43.515 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:43.515 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:29:43.515 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:43.516 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:29:43.516 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 19:29:43.516 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:29:43.516 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 19:29:43.516 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-02 19:29:43.516 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.516 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-02 19:29:43.516 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.516 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-02 19:29:43.516 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.516 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-02 19:29:43.516 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.517 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:29:43.519 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:29:43.520 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:29:43.520 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 19:29:43.521 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 19:29:43.521 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:29:43.521 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.521 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 19:29:43.521 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.521 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 19:29:43.522 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.522 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:29:43.522 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.522 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-02 19:29:43.522 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.522 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 19:29:43.522 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:43.522 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 19:29:43.522 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:43.522 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:29:43.523 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#2
[DEBUG] 2019-10-02 19:29:43.523 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 19:29:43.523 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:29:43.523 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-02 19:29:43.523 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.523 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-02 19:29:43.523 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.523 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 19:29:43.523 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.523 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 19:29:43.523 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.523 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:29:43.526 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:29:43.526 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:29:43.526 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:29:43.527 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:29:43.527 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:29:43.527 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.527 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 19:29:43.527 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.527 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 19:29:43.527 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.527 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:29:43.527 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.527 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 19:29:43.527 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.527 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:29:43.528 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:43.528 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:29:43.528 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:43.528 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:29:43.528 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#3
[DEBUG] 2019-10-02 19:29:43.528 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:29:43.529 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:29:43.582 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:29:43.587 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:29:43.587 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:29:43.588 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:29:43.588 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-02 19:29:43.589 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.589 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-02 19:29:43.589 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.589 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 19:29:43.589 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.589 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 19:29:43.589 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.589 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:29:43.589 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:29:43.589 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:29:43.589 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.589 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 19:29:43.590 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.590 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 19:29:43.590 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.590 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:29:43.590 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.590 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 19:29:43.590 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:29:43.590 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:29:43.590 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:29:43.591 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:29:43.592 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:29:43.594 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:29:43.594 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:29:43.594 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:29:43.594 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:43.595 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:29:43.595 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:29:43.595 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:29:43.595 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 19:29:43.595 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-02 19:29:43.595 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:29:43.597 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 19:29:43.597 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 19:29:43.601 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 19:29:43.601 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 19:29:43.601 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 19:29:43.602 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2019-10-02 19:29:43.602 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-10-02 19:29:43.602 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 19:29:43.602 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=Do the thing, name=Test Recipe, ingredients={ {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }, id=3, user=com.alexmalotky.entity.User#3}
[DEBUG] 2019-10-02 19:29:43.603 [main] SQL - update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 19:29:43.610 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:29:43.612 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:31:04.106 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 19:31:04.109 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 19:31:04.115 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 19:31:04.217 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 19:31:04.220 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 19:31:04.472 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 19:31:04.473 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 19:31:04.483 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 19:31:04.881 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 19:31:04.909 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 19:31:04.910 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 19:31:04.936 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 19:31:04.981 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@14b7786
[DEBUG] 2019-10-02 19:31:04.981 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@14b7786
[DEBUG] 2019-10-02 19:31:04.981 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@14b7786
[DEBUG] 2019-10-02 19:31:04.982 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7c8d5312
[DEBUG] 2019-10-02 19:31:04.983 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3d37203b
[DEBUG] 2019-10-02 19:31:04.983 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@10823d72
[DEBUG] 2019-10-02 19:31:04.986 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1729ec00
[DEBUG] 2019-10-02 19:31:04.986 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1729ec00
[DEBUG] 2019-10-02 19:31:04.986 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1729ec00
[DEBUG] 2019-10-02 19:31:04.987 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@459b187a
[DEBUG] 2019-10-02 19:31:04.988 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@459b187a
[DEBUG] 2019-10-02 19:31:04.988 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@459b187a
[DEBUG] 2019-10-02 19:31:04.989 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@716e431d
[DEBUG] 2019-10-02 19:31:04.989 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@716e431d
[DEBUG] 2019-10-02 19:31:04.989 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@716e431d
[DEBUG] 2019-10-02 19:31:04.991 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@6884f0d9
[DEBUG] 2019-10-02 19:31:04.991 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@6884f0d9
[DEBUG] 2019-10-02 19:31:04.991 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6884f0d9
[DEBUG] 2019-10-02 19:31:04.993 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@64fe9da7
[DEBUG] 2019-10-02 19:31:04.993 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@64fe9da7
[DEBUG] 2019-10-02 19:31:04.993 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@64fe9da7
[DEBUG] 2019-10-02 19:31:04.995 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@36bf84e
[DEBUG] 2019-10-02 19:31:04.995 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@36bf84e
[DEBUG] 2019-10-02 19:31:04.995 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@36bf84e
[DEBUG] 2019-10-02 19:31:04.997 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@665522c2
[DEBUG] 2019-10-02 19:31:04.997 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@665522c2
[DEBUG] 2019-10-02 19:31:04.997 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@665522c2
[DEBUG] 2019-10-02 19:31:04.998 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6a0094c9
[DEBUG] 2019-10-02 19:31:04.998 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6a0094c9
[DEBUG] 2019-10-02 19:31:04.999 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6cfd9a54
[DEBUG] 2019-10-02 19:31:05.000 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6cfd9a54
[DEBUG] 2019-10-02 19:31:05.001 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@71945bc0
[DEBUG] 2019-10-02 19:31:05.001 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@71945bc0
[DEBUG] 2019-10-02 19:31:05.002 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3dd4a6fa
[DEBUG] 2019-10-02 19:31:05.003 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2412a42b
[DEBUG] 2019-10-02 19:31:05.004 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@51841ac6
[DEBUG] 2019-10-02 19:31:05.004 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@51841ac6
[DEBUG] 2019-10-02 19:31:05.005 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@10afe71a
[DEBUG] 2019-10-02 19:31:05.005 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@10afe71a
[DEBUG] 2019-10-02 19:31:05.018 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@339a3670
[DEBUG] 2019-10-02 19:31:05.018 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@339a3670
[DEBUG] 2019-10-02 19:31:05.021 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5d51e129
[DEBUG] 2019-10-02 19:31:05.021 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5d51e129
[DEBUG] 2019-10-02 19:31:05.024 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@743e66f7
[DEBUG] 2019-10-02 19:31:05.024 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@743e66f7
[DEBUG] 2019-10-02 19:31:05.026 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2133661d
[DEBUG] 2019-10-02 19:31:05.026 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2133661d
[DEBUG] 2019-10-02 19:31:05.039 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3ad4a7d6
[DEBUG] 2019-10-02 19:31:05.040 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3ad4a7d6
[DEBUG] 2019-10-02 19:31:05.043 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@48840594
[DEBUG] 2019-10-02 19:31:05.043 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@48840594
[DEBUG] 2019-10-02 19:31:05.047 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24e83d19
[DEBUG] 2019-10-02 19:31:05.047 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@24e83d19
[DEBUG] 2019-10-02 19:31:05.050 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@42373389
[DEBUG] 2019-10-02 19:31:05.050 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@42373389
[DEBUG] 2019-10-02 19:31:05.052 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@42ea287
[DEBUG] 2019-10-02 19:31:05.053 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@42ea287
[DEBUG] 2019-10-02 19:31:05.054 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1f11f64e
[DEBUG] 2019-10-02 19:31:05.055 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1f11f64e
[DEBUG] 2019-10-02 19:31:05.055 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1f11f64e
[DEBUG] 2019-10-02 19:31:05.057 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@612e21b9
[DEBUG] 2019-10-02 19:31:05.059 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@288ca5f0
[DEBUG] 2019-10-02 19:31:05.060 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@288ca5f0
[DEBUG] 2019-10-02 19:31:05.060 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@288ca5f0
[DEBUG] 2019-10-02 19:31:05.061 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21079a12
[DEBUG] 2019-10-02 19:31:05.063 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@30e9ca13
[DEBUG] 2019-10-02 19:31:05.063 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30e9ca13
[DEBUG] 2019-10-02 19:31:05.065 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@14982a82
[DEBUG] 2019-10-02 19:31:05.065 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@14982a82
[DEBUG] 2019-10-02 19:31:05.066 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7899de11
[DEBUG] 2019-10-02 19:31:05.066 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7899de11
[DEBUG] 2019-10-02 19:31:05.068 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5300cac
[DEBUG] 2019-10-02 19:31:05.068 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5300cac
[DEBUG] 2019-10-02 19:31:05.069 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@f951a7f
[DEBUG] 2019-10-02 19:31:05.069 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@f951a7f
[DEBUG] 2019-10-02 19:31:05.070 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@78e22d35
[DEBUG] 2019-10-02 19:31:05.072 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@64984b0f
[DEBUG] 2019-10-02 19:31:05.072 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@64984b0f
[DEBUG] 2019-10-02 19:31:05.072 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@64984b0f
[DEBUG] 2019-10-02 19:31:05.074 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4b790d86
[DEBUG] 2019-10-02 19:31:05.074 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4b790d86
[DEBUG] 2019-10-02 19:31:05.074 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4b790d86
[DEBUG] 2019-10-02 19:31:05.076 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@52e04737
[DEBUG] 2019-10-02 19:31:05.077 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4674d90
[DEBUG] 2019-10-02 19:31:05.079 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@30364216
[DEBUG] 2019-10-02 19:31:05.079 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@30364216
[DEBUG] 2019-10-02 19:31:05.079 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@30364216
[DEBUG] 2019-10-02 19:31:05.081 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1f7076bc
[DEBUG] 2019-10-02 19:31:05.082 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1f7076bc
[DEBUG] 2019-10-02 19:31:05.082 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1f7076bc
[DEBUG] 2019-10-02 19:31:05.083 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6a472566
[DEBUG] 2019-10-02 19:31:05.084 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@8851ce1
[DEBUG] 2019-10-02 19:31:05.086 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@277bf091
[DEBUG] 2019-10-02 19:31:05.086 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@277bf091
[DEBUG] 2019-10-02 19:31:05.087 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1dba4e06
[DEBUG] 2019-10-02 19:31:05.089 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4047d2d9
[DEBUG] 2019-10-02 19:31:05.090 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4047d2d9
[DEBUG] 2019-10-02 19:31:05.092 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4760f169
[DEBUG] 2019-10-02 19:31:05.092 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4760f169
[DEBUG] 2019-10-02 19:31:05.092 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@25290bca
[DEBUG] 2019-10-02 19:31:05.093 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@508a65bf
[DEBUG] 2019-10-02 19:31:05.095 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6ede46f6
[DEBUG] 2019-10-02 19:31:05.100 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@102ecc22
[DEBUG] 2019-10-02 19:31:05.100 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@102ecc22
[DEBUG] 2019-10-02 19:31:05.101 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@43045f9f
[DEBUG] 2019-10-02 19:31:05.101 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2643d762
[DEBUG] 2019-10-02 19:31:05.101 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6403e24c
[DEBUG] 2019-10-02 19:31:05.101 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f236de0
[DEBUG] 2019-10-02 19:31:05.101 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4eba373c
[DEBUG] 2019-10-02 19:31:05.101 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@767a014e
[DEBUG] 2019-10-02 19:31:05.102 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@d109c4f
[DEBUG] 2019-10-02 19:31:05.102 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3968bc60
[DEBUG] 2019-10-02 19:31:05.146 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 19:31:05.147 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 19:31:05.148 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 19:31:05.148 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 19:31:05.149 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 19:31:05.151 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 19:31:05.152 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 19:31:05.154 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 19:31:05.156 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 19:31:05.156 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 19:31:05.157 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 19:31:05.158 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 19:31:05.158 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 19:31:05.159 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 19:31:05.168 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 19:31:05.168 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 19:31:05.168 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 19:31:05.438 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 19:31:05.724 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 19:31:05.725 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 19:31:05.725 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 19:31:05.775 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 19:31:05.808 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 19:31:05.864 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 19:31:05.948 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 19:31:05.953 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6d8796c1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2e26173]
[DEBUG] 2019-10-02 19:31:06.030 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:31:06.057 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 19:31:06.064 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 19:31:06.068 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 19:31:06.101 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:31:06.104 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 19:31:06.106 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 19:31:06.109 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 19:31:06.112 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 19:31:06.117 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 19:31:06.120 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:31:06.120 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 19:31:06.120 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 19:31:06.120 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 19:31:06.121 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-02 19:31:06.121 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:31:06.122 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 19:31:06.122 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 19:31:06.122 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 19:31:06.122 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 19:31:06.122 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:31:06.122 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 19:31:06.123 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 19:31:06.123 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 19:31:06.124 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 19:31:06.126 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:31:06.128 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:31:06.131 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:31:06.144 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:31:06.145 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:31:06.146 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 19:31:06.149 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:31:06.150 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:31:06.151 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:06.155 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 19:31:06.156 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:31:06.156 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 19:31:06.156 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 19:31:06.156 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 19:31:06.156 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 19:31:06.158 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:31:06.159 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 19:31:06.159 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 19:31:06.159 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 19:31:06.162 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:31:06.162 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 19:31:06.162 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 19:31:06.162 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 19:31:06.163 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-02 19:31:06.163 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 19:31:06.163 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:31:06.163 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 19:31:06.163 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 19:31:06.163 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 19:31:06.163 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 19:31:06.163 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:31:06.164 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 19:31:06.164 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 19:31:06.164 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 19:31:06.164 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 19:31:06.164 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:31:06.164 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 19:31:06.164 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 19:31:06.164 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 19:31:06.165 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-02 19:31:06.165 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 19:31:06.165 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:31:06.167 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-02 19:31:06.169 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 19:31:06.169 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 19:31:06.169 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 19:31:06.169 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 19:31:06.169 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 19:31:06.169 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 19:31:06.169 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 19:31:06.170 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 19:31:06.170 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 19:31:06.176 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 19:31:06.176 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 19:31:06.176 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:06.177 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 19:31:06.179 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 19:31:06.180 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 19:31:06.181 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:31:06.181 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:31:06.185 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:31:06.230 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 19:31:06.231 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 19:31:06.231 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 19:31:06.231 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 19:31:06.231 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-02 19:31:06.232 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 19:31:06.232 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 19:31:06.232 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 19:31:06.232 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 19:31:06.232 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 19:31:06.232 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 19:31:06.232 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 19:31:06.232 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 19:31:06.232 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 19:31:06.232 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 19:31:06.232 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 19:31:06.232 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 19:31:06.233 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 19:31:06.233 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 19:31:06.233 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 19:31:06.233 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 19:31:06.233 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 19:31:06.233 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 19:31:06.233 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 19:31:06.233 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 19:31:06.233 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 19:31:06.233 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 19:31:06.233 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 19:31:06.233 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 19:31:06.233 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 19:31:06.233 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 19:31:06.233 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 19:31:06.234 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 19:31:06.234 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 19:31:06.234 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 19:31:06.234 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 19:31:06.234 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 19:31:06.234 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 19:31:06.234 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 19:31:06.303 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 19:31:06.331 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 19:31:06.331 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2019.2.1\plugins\junit\lib\junit5-rt.jar;C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 com.alexmalotky.persistence.RecipeDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, user.script=, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2047981, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-02 19:31:06.354 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-02 19:31:06.355 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 19:31:06.356 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 19:31:06.356 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6d8796c1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@251c4280]
[DEBUG] 2019-10-02 19:31:06.437 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:31:06.437 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:31:06.466 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:31:06.467 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:31:06.747 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:31:06.747 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:31:06.747 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:31:06.747 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:31:06.781 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:06.781 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 19:31:06.781 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 19:31:06.781 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 19:31:06.781 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 19:31:06.786 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:31:06.786 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 19:31:06.786 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 19:31:06.786 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 19:31:06.786 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 19:31:06.786 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 19:31:06.786 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 19:31:06.813 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1537e43]
[DEBUG] 2019-10-02 19:31:06.814 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 19:31:06.814 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 19:31:06.814 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 19:31:06.814 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 19:31:06.822 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1537c744]
[DEBUG] 2019-10-02 19:31:06.824 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@448ade1]
[DEBUG] 2019-10-02 19:31:06.827 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 19:31:06.827 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 19:31:06.827 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 19:31:06.827 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 19:31:06.827 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 19:31:06.828 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 19:31:06.828 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:31:06.843 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:31:06.851 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 19:31:06.853 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:31:06.853 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17216605]
[DEBUG] 2019-10-02 19:31:06.853 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 19:31:06.853 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 19:31:06.853 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 19:31:06.854 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 19:31:06.854 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@59b492ec]
[DEBUG] 2019-10-02 19:31:06.854 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55c1ced9]
[DEBUG] 2019-10-02 19:31:06.854 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 19:31:06.854 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 19:31:06.854 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 19:31:06.854 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 19:31:06.854 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 19:31:06.854 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 19:31:06.854 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:31:06.855 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:31:06.855 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 19:31:06.855 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:31:06.871 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:31:06.872 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:31:06.872 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:31:06.872 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 19:31:06.872 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 19:31:06.872 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 19:31:06.872 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 19:31:06.872 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 19:31:06.872 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 19:31:06.872 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12567179]
[DEBUG] 2019-10-02 19:31:06.873 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:31:06.873 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:31:06.873 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:31:06.873 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:31:06.873 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f42b194]
[DEBUG] 2019-10-02 19:31:06.874 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 19:31:06.874 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 19:31:06.874 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 19:31:06.874 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 19:31:06.874 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 19:31:06.875 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 19:31:06.875 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:31:06.875 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:31:06.876 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 19:31:06.876 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:31:06.876 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23b1aa9]
[DEBUG] 2019-10-02 19:31:06.876 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:31:06.877 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:31:06.877 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:31:06.877 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:31:06.877 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e8598d9]
[DEBUG] 2019-10-02 19:31:06.877 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 19:31:06.877 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 19:31:06.877 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 19:31:06.877 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 19:31:06.878 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 19:31:06.878 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 19:31:06.878 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:31:06.878 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:31:06.879 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 19:31:06.879 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:31:06.879 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 19:31:06.879 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 19:31:06.884 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5fb8dc01]
[DEBUG] 2019-10-02 19:31:06.884 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e38c472]
[DEBUG] 2019-10-02 19:31:06.885 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:31:06.885 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:31:06.885 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:31:06.885 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:31:06.885 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 19:31:06.885 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:31:06.887 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:31:06.888 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 19:31:06.889 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:31:06.925 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 19:31:06.926 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 19:31:06.926 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 19:31:06.933 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 19:31:06.934 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 19:31:06.935 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 19:31:06.935 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 19:31:06.937 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@51fe7f15
[DEBUG] 2019-10-02 19:31:06.939 [main] SessionFactoryRegistry - Registering SessionFactory: ee9a7553-32db-4e84-9bc6-2264c0f0418e (<unnamed>)
[DEBUG] 2019-10-02 19:31:06.939 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 19:31:07.030 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 19:31:07.058 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:31:07.086 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:31:07.088 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:31:07.101 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.112 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:31:07.113 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:31:07.113 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.113 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 19:31:07.113 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.113 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 19:31:07.113 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.113 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:31:07.113 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.113 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 19:31:07.113 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.115 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:31:07.115 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:31:07.115 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 19:31:07.115 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.115 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 19:31:07.115 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.115 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 19:31:07.115 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.115 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 19:31:07.115 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.116 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:31:07.116 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.119 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.119 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.121 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:31:07.122 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 19:31:07.122 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:31:07.170 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-10-02 19:31:07.190 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7548e1fb
[DEBUG] 2019-10-02 19:31:07.224 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-10-02 19:31:07.235 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 19:31:07.246 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'alexmalotky'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Recipe'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'name'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'user'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

[DEBUG] 2019-10-02 19:31:07.281 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-02 19:31:07.304 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.Recipe (generatedAlias0) -> recipe0_
[DEBUG] 2019-10-02 19:31:07.305 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 19:31:07.313 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 19:31:07.315 [main] DotNode - getDataType() : name -> org.hibernate.type.StringType@71945bc0
[DEBUG] 2019-10-02 19:31:07.316 [main] FromReferenceNode - Resolved : generatedAlias0.name -> recipe0_.name
[DEBUG] 2019-10-02 19:31:07.319 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 19:31:07.320 [main] DotNode - getDataType() : user -> org.hibernate.type.ManyToOneType(com.alexmalotky.entity.User)
[DEBUG] 2019-10-02 19:31:07.320 [main] DotNode - dereferenceShortcut() : property user in com.alexmalotky.entity.Recipe does not require a join.
[DEBUG] 2019-10-02 19:31:07.320 [main] DotNode - Terminal getPropertyPath = [user]
[DEBUG] 2019-10-02 19:31:07.320 [main] FromReferenceNode - Resolved : generatedAlias0.user -> recipe0_.user_id
[DEBUG] 2019-10-02 19:31:07.320 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-02 19:31:07.321 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipe0_.id ) ( FromClause{level=1} recipes recipe0_ ) ( where ( and ( = ( recipe0_.name recipe0_.id name ) ? ) ( = ( recipe0_.user_id recipe0_.id user ) ? ) ) ) )
[DEBUG] 2019-10-02 19:31:07.333 [main] JoinProcessor - Using FROM fragment [recipes recipe0_]
[DEBUG] 2019-10-02 19:31:07.334 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-02 19:31:07.335 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipe0_.id as id1_0_' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipe0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'recipes recipe0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=recipes,tableAlias=recipe0_,origin=null,columns={,className=com.alexmalotky.entity.Recipe}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'recipe0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=recipe0_,className=com.alexmalotky.entity.Recipe,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'recipe0_.id' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@71945bc0}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'recipe0_.user_id' {propertyName=user,dereferenceType=UNKNOWN,getPropertyPath=user,path=generatedAlias0.user,tableAlias=recipe0_,className=com.alexmalotky.entity.Recipe,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'recipe0_.id' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
             |  \-[IDENT] IdentNode: 'user' {originalText=user}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.ManyToOneType(com.alexmalotky.entity.User)}

[DEBUG] 2019-10-02 19:31:07.335 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 19:31:07.344 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-10-02 19:31:07.344 [main] QueryTranslatorImpl - SQL: select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_ where recipe0_.name=? and recipe0_.user_id=?
[DEBUG] 2019-10-02 19:31:07.344 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 19:31:07.366 [main] SQL - select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_ where recipe0_.name=? and recipe0_.user_id=?
[DEBUG] 2019-10-02 19:31:07.372 [main] Loader - Result set row: 0
[DEBUG] 2019-10-02 19:31:07.372 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:31:07.372 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:31:07.373 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 19:31:07.373 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.373 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 19:31:07.373 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.373 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 19:31:07.373 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.373 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 19:31:07.373 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.373 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:31:07.377 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:31:07.377 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:31:07.378 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.378 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:31:07.378 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:31:07.378 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.379 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 19:31:07.379 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.379 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 19:31:07.379 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.379 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:31:07.379 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.379 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 19:31:07.379 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.379 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:31:07.379 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.380 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.380 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.380 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:31:07.380 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 19:31:07.380 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:31:07.382 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:31:07.448 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2019-10-02 19:31:07.449 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2019-10-02 19:31:07.450 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 19:31:07.452 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'alexmalotky'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Recipe'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-10-02 19:31:07.452 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-02 19:31:07.452 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.Recipe (generatedAlias0) -> recipe0_
[DEBUG] 2019-10-02 19:31:07.453 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 19:31:07.453 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 19:31:07.454 [main] DotNode - getDataType() : name -> org.hibernate.type.StringType@71945bc0
[DEBUG] 2019-10-02 19:31:07.454 [main] FromReferenceNode - Resolved : generatedAlias0.name -> recipe0_.name
[DEBUG] 2019-10-02 19:31:07.454 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-02 19:31:07.454 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipe0_.id ) ( FromClause{level=1} recipes recipe0_ ) ( where ( = ( recipe0_.name recipe0_.id name ) ? ) ) )
[DEBUG] 2019-10-02 19:31:07.454 [main] JoinProcessor - Using FROM fragment [recipes recipe0_]
[DEBUG] 2019-10-02 19:31:07.454 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-02 19:31:07.455 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipe0_.id as id1_0_' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipe0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'recipes recipe0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=recipes,tableAlias=recipe0_,origin=null,columns={,className=com.alexmalotky.entity.Recipe}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'recipe0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=recipe0_,className=com.alexmalotky.entity.Recipe,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'recipe0_.id' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@71945bc0}

[DEBUG] 2019-10-02 19:31:07.455 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 19:31:07.455 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2019-10-02 19:31:07.455 [main] QueryTranslatorImpl - SQL: select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_ where recipe0_.name=?
[DEBUG] 2019-10-02 19:31:07.455 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 19:31:07.456 [main] SQL - select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_ where recipe0_.name=?
[DEBUG] 2019-10-02 19:31:07.461 [main] Loader - Result set row: 0
[DEBUG] 2019-10-02 19:31:07.461 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:31:07.462 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:31:07.462 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 19:31:07.462 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.462 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 19:31:07.462 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.462 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 19:31:07.462 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.462 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 19:31:07.462 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.463 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:31:07.467 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:31:07.467 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:31:07.468 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.468 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:31:07.468 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:31:07.468 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.468 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 19:31:07.468 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.469 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 19:31:07.469 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.469 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:31:07.469 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.469 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 19:31:07.469 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.469 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:31:07.469 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.469 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.470 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.470 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:31:07.470 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 19:31:07.470 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:31:07.471 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:31:07.526 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:31:07.529 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:31:07.530 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:31:07.530 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.530 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:31:07.530 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:31:07.530 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.531 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 19:31:07.531 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.531 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 19:31:07.531 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.531 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:31:07.531 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.531 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 19:31:07.531 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.531 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:31:07.531 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:31:07.531 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 19:31:07.531 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.531 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 19:31:07.532 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.532 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 19:31:07.532 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.532 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 19:31:07.532 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.532 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:31:07.532 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.532 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.532 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.532 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:31:07.533 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 19:31:07.533 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:31:07.537 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 19:31:07.538 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 19:31:07.549 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 19:31:07.551 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 19:31:07.559 [main] IdentifierGeneratorHelper - Natively generated identity: 9
[DEBUG] 2019-10-02 19:31:07.560 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:31:07.562 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 19:31:07.563 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 19:31:07.563 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 19:31:07.565 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-10-02 19:31:07.565 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-10-02 19:31:07.567 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 19:31:07.567 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=, name=testInsert, ingredients=, id=9, user=com.alexmalotky.entity.User#1}
[DEBUG] 2019-10-02 19:31:07.572 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:31:07.573 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:31:07.574 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:31:07.577 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:31:07.577 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:31:07.578 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#9]
[DEBUG] 2019-10-02 19:31:07.578 [main] TwoPhaseLoad - Processing attribute `directions` : value = 
[DEBUG] 2019-10-02 19:31:07.578 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.578 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = 
[DEBUG] 2019-10-02 19:31:07.578 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.578 [main] TwoPhaseLoad - Processing attribute `name` : value = testInsert
[DEBUG] 2019-10-02 19:31:07.578 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.578 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 19:31:07.578 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.579 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#9]
[DEBUG] 2019-10-02 19:31:07.579 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:31:07.579 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:31:07.579 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.579 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 19:31:07.579 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.579 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 19:31:07.579 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.579 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:31:07.580 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.580 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 19:31:07.580 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.580 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:31:07.580 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:31:07.583 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.583 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:31:07.586 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.587 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:31:07.588 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.588 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-02 19:31:07.589 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.589 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:31:07.589 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 19:31:07.589 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.589 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 19:31:07.589 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.589 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 19:31:07.590 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.590 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 19:31:07.590 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.590 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:31:07.590 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.590 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.590 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.591 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:31:07.591 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 19:31:07.591 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#9
[DEBUG] 2019-10-02 19:31:07.591 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:31:07.700 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:31:07.704 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:31:07.704 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:31:07.705 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:31:07.705 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 19:31:07.705 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.705 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 19:31:07.705 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.705 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 19:31:07.706 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.706 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 19:31:07.706 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.706 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:31:07.706 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:31:07.706 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:31:07.706 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.706 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 19:31:07.706 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.706 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 19:31:07.706 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.706 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:31:07.706 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.706 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 19:31:07.707 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.707 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:31:07.707 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:31:07.707 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.707 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:31:07.713 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.714 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:31:07.714 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.714 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.714 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.714 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.714 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:31:07.715 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 19:31:07.715 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#1
[DEBUG] 2019-10-02 19:31:07.715 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:31:07.770 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 19:31:07.770 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 19:31:07.772 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-02 19:31:07.772 [main] SQL - insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 19:31:07.777 [main] IdentifierGeneratorHelper - Natively generated identity: 10
[DEBUG] 2019-10-02 19:31:07.777 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:31:07.778 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 19:31:07.778 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 19:31:07.778 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 19:31:07.778 [main] JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:206) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:392) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:145) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1499) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:496) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3371) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2540) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:473) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:178) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:104) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at com.alexmalotky.persistence.GenericDao.insert(GenericDao.java:90) [classes/:?]
	at com.alexmalotky.persistence.RecipeDaoTest.lambda$testInsertFail$0(RecipeDaoTest.java:58) [test-classes/:?]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:50) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:38) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:1108) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at com.alexmalotky.persistence.RecipeDaoTest.testInsertFail(RecipeDaoTest.java:58) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) [junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69) [junit5-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
[DEBUG] 2019-10-02 19:31:07.788 [main] JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:187) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:104) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at com.alexmalotky.persistence.GenericDao.insert(GenericDao.java:90) [classes/:?]
	at com.alexmalotky.persistence.RecipeDaoTest.lambda$testInsertFail$0(RecipeDaoTest.java:58) [test-classes/:?]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:50) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:38) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:1108) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at com.alexmalotky.persistence.RecipeDaoTest.testInsertFail(RecipeDaoTest.java:58) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) [junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69) [junit5-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
[DEBUG] 2019-10-02 19:31:07.791 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:31:07.793 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:31:07.839 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:31:07.843 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:31:07.843 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:31:07.844 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:31:07.844 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-02 19:31:07.844 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.844 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-02 19:31:07.844 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.845 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 19:31:07.845 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.845 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 19:31:07.845 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.845 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:31:07.845 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:31:07.845 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:31:07.845 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.845 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 19:31:07.845 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.845 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 19:31:07.845 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.845 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:31:07.845 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.846 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 19:31:07.846 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.846 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:31:07.846 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:31:07.846 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:31:07.847 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:31:07.849 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:31:07.850 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:31:07.850 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:31:07.852 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.852 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:31:07.852 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.852 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:31:07.854 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 19:31:07.854 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-02 19:31:07.855 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:31:07.857 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 19:31:07.857 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 19:31:07.870 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 19:31:07.870 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 19:31:07.871 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 19:31:07.871 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2019-10-02 19:31:07.871 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-10-02 19:31:07.871 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 19:31:07.871 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions={"Instruction 1", "Instruction 2"}, name=Test Recipe, ingredients={ {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }, id=3, user=com.alexmalotky.entity.User#3}
[DEBUG] 2019-10-02 19:31:07.886 [main] SQL - delete from recipes where id=?
[DEBUG] 2019-10-02 19:31:07.894 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:31:07.896 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:31:07.896 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2019-10-02 19:31:07.896 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0
[DEBUG] 2019-10-02 19:31:07.897 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0
[DEBUG] 2019-10-02 19:31:07.898 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 19:31:07.898 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'alexmalotky'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Recipe'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-10-02 19:31:07.898 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-02 19:31:07.899 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.Recipe (generatedAlias0) -> recipe0_
[DEBUG] 2019-10-02 19:31:07.899 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-02 19:31:07.899 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-02 19:31:07.899 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipe0_.id ) ( FromClause{level=1} recipes recipe0_ ) )
[DEBUG] 2019-10-02 19:31:07.900 [main] JoinProcessor - Using FROM fragment [recipes recipe0_]
[DEBUG] 2019-10-02 19:31:07.900 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-02 19:31:07.900 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipe0_.id as id1_0_' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipe0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'recipes recipe0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=recipes,tableAlias=recipe0_,origin=null,columns={,className=com.alexmalotky.entity.Recipe}}

[DEBUG] 2019-10-02 19:31:07.900 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 19:31:07.900 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0
[DEBUG] 2019-10-02 19:31:07.900 [main] QueryTranslatorImpl - SQL: select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_
[DEBUG] 2019-10-02 19:31:07.900 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-02 19:31:07.901 [main] SQL - select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_
[DEBUG] 2019-10-02 19:31:07.906 [main] Loader - Result set row: 0
[DEBUG] 2019-10-02 19:31:07.906 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:31:07.906 [main] Loader - Result set row: 1
[DEBUG] 2019-10-02 19:31:07.906 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 19:31:07.906 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:31:07.907 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 19:31:07.907 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.907 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 19:31:07.907 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.907 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 19:31:07.907 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.907 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 19:31:07.907 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.907 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:31:07.912 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:31:07.912 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:31:07.912 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.913 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:31:07.913 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:31:07.913 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.913 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 19:31:07.913 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.913 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 19:31:07.913 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.913 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:31:07.913 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.913 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 19:31:07.913 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.913 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:31:07.914 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.914 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.914 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.914 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:31:07.914 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 19:31:07.914 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:31:07.914 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 19:31:07.914 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-02 19:31:07.914 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.914 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-02 19:31:07.914 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.915 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-02 19:31:07.915 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.915 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-02 19:31:07.915 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.915 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:31:07.918 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:31:07.918 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:31:07.918 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 19:31:07.919 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 19:31:07.919 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:31:07.919 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.919 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 19:31:07.919 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.919 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 19:31:07.919 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.919 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:31:07.919 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.919 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-02 19:31:07.920 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.920 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 19:31:07.920 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.920 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 19:31:07.920 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.920 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:31:07.920 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#2
[DEBUG] 2019-10-02 19:31:07.921 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 19:31:07.921 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:31:07.978 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0
[DEBUG] 2019-10-02 19:31:07.978 [main] SQL - select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.user_id as user_id5_0_ from recipes recipe0_
[DEBUG] 2019-10-02 19:31:07.982 [main] Loader - Result set row: 0
[DEBUG] 2019-10-02 19:31:07.982 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:31:07.983 [main] Loader - Result set row: 1
[DEBUG] 2019-10-02 19:31:07.983 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 19:31:07.983 [main] Loader - Result set row: 2
[DEBUG] 2019-10-02 19:31:07.983 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:31:07.984 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:31:07.984 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-02 19:31:07.984 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.984 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-02 19:31:07.984 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.984 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-02 19:31:07.984 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.984 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-02 19:31:07.984 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.984 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:31:07.988 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:31:07.989 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:31:07.989 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.990 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:31:07.990 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:31:07.990 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.990 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-02 19:31:07.990 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.990 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-02 19:31:07.990 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.990 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:31:07.990 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.990 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-02 19:31:07.990 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.990 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-02 19:31:07.990 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.991 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-02 19:31:07.991 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.991 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:31:07.991 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-02 19:31:07.991 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-02 19:31:07.991 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 19:31:07.991 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-02 19:31:07.991 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.991 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-02 19:31:07.992 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.992 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-02 19:31:07.992 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.992 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-02 19:31:07.992 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.992 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:31:07.995 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:31:07.995 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:31:07.996 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 19:31:07.996 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 19:31:07.996 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:31:07.996 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.996 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-02 19:31:07.996 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.996 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-02 19:31:07.996 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.997 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:31:07.997 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.997 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-02 19:31:07.997 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.997 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-02 19:31:07.997 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.997 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-02 19:31:07.997 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:07.997 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:31:07.998 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#2
[DEBUG] 2019-10-02 19:31:07.998 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-02 19:31:07.998 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:31:07.998 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-02 19:31:07.998 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.998 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-02 19:31:07.998 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.998 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 19:31:07.998 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.998 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 19:31:07.998 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:07.999 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:31:08.001 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:31:08.002 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:31:08.002 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:31:08.003 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:31:08.003 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:31:08.003 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:08.003 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 19:31:08.003 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:08.003 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 19:31:08.003 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:08.003 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:31:08.003 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:08.003 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 19:31:08.003 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:08.003 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:31:08.004 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:08.004 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:31:08.004 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:08.004 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:31:08.004 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#3
[DEBUG] 2019-10-02 19:31:08.004 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:31:08.004 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:31:08.050 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:31:08.054 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:31:08.054 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:31:08.054 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:31:08.054 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-02 19:31:08.054 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:08.055 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-02 19:31:08.055 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:08.055 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 19:31:08.055 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:08.055 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 19:31:08.055 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:08.055 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:31:08.055 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:31:08.055 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:31:08.055 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:08.055 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 19:31:08.055 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:08.055 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 19:31:08.055 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:08.055 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:31:08.055 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:08.055 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 19:31:08.056 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:31:08.056 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:31:08.056 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:31:08.056 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:31:08.056 [main] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:31:08.059 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:31:08.059 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:31:08.059 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:31:08.059 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:08.060 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:31:08.060 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:31:08.060 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:31:08.060 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 19:31:08.060 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-02 19:31:08.060 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:31:08.063 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-02 19:31:08.063 [main] TransactionImpl - begin
[DEBUG] 2019-10-02 19:31:08.066 [main] TransactionImpl - committing
[DEBUG] 2019-10-02 19:31:08.066 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-02 19:31:08.067 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-02 19:31:08.067 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2019-10-02 19:31:08.068 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-10-02 19:31:08.068 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-02 19:31:08.068 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=Do the thing, name=Test Recipe, ingredients={ {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }, id=3, user=com.alexmalotky.entity.User#3}
[DEBUG] 2019-10-02 19:31:08.068 [main] SQL - update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 19:31:08.074 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:31:08.075 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:32:01.866 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 19:32:01.874 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 19:32:01.895 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 19:32:02.191 [http-nio-8080-exec-10] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 19:32:02.195 [http-nio-8080-exec-10] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 19:32:02.690 [http-nio-8080-exec-10] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 19:32:02.690 [http-nio-8080-exec-10] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 19:32:02.738 [http-nio-8080-exec-10] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 19:32:03.405 [http-nio-8080-exec-10] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 19:32:03.463 [http-nio-8080-exec-10] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 19:32:03.466 [http-nio-8080-exec-10] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 19:32:03.532 [http-nio-8080-exec-10] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 19:32:03.650 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3b2e9db1
[DEBUG] 2019-10-02 19:32:03.650 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3b2e9db1
[DEBUG] 2019-10-02 19:32:03.650 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3b2e9db1
[DEBUG] 2019-10-02 19:32:03.652 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1abd9b07
[DEBUG] 2019-10-02 19:32:03.653 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5e7ab2da
[DEBUG] 2019-10-02 19:32:03.655 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3b22e969
[DEBUG] 2019-10-02 19:32:03.658 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@22e7a00e
[DEBUG] 2019-10-02 19:32:03.658 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@22e7a00e
[DEBUG] 2019-10-02 19:32:03.658 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@22e7a00e
[DEBUG] 2019-10-02 19:32:03.660 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6e6e1274
[DEBUG] 2019-10-02 19:32:03.661 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6e6e1274
[DEBUG] 2019-10-02 19:32:03.661 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e6e1274
[DEBUG] 2019-10-02 19:32:03.663 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@428be97f
[DEBUG] 2019-10-02 19:32:03.664 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@428be97f
[DEBUG] 2019-10-02 19:32:03.664 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@428be97f
[DEBUG] 2019-10-02 19:32:03.666 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@45329ecf
[DEBUG] 2019-10-02 19:32:03.666 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@45329ecf
[DEBUG] 2019-10-02 19:32:03.666 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@45329ecf
[DEBUG] 2019-10-02 19:32:03.669 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3184efe4
[DEBUG] 2019-10-02 19:32:03.669 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3184efe4
[DEBUG] 2019-10-02 19:32:03.670 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3184efe4
[DEBUG] 2019-10-02 19:32:03.672 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5ff1ce10
[DEBUG] 2019-10-02 19:32:03.672 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5ff1ce10
[DEBUG] 2019-10-02 19:32:03.672 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5ff1ce10
[DEBUG] 2019-10-02 19:32:03.675 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3ee64b2f
[DEBUG] 2019-10-02 19:32:03.675 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3ee64b2f
[DEBUG] 2019-10-02 19:32:03.676 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3ee64b2f
[DEBUG] 2019-10-02 19:32:03.678 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@26ce47ce
[DEBUG] 2019-10-02 19:32:03.678 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@26ce47ce
[DEBUG] 2019-10-02 19:32:03.681 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1d0b3e60
[DEBUG] 2019-10-02 19:32:03.681 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1d0b3e60
[DEBUG] 2019-10-02 19:32:03.683 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@537523fa
[DEBUG] 2019-10-02 19:32:03.683 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@537523fa
[DEBUG] 2019-10-02 19:32:03.684 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@209392ce
[DEBUG] 2019-10-02 19:32:03.686 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4d16ca66
[DEBUG] 2019-10-02 19:32:03.688 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7778791f
[DEBUG] 2019-10-02 19:32:03.688 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7778791f
[DEBUG] 2019-10-02 19:32:03.691 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@f07ed94
[DEBUG] 2019-10-02 19:32:03.692 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@f07ed94
[DEBUG] 2019-10-02 19:32:03.702 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2fbbfa16
[DEBUG] 2019-10-02 19:32:03.702 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2fbbfa16
[DEBUG] 2019-10-02 19:32:03.705 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@408f71a4
[DEBUG] 2019-10-02 19:32:03.705 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@408f71a4
[DEBUG] 2019-10-02 19:32:03.709 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7936eafe
[DEBUG] 2019-10-02 19:32:03.709 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7936eafe
[DEBUG] 2019-10-02 19:32:03.712 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@57ccf0b2
[DEBUG] 2019-10-02 19:32:03.712 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@57ccf0b2
[DEBUG] 2019-10-02 19:32:03.715 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1127970
[DEBUG] 2019-10-02 19:32:03.715 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1127970
[DEBUG] 2019-10-02 19:32:03.719 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@538228a0
[DEBUG] 2019-10-02 19:32:03.719 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@538228a0
[DEBUG] 2019-10-02 19:32:03.723 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55536058
[DEBUG] 2019-10-02 19:32:03.723 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55536058
[DEBUG] 2019-10-02 19:32:03.727 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@49dc3e8d
[DEBUG] 2019-10-02 19:32:03.727 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@49dc3e8d
[DEBUG] 2019-10-02 19:32:03.730 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@37846d96
[DEBUG] 2019-10-02 19:32:03.730 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@37846d96
[DEBUG] 2019-10-02 19:32:03.732 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@27870917
[DEBUG] 2019-10-02 19:32:03.732 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@27870917
[DEBUG] 2019-10-02 19:32:03.732 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@27870917
[DEBUG] 2019-10-02 19:32:03.736 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14b5dcb5
[DEBUG] 2019-10-02 19:32:03.738 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2e999c20
[DEBUG] 2019-10-02 19:32:03.738 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2e999c20
[DEBUG] 2019-10-02 19:32:03.738 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2e999c20
[DEBUG] 2019-10-02 19:32:03.741 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@18a4e3bb
[DEBUG] 2019-10-02 19:32:03.743 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@909724a
[DEBUG] 2019-10-02 19:32:03.744 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@909724a
[DEBUG] 2019-10-02 19:32:03.746 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2e3bb05b
[DEBUG] 2019-10-02 19:32:03.746 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2e3bb05b
[DEBUG] 2019-10-02 19:32:03.748 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@350528c9
[DEBUG] 2019-10-02 19:32:03.749 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@350528c9
[DEBUG] 2019-10-02 19:32:03.751 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1c802cba
[DEBUG] 2019-10-02 19:32:03.751 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1c802cba
[DEBUG] 2019-10-02 19:32:03.753 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@284d473e
[DEBUG] 2019-10-02 19:32:03.753 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@284d473e
[DEBUG] 2019-10-02 19:32:03.754 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e3538b1
[DEBUG] 2019-10-02 19:32:03.757 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@ba4c9fe
[DEBUG] 2019-10-02 19:32:03.757 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@ba4c9fe
[DEBUG] 2019-10-02 19:32:03.757 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@ba4c9fe
[DEBUG] 2019-10-02 19:32:03.760 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@18a2d525
[DEBUG] 2019-10-02 19:32:03.760 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@18a2d525
[DEBUG] 2019-10-02 19:32:03.760 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@18a2d525
[DEBUG] 2019-10-02 19:32:03.763 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5a7e7a56
[DEBUG] 2019-10-02 19:32:03.764 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@322a389b
[DEBUG] 2019-10-02 19:32:03.766 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@72f5677d
[DEBUG] 2019-10-02 19:32:03.767 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@72f5677d
[DEBUG] 2019-10-02 19:32:03.767 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@72f5677d
[DEBUG] 2019-10-02 19:32:03.769 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6fbb5be2
[DEBUG] 2019-10-02 19:32:03.770 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6fbb5be2
[DEBUG] 2019-10-02 19:32:03.770 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6fbb5be2
[DEBUG] 2019-10-02 19:32:03.771 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@37a8a4fa
[DEBUG] 2019-10-02 19:32:03.772 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6406a872
[DEBUG] 2019-10-02 19:32:03.776 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@51cc357a
[DEBUG] 2019-10-02 19:32:03.776 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@51cc357a
[DEBUG] 2019-10-02 19:32:03.778 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@444232d0
[DEBUG] 2019-10-02 19:32:03.781 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1e9c9ebd
[DEBUG] 2019-10-02 19:32:03.781 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1e9c9ebd
[DEBUG] 2019-10-02 19:32:03.785 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5991af1f
[DEBUG] 2019-10-02 19:32:03.785 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5991af1f
[DEBUG] 2019-10-02 19:32:03.786 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2fb3104a
[DEBUG] 2019-10-02 19:32:03.788 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@46e25f0c
[DEBUG] 2019-10-02 19:32:03.795 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@16d72a23
[DEBUG] 2019-10-02 19:32:03.806 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@e700988
[DEBUG] 2019-10-02 19:32:03.806 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@e700988
[DEBUG] 2019-10-02 19:32:03.808 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1529ef78
[DEBUG] 2019-10-02 19:32:03.808 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@41c34924
[DEBUG] 2019-10-02 19:32:03.808 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@461e5b00
[DEBUG] 2019-10-02 19:32:03.808 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18ccfc0
[DEBUG] 2019-10-02 19:32:03.809 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5b04a2a6
[DEBUG] 2019-10-02 19:32:03.809 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d54a8b
[DEBUG] 2019-10-02 19:32:03.809 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@34a7d7ca
[DEBUG] 2019-10-02 19:32:03.809 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53b2fc51
[DEBUG] 2019-10-02 19:32:03.886 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 19:32:03.887 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 19:32:03.889 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 19:32:03.889 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 19:32:03.891 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 19:32:03.894 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 19:32:03.895 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 19:32:03.898 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 19:32:03.901 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 19:32:03.902 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 19:32:03.903 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 19:32:03.904 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 19:32:03.904 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 19:32:03.905 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 19:32:03.919 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 19:32:03.920 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 19:32:03.920 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 19:32:04.220 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 19:32:05.230 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 19:32:05.230 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 19:32:05.230 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 19:32:05.450 [http-nio-8080-exec-10] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 19:32:05.514 [http-nio-8080-exec-10] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 19:32:05.569 [http-nio-8080-exec-10] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 19:32:05.668 [http-nio-8080-exec-10] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 19:32:05.679 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1491dd2d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@368c4c10]
[DEBUG] 2019-10-02 19:32:05.854 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:32:05.973 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 19:32:05.997 [http-nio-8080-exec-10] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 19:32:06.007 [http-nio-8080-exec-10] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 19:32:06.086 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:32:06.095 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 19:32:06.100 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 19:32:06.106 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 19:32:06.112 [http-nio-8080-exec-10] PropertyBinder - Building property id
[DEBUG] 2019-10-02 19:32:06.123 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 19:32:06.126 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:32:06.126 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 19:32:06.127 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 19:32:06.127 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 19:32:06.127 [http-nio-8080-exec-10] PropertyBinder - Building property email
[DEBUG] 2019-10-02 19:32:06.127 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:32:06.127 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 19:32:06.128 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 19:32:06.128 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 19:32:06.128 [http-nio-8080-exec-10] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 19:32:06.128 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:32:06.128 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 19:32:06.128 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 19:32:06.128 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 19:32:06.128 [http-nio-8080-exec-10] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 19:32:06.132 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:32:06.133 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:32:06.139 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:32:06.162 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:32:06.163 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:32:06.165 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 19:32:06.168 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:32:06.169 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:32:06.169 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:32:06.177 [http-nio-8080-exec-10] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 19:32:06.178 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:32:06.178 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 19:32:06.178 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 19:32:06.178 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 19:32:06.178 [http-nio-8080-exec-10] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 19:32:06.182 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:32:06.182 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 19:32:06.182 [http-nio-8080-exec-10] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 19:32:06.182 [http-nio-8080-exec-10] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 19:32:06.185 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:32:06.185 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 19:32:06.185 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 19:32:06.185 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 19:32:06.185 [http-nio-8080-exec-10] PropertyBinder - Building property id
[DEBUG] 2019-10-02 19:32:06.186 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 19:32:06.186 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:32:06.186 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 19:32:06.186 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 19:32:06.186 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 19:32:06.186 [http-nio-8080-exec-10] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 19:32:06.186 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:32:06.186 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 19:32:06.186 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 19:32:06.186 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 19:32:06.187 [http-nio-8080-exec-10] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 19:32:06.187 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:32:06.187 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 19:32:06.187 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 19:32:06.187 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 19:32:06.187 [http-nio-8080-exec-10] PropertyBinder - Building property name
[DEBUG] 2019-10-02 19:32:06.187 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 19:32:06.187 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:32:06.191 [http-nio-8080-exec-10] PropertyBinder - Building property user
[DEBUG] 2019-10-02 19:32:06.195 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 19:32:06.195 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 19:32:06.195 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 19:32:06.196 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 19:32:06.196 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 19:32:06.196 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 19:32:06.196 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 19:32:06.196 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 19:32:06.196 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 19:32:06.208 [http-nio-8080-exec-10] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 19:32:06.208 [http-nio-8080-exec-10] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 19:32:06.208 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:32:06.210 [http-nio-8080-exec-10] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 19:32:06.211 [http-nio-8080-exec-10] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 19:32:06.215 [http-nio-8080-exec-10] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 19:32:06.215 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:32:06.216 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:32:06.224 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:32:06.307 [http-nio-8080-exec-10] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 19:32:06.309 [http-nio-8080-exec-10] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 19:32:06.309 [http-nio-8080-exec-10] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 19:32:06.309 [http-nio-8080-exec-10] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 19:32:06.309 [http-nio-8080-exec-10] Settings - Statistics: disabled
[DEBUG] 2019-10-02 19:32:06.309 [http-nio-8080-exec-10] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 19:32:06.309 [http-nio-8080-exec-10] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 19:32:06.309 [http-nio-8080-exec-10] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 19:32:06.309 [http-nio-8080-exec-10] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 19:32:06.309 [http-nio-8080-exec-10] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 19:32:06.309 [http-nio-8080-exec-10] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 19:32:06.309 [http-nio-8080-exec-10] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 19:32:06.310 [http-nio-8080-exec-10] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 19:32:06.310 [http-nio-8080-exec-10] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 19:32:06.310 [http-nio-8080-exec-10] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 19:32:06.310 [http-nio-8080-exec-10] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 19:32:06.310 [http-nio-8080-exec-10] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 19:32:06.310 [http-nio-8080-exec-10] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 19:32:06.310 [http-nio-8080-exec-10] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 19:32:06.310 [http-nio-8080-exec-10] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 19:32:06.310 [http-nio-8080-exec-10] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 19:32:06.310 [http-nio-8080-exec-10] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 19:32:06.310 [http-nio-8080-exec-10] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 19:32:06.310 [http-nio-8080-exec-10] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 19:32:06.311 [http-nio-8080-exec-10] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 19:32:06.311 [http-nio-8080-exec-10] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 19:32:06.311 [http-nio-8080-exec-10] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 19:32:06.311 [http-nio-8080-exec-10] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 19:32:06.311 [http-nio-8080-exec-10] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 19:32:06.311 [http-nio-8080-exec-10] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 19:32:06.311 [http-nio-8080-exec-10] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 19:32:06.311 [http-nio-8080-exec-10] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 19:32:06.311 [http-nio-8080-exec-10] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 19:32:06.311 [http-nio-8080-exec-10] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 19:32:06.311 [http-nio-8080-exec-10] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 19:32:06.312 [http-nio-8080-exec-10] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 19:32:06.312 [http-nio-8080-exec-10] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 19:32:06.312 [http-nio-8080-exec-10] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 19:32:06.312 [http-nio-8080-exec-10] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 19:32:06.479 [http-nio-8080-exec-10] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 19:32:06.535 [http-nio-8080-exec-10] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 19:32:06.535 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.2+9-LTS, user.name=Alex, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, java.vendor.version=18.9, derby.system.home=C:\Users\Alex\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\Users\Alex\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.2, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=windows, java.class.path=C:\Users\Alex\tomcat\bin\bootstrap.jar;C:\Users\Alex\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\Users\Alex\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/Users/Alex/tomcat/lib","C:/Users/Alex/tomcat/lib/*.jar","C:\Users\Alex\tomcat/lib","C:\Users\Alex\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=10.0, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=http://bugreport.java.com/bugreport/, tomee.remote.support=true, catalina.home=C:\Users\Alex\tomcat, user.dir=C:\Users\Alex\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3ff91354, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2019-10-02 19:32:06.603 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:32:06.603 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:32:06.623 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:32:06.624 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:32:06.631 [http-nio-8080-exec-10] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 19:32:06.633 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 19:32:06.633 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1491dd2d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6e4b6df8]
[DEBUG] 2019-10-02 19:32:06.780 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:32:06.780 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:32:06.836 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:32:06.836 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:32:07.451 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:32:07.452 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:32:07.453 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:32:07.453 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:32:07.508 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:32:07.508 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 19:32:07.508 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 19:32:07.508 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 19:32:07.509 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 19:32:07.519 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:32:07.519 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 19:32:07.519 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 19:32:07.519 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 19:32:07.519 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 19:32:07.520 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 19:32:07.520 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 19:32:07.588 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d74bdbf]
[DEBUG] 2019-10-02 19:32:07.592 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 19:32:07.592 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 19:32:07.592 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 19:32:07.592 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 19:32:07.607 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e36fb9]
[DEBUG] 2019-10-02 19:32:07.614 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@338d3ae8]
[DEBUG] 2019-10-02 19:32:07.617 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 19:32:07.618 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 19:32:07.618 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 19:32:07.618 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 19:32:07.618 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 19:32:07.619 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 19:32:07.619 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:32:07.656 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:32:07.673 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 19:32:07.680 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:32:07.680 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63c568a]
[DEBUG] 2019-10-02 19:32:07.681 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 19:32:07.681 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 19:32:07.681 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 19:32:07.681 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 19:32:07.681 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1f63631b]
[DEBUG] 2019-10-02 19:32:07.681 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ab39acc]
[DEBUG] 2019-10-02 19:32:07.681 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 19:32:07.682 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 19:32:07.682 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 19:32:07.682 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 19:32:07.682 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 19:32:07.682 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 19:32:07.682 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:32:07.682 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:32:07.683 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 19:32:07.684 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:32:07.723 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:32:07.724 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:32:07.724 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:32:07.724 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 19:32:07.724 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 19:32:07.724 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 19:32:07.724 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 19:32:07.725 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 19:32:07.725 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 19:32:07.725 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e658456]
[DEBUG] 2019-10-02 19:32:07.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:32:07.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:32:07.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:32:07.725 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:32:07.726 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30836962]
[DEBUG] 2019-10-02 19:32:07.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 19:32:07.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 19:32:07.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 19:32:07.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 19:32:07.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 19:32:07.728 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 19:32:07.728 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:32:07.729 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:32:07.730 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 19:32:07.730 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:32:07.730 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d4e5e1d]
[DEBUG] 2019-10-02 19:32:07.730 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:32:07.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:32:07.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:32:07.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:32:07.731 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b5cf7e5]
[DEBUG] 2019-10-02 19:32:07.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 19:32:07.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 19:32:07.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 19:32:07.731 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 19:32:07.732 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 19:32:07.732 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 19:32:07.732 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:32:07.732 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:32:07.733 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 19:32:07.733 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:32:07.733 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 19:32:07.734 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 19:32:07.752 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a80d9de]
[DEBUG] 2019-10-02 19:32:07.752 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6914bafe]
[DEBUG] 2019-10-02 19:32:07.754 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:32:07.754 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:32:07.754 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:32:07.754 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:32:07.754 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 19:32:07.754 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:32:07.760 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:32:07.760 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 19:32:07.762 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:32:07.886 [http-nio-8080-exec-10] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 19:32:07.886 [http-nio-8080-exec-10] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 19:32:07.889 [http-nio-8080-exec-10] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 19:32:07.911 [http-nio-8080-exec-10] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 19:32:07.912 [http-nio-8080-exec-10] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 19:32:07.913 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 19:32:07.913 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 19:32:07.918 [http-nio-8080-exec-10] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@59b30528
[DEBUG] 2019-10-02 19:32:07.923 [http-nio-8080-exec-10] SessionFactoryRegistry - Registering SessionFactory: 938fd84a-a81b-41c7-9e1c-5b2b9a645902 (<unnamed>)
[DEBUG] 2019-10-02 19:32:07.923 [http-nio-8080-exec-10] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 19:32:08.132 [http-nio-8080-exec-10] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 19:34:53.874 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 19:34:53.883 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 19:34:53.910 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 19:34:54.169 [http-nio-8080-exec-10] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 19:34:54.176 [http-nio-8080-exec-10] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 19:34:54.693 [http-nio-8080-exec-10] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 19:34:54.693 [http-nio-8080-exec-10] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 19:34:54.749 [http-nio-8080-exec-10] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 19:34:55.350 [http-nio-8080-exec-10] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 19:34:55.414 [http-nio-8080-exec-10] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 19:34:55.418 [http-nio-8080-exec-10] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 19:34:55.513 [http-nio-8080-exec-10] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 19:34:55.658 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@548e0367
[DEBUG] 2019-10-02 19:34:55.658 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@548e0367
[DEBUG] 2019-10-02 19:34:55.659 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@548e0367
[DEBUG] 2019-10-02 19:34:55.661 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7310d0d2
[DEBUG] 2019-10-02 19:34:55.664 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@53f8f6d6
[DEBUG] 2019-10-02 19:34:55.666 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4dcc7adf
[DEBUG] 2019-10-02 19:34:55.675 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7ecb8c
[DEBUG] 2019-10-02 19:34:55.675 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7ecb8c
[DEBUG] 2019-10-02 19:34:55.676 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7ecb8c
[DEBUG] 2019-10-02 19:34:55.681 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7e77239e
[DEBUG] 2019-10-02 19:34:55.681 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7e77239e
[DEBUG] 2019-10-02 19:34:55.681 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e77239e
[DEBUG] 2019-10-02 19:34:55.687 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@50ac5c81
[DEBUG] 2019-10-02 19:34:55.692 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@50ac5c81
[DEBUG] 2019-10-02 19:34:55.692 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@50ac5c81
[DEBUG] 2019-10-02 19:34:55.698 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1e1eb2ed
[DEBUG] 2019-10-02 19:34:55.700 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1e1eb2ed
[DEBUG] 2019-10-02 19:34:55.700 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1e1eb2ed
[DEBUG] 2019-10-02 19:34:55.705 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@46f11a51
[DEBUG] 2019-10-02 19:34:55.706 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@46f11a51
[DEBUG] 2019-10-02 19:34:55.706 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@46f11a51
[DEBUG] 2019-10-02 19:34:55.708 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@540087d6
[DEBUG] 2019-10-02 19:34:55.708 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@540087d6
[DEBUG] 2019-10-02 19:34:55.708 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@540087d6
[DEBUG] 2019-10-02 19:34:55.710 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2bfb0f67
[DEBUG] 2019-10-02 19:34:55.711 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2bfb0f67
[DEBUG] 2019-10-02 19:34:55.711 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2bfb0f67
[DEBUG] 2019-10-02 19:34:55.715 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@239fbe0c
[DEBUG] 2019-10-02 19:34:55.716 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@239fbe0c
[DEBUG] 2019-10-02 19:34:55.719 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@60fc2d0f
[DEBUG] 2019-10-02 19:34:55.719 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@60fc2d0f
[DEBUG] 2019-10-02 19:34:55.722 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2988d490
[DEBUG] 2019-10-02 19:34:55.722 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2988d490
[DEBUG] 2019-10-02 19:34:55.723 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cde6f70
[DEBUG] 2019-10-02 19:34:55.724 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@39dc1c1d
[DEBUG] 2019-10-02 19:34:55.726 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@184df89f
[DEBUG] 2019-10-02 19:34:55.727 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@184df89f
[DEBUG] 2019-10-02 19:34:55.730 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@12ae4114
[DEBUG] 2019-10-02 19:34:55.730 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@12ae4114
[DEBUG] 2019-10-02 19:34:55.741 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@19eb9729
[DEBUG] 2019-10-02 19:34:55.742 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@19eb9729
[DEBUG] 2019-10-02 19:34:55.746 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5ed6e190
[DEBUG] 2019-10-02 19:34:55.746 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5ed6e190
[DEBUG] 2019-10-02 19:34:55.749 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@18bebec1
[DEBUG] 2019-10-02 19:34:55.749 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@18bebec1
[DEBUG] 2019-10-02 19:34:55.752 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7664ec58
[DEBUG] 2019-10-02 19:34:55.752 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7664ec58
[DEBUG] 2019-10-02 19:34:55.755 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3a97f7ab
[DEBUG] 2019-10-02 19:34:55.755 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3a97f7ab
[DEBUG] 2019-10-02 19:34:55.758 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4c925e23
[DEBUG] 2019-10-02 19:34:55.758 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4c925e23
[DEBUG] 2019-10-02 19:34:55.764 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47b09f1c
[DEBUG] 2019-10-02 19:34:55.765 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@47b09f1c
[DEBUG] 2019-10-02 19:34:55.768 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@53453eed
[DEBUG] 2019-10-02 19:34:55.768 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@53453eed
[DEBUG] 2019-10-02 19:34:55.771 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4c1ac3e8
[DEBUG] 2019-10-02 19:34:55.771 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4c1ac3e8
[DEBUG] 2019-10-02 19:34:55.774 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4748f549
[DEBUG] 2019-10-02 19:34:55.774 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4748f549
[DEBUG] 2019-10-02 19:34:55.774 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4748f549
[DEBUG] 2019-10-02 19:34:55.777 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@54fbda0c
[DEBUG] 2019-10-02 19:34:55.781 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@41ae2f8e
[DEBUG] 2019-10-02 19:34:55.781 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@41ae2f8e
[DEBUG] 2019-10-02 19:34:55.781 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@41ae2f8e
[DEBUG] 2019-10-02 19:34:55.783 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@50fb2ca8
[DEBUG] 2019-10-02 19:34:55.785 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6070c7d6
[DEBUG] 2019-10-02 19:34:55.786 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6070c7d6
[DEBUG] 2019-10-02 19:34:55.788 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@77cb8735
[DEBUG] 2019-10-02 19:34:55.789 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77cb8735
[DEBUG] 2019-10-02 19:34:55.791 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@cc8055c
[DEBUG] 2019-10-02 19:34:55.791 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@cc8055c
[DEBUG] 2019-10-02 19:34:55.796 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@987c96f
[DEBUG] 2019-10-02 19:34:55.796 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@987c96f
[DEBUG] 2019-10-02 19:34:55.799 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@44bbf48
[DEBUG] 2019-10-02 19:34:55.800 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@44bbf48
[DEBUG] 2019-10-02 19:34:55.801 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54c233a8
[DEBUG] 2019-10-02 19:34:55.804 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@64f88e4f
[DEBUG] 2019-10-02 19:34:55.804 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@64f88e4f
[DEBUG] 2019-10-02 19:34:55.804 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@64f88e4f
[DEBUG] 2019-10-02 19:34:55.808 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c5a9160
[DEBUG] 2019-10-02 19:34:55.808 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c5a9160
[DEBUG] 2019-10-02 19:34:55.808 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c5a9160
[DEBUG] 2019-10-02 19:34:55.812 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1879fd6e
[DEBUG] 2019-10-02 19:34:55.814 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@639ff27c
[DEBUG] 2019-10-02 19:34:55.818 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@4903d69c
[DEBUG] 2019-10-02 19:34:55.818 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@4903d69c
[DEBUG] 2019-10-02 19:34:55.818 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@4903d69c
[DEBUG] 2019-10-02 19:34:55.822 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3bd55a94
[DEBUG] 2019-10-02 19:34:55.822 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3bd55a94
[DEBUG] 2019-10-02 19:34:55.822 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3bd55a94
[DEBUG] 2019-10-02 19:34:55.824 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1a39e689
[DEBUG] 2019-10-02 19:34:55.826 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4db1cf98
[DEBUG] 2019-10-02 19:34:55.831 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@18db6a7c
[DEBUG] 2019-10-02 19:34:55.831 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@18db6a7c
[DEBUG] 2019-10-02 19:34:55.832 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3fe4ebec
[DEBUG] 2019-10-02 19:34:55.836 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@603d8a47
[DEBUG] 2019-10-02 19:34:55.836 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@603d8a47
[DEBUG] 2019-10-02 19:34:55.840 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@237370db
[DEBUG] 2019-10-02 19:34:55.840 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@237370db
[DEBUG] 2019-10-02 19:34:55.841 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4e1afc23
[DEBUG] 2019-10-02 19:34:55.843 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@43502441
[DEBUG] 2019-10-02 19:34:55.848 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@26093056
[DEBUG] 2019-10-02 19:34:55.856 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5fdace8b
[DEBUG] 2019-10-02 19:34:55.856 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5fdace8b
[DEBUG] 2019-10-02 19:34:55.858 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@32a160b8
[DEBUG] 2019-10-02 19:34:55.858 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3ed54f62
[DEBUG] 2019-10-02 19:34:55.858 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@210ef49f
[DEBUG] 2019-10-02 19:34:55.858 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@287f6f9c
[DEBUG] 2019-10-02 19:34:55.858 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@11627e8b
[DEBUG] 2019-10-02 19:34:55.859 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d88d9a
[DEBUG] 2019-10-02 19:34:55.859 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@53a42bb2
[DEBUG] 2019-10-02 19:34:55.859 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@f4bdd5
[DEBUG] 2019-10-02 19:34:55.941 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 19:34:55.943 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 19:34:55.947 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 19:34:55.947 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 19:34:55.949 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 19:34:55.952 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 19:34:55.953 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 19:34:55.957 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 19:34:55.959 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 19:34:55.961 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 19:34:55.962 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 19:34:55.964 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 19:34:55.964 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 19:34:55.966 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 19:34:55.978 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 19:34:55.979 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 19:34:55.979 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 19:34:56.304 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 19:34:57.226 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 19:34:57.227 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 19:34:57.227 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 19:34:57.322 [http-nio-8080-exec-10] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 19:34:57.394 [http-nio-8080-exec-10] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 19:34:57.449 [http-nio-8080-exec-10] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 19:34:57.541 [http-nio-8080-exec-10] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 19:34:57.557 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11074194] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@f06a6c2]
[DEBUG] 2019-10-02 19:34:57.779 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:34:57.862 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 19:34:57.894 [http-nio-8080-exec-10] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 19:34:57.903 [http-nio-8080-exec-10] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 19:34:57.982 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:34:57.989 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 19:34:57.992 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 19:34:57.997 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 19:34:58.003 [http-nio-8080-exec-10] PropertyBinder - Building property id
[DEBUG] 2019-10-02 19:34:58.013 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 19:34:58.016 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:34:58.016 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 19:34:58.017 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 19:34:58.017 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 19:34:58.017 [http-nio-8080-exec-10] PropertyBinder - Building property email
[DEBUG] 2019-10-02 19:34:58.017 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:34:58.017 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 19:34:58.017 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 19:34:58.018 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 19:34:58.018 [http-nio-8080-exec-10] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 19:34:58.018 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:34:58.018 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 19:34:58.018 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 19:34:58.018 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 19:34:58.018 [http-nio-8080-exec-10] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 19:34:58.022 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:34:58.022 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:34:58.026 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:34:58.049 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:34:58.050 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:34:58.052 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 19:34:58.056 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:34:58.056 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:34:58.057 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:34:58.064 [http-nio-8080-exec-10] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 19:34:58.065 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:34:58.065 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 19:34:58.065 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 19:34:58.065 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 19:34:58.066 [http-nio-8080-exec-10] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 19:34:58.068 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:34:58.069 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 19:34:58.069 [http-nio-8080-exec-10] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 19:34:58.069 [http-nio-8080-exec-10] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 19:34:58.072 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:34:58.072 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 19:34:58.073 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 19:34:58.073 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 19:34:58.073 [http-nio-8080-exec-10] PropertyBinder - Building property id
[DEBUG] 2019-10-02 19:34:58.073 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 19:34:58.073 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:34:58.073 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 19:34:58.073 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 19:34:58.073 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 19:34:58.074 [http-nio-8080-exec-10] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 19:34:58.074 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:34:58.074 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 19:34:58.074 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 19:34:58.074 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 19:34:58.074 [http-nio-8080-exec-10] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 19:34:58.074 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:34:58.074 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 19:34:58.074 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 19:34:58.074 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 19:34:58.075 [http-nio-8080-exec-10] PropertyBinder - Building property name
[DEBUG] 2019-10-02 19:34:58.075 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 19:34:58.075 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:34:58.079 [http-nio-8080-exec-10] PropertyBinder - Building property user
[DEBUG] 2019-10-02 19:34:58.083 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 19:34:58.083 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 19:34:58.083 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 19:34:58.083 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 19:34:58.083 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 19:34:58.083 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 19:34:58.083 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 19:34:58.083 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 19:34:58.083 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 19:34:58.095 [http-nio-8080-exec-10] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 19:34:58.095 [http-nio-8080-exec-10] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 19:34:58.096 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:34:58.097 [http-nio-8080-exec-10] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 19:34:58.099 [http-nio-8080-exec-10] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 19:34:58.101 [http-nio-8080-exec-10] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 19:34:58.102 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:34:58.102 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:34:58.110 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:34:58.191 [http-nio-8080-exec-10] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 19:34:58.193 [http-nio-8080-exec-10] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 19:34:58.193 [http-nio-8080-exec-10] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 19:34:58.194 [http-nio-8080-exec-10] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 19:34:58.194 [http-nio-8080-exec-10] Settings - Statistics: disabled
[DEBUG] 2019-10-02 19:34:58.194 [http-nio-8080-exec-10] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 19:34:58.194 [http-nio-8080-exec-10] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 19:34:58.194 [http-nio-8080-exec-10] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 19:34:58.194 [http-nio-8080-exec-10] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 19:34:58.194 [http-nio-8080-exec-10] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 19:34:58.194 [http-nio-8080-exec-10] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 19:34:58.194 [http-nio-8080-exec-10] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 19:34:58.194 [http-nio-8080-exec-10] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 19:34:58.194 [http-nio-8080-exec-10] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 19:34:58.194 [http-nio-8080-exec-10] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 19:34:58.195 [http-nio-8080-exec-10] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 19:34:58.195 [http-nio-8080-exec-10] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 19:34:58.195 [http-nio-8080-exec-10] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 19:34:58.195 [http-nio-8080-exec-10] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 19:34:58.195 [http-nio-8080-exec-10] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 19:34:58.195 [http-nio-8080-exec-10] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 19:34:58.195 [http-nio-8080-exec-10] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 19:34:58.195 [http-nio-8080-exec-10] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 19:34:58.195 [http-nio-8080-exec-10] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 19:34:58.195 [http-nio-8080-exec-10] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 19:34:58.196 [http-nio-8080-exec-10] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 19:34:58.196 [http-nio-8080-exec-10] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 19:34:58.196 [http-nio-8080-exec-10] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 19:34:58.196 [http-nio-8080-exec-10] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 19:34:58.196 [http-nio-8080-exec-10] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 19:34:58.196 [http-nio-8080-exec-10] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 19:34:58.196 [http-nio-8080-exec-10] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 19:34:58.196 [http-nio-8080-exec-10] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 19:34:58.197 [http-nio-8080-exec-10] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 19:34:58.197 [http-nio-8080-exec-10] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 19:34:58.197 [http-nio-8080-exec-10] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 19:34:58.197 [http-nio-8080-exec-10] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 19:34:58.197 [http-nio-8080-exec-10] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 19:34:58.197 [http-nio-8080-exec-10] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 19:34:58.350 [http-nio-8080-exec-10] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 19:34:58.405 [http-nio-8080-exec-10] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 19:34:58.406 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.2+9-LTS, user.name=Alex, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, java.vendor.version=18.9, derby.system.home=C:\Users\Alex\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\Users\Alex\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.2, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=windows, java.class.path=C:\Users\Alex\tomcat\bin\bootstrap.jar;C:\Users\Alex\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\Users\Alex\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/Users/Alex/tomcat/lib","C:/Users/Alex/tomcat/lib/*.jar","C:\Users\Alex\tomcat/lib","C:\Users\Alex\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=10.0, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=http://bugreport.java.com/bugreport/, tomee.remote.support=true, catalina.home=C:\Users\Alex\tomcat, user.dir=C:\Users\Alex\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7a7f5752, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2019-10-02 19:34:58.463 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:34:58.463 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:34:58.486 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:34:58.486 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:34:58.494 [http-nio-8080-exec-10] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 19:34:58.495 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 19:34:58.495 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11074194] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1c375149]
[DEBUG] 2019-10-02 19:34:58.631 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:34:58.631 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:34:58.694 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:34:58.694 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:34:59.258 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:34:59.259 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:34:59.259 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:34:59.259 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:34:59.312 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:34:59.313 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 19:34:59.313 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 19:34:59.313 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 19:34:59.313 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 19:34:59.321 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:34:59.321 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 19:34:59.322 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 19:34:59.322 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 19:34:59.322 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 19:34:59.322 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 19:34:59.322 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 19:34:59.393 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a62f78a]
[DEBUG] 2019-10-02 19:34:59.396 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 19:34:59.396 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 19:34:59.396 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 19:34:59.396 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 19:34:59.409 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@607310b9]
[DEBUG] 2019-10-02 19:34:59.415 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47a2477a]
[DEBUG] 2019-10-02 19:34:59.418 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 19:34:59.418 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 19:34:59.418 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 19:34:59.418 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 19:34:59.419 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 19:34:59.420 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 19:34:59.420 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:34:59.453 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:34:59.470 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 19:34:59.476 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:34:59.476 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@219648c2]
[DEBUG] 2019-10-02 19:34:59.477 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 19:34:59.477 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 19:34:59.477 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 19:34:59.477 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 19:34:59.477 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12adff2e]
[DEBUG] 2019-10-02 19:34:59.477 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@504742c]
[DEBUG] 2019-10-02 19:34:59.477 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 19:34:59.477 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 19:34:59.477 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 19:34:59.477 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 19:34:59.477 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 19:34:59.478 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 19:34:59.478 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:34:59.478 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:34:59.479 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 19:34:59.479 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:34:59.521 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:34:59.522 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:34:59.522 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:34:59.522 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 19:34:59.522 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 19:34:59.522 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 19:34:59.522 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 19:34:59.522 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 19:34:59.522 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 19:34:59.522 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e722d29]
[DEBUG] 2019-10-02 19:34:59.522 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:34:59.523 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:34:59.523 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:34:59.523 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:34:59.523 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72c0f3f9]
[DEBUG] 2019-10-02 19:34:59.525 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 19:34:59.525 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 19:34:59.525 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 19:34:59.526 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 19:34:59.526 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 19:34:59.526 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 19:34:59.526 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:34:59.526 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:34:59.527 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 19:34:59.527 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:34:59.527 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@655dd013]
[DEBUG] 2019-10-02 19:34:59.527 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:34:59.527 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:34:59.527 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:34:59.527 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:34:59.528 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@436b3049]
[DEBUG] 2019-10-02 19:34:59.528 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 19:34:59.528 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 19:34:59.528 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 19:34:59.528 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 19:34:59.528 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 19:34:59.528 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 19:34:59.528 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:34:59.529 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:34:59.529 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 19:34:59.530 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:34:59.530 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 19:34:59.531 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 19:34:59.545 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2fa63ba5]
[DEBUG] 2019-10-02 19:34:59.546 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f3dfbf8]
[DEBUG] 2019-10-02 19:34:59.546 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:34:59.546 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:34:59.546 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:34:59.546 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:34:59.546 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 19:34:59.547 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:34:59.553 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:34:59.554 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 19:34:59.556 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:34:59.665 [http-nio-8080-exec-10] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 19:34:59.665 [http-nio-8080-exec-10] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 19:34:59.666 [http-nio-8080-exec-10] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 19:34:59.687 [http-nio-8080-exec-10] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 19:34:59.688 [http-nio-8080-exec-10] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 19:34:59.689 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 19:34:59.689 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 19:34:59.696 [http-nio-8080-exec-10] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@33e2337
[DEBUG] 2019-10-02 19:34:59.702 [http-nio-8080-exec-10] SessionFactoryRegistry - Registering SessionFactory: 001ac424-14c1-414d-9967-94f43e9fb8f7 (<unnamed>)
[DEBUG] 2019-10-02 19:34:59.702 [http-nio-8080-exec-10] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 19:34:59.896 [http-nio-8080-exec-10] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 19:34:59.944 [http-nio-8080-exec-10] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:35:00.011 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:35:00.017 [http-nio-8080-exec-10] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:35:00.050 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:35:00.053 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `directions` : value = Do the thing
[DEBUG] 2019-10-02 19:35:00.053 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:35:00.053 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-02 19:35:00.053 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:35:00.053 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 19:35:00.053 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:35:00.054 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 19:35:00.054 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:35:00.056 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:35:00.056 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:35:00.056 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:35:00.056 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:35:00.056 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 19:35:00.056 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:35:00.056 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 19:35:00.056 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:35:00.056 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:35:00.056 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:35:00.071 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 19:35:00.072 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:35:00.072 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:35:00.073 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:35:00.077 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:35:00.077 [http-nio-8080-exec-10] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:35:00.079 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:35:00.083 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:35:00.084 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:35:00.084 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:35:00.084 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:35:00.084 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:35:00.085 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:35:00.085 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 19:35:00.085 [http-nio-8080-exec-10] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-02 19:35:00.085 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:37:29.863 [http-nio-8080-exec-8] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 19:37:29.873 [http-nio-8080-exec-8] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 19:37:29.894 [http-nio-8080-exec-8] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 19:37:30.242 [http-nio-8080-exec-8] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 19:37:30.256 [http-nio-8080-exec-8] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 19:37:30.836 [http-nio-8080-exec-8] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 19:37:30.836 [http-nio-8080-exec-8] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 19:37:30.889 [http-nio-8080-exec-8] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 19:37:31.552 [http-nio-8080-exec-8] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 19:37:31.614 [http-nio-8080-exec-8] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 19:37:31.617 [http-nio-8080-exec-8] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 19:37:31.688 [http-nio-8080-exec-8] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 19:37:31.799 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2935f0e2
[DEBUG] 2019-10-02 19:37:31.799 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2935f0e2
[DEBUG] 2019-10-02 19:37:31.799 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2935f0e2
[DEBUG] 2019-10-02 19:37:31.801 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4fd4b54b
[DEBUG] 2019-10-02 19:37:31.802 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@48927d67
[DEBUG] 2019-10-02 19:37:31.803 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@f14e4ee
[DEBUG] 2019-10-02 19:37:31.806 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@49950e43
[DEBUG] 2019-10-02 19:37:31.806 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@49950e43
[DEBUG] 2019-10-02 19:37:31.806 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@49950e43
[DEBUG] 2019-10-02 19:37:31.809 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4fabc559
[DEBUG] 2019-10-02 19:37:31.809 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4fabc559
[DEBUG] 2019-10-02 19:37:31.809 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4fabc559
[DEBUG] 2019-10-02 19:37:31.812 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@25affb87
[DEBUG] 2019-10-02 19:37:31.812 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@25affb87
[DEBUG] 2019-10-02 19:37:31.812 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@25affb87
[DEBUG] 2019-10-02 19:37:31.815 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5c82f7fe
[DEBUG] 2019-10-02 19:37:31.815 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5c82f7fe
[DEBUG] 2019-10-02 19:37:31.815 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5c82f7fe
[DEBUG] 2019-10-02 19:37:31.818 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3566ac96
[DEBUG] 2019-10-02 19:37:31.818 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3566ac96
[DEBUG] 2019-10-02 19:37:31.818 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3566ac96
[DEBUG] 2019-10-02 19:37:31.821 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5d89410e
[DEBUG] 2019-10-02 19:37:31.821 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5d89410e
[DEBUG] 2019-10-02 19:37:31.821 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5d89410e
[DEBUG] 2019-10-02 19:37:31.823 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4c6ef21c
[DEBUG] 2019-10-02 19:37:31.823 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4c6ef21c
[DEBUG] 2019-10-02 19:37:31.823 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4c6ef21c
[DEBUG] 2019-10-02 19:37:31.826 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@249b5f38
[DEBUG] 2019-10-02 19:37:31.826 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@249b5f38
[DEBUG] 2019-10-02 19:37:31.828 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7f6f0cc6
[DEBUG] 2019-10-02 19:37:31.828 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7f6f0cc6
[DEBUG] 2019-10-02 19:37:31.831 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@274d682a
[DEBUG] 2019-10-02 19:37:31.831 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@274d682a
[DEBUG] 2019-10-02 19:37:31.833 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7e68f503
[DEBUG] 2019-10-02 19:37:31.834 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@51cb5781
[DEBUG] 2019-10-02 19:37:31.836 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6fd31aa5
[DEBUG] 2019-10-02 19:37:31.837 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6fd31aa5
[DEBUG] 2019-10-02 19:37:31.839 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1a944655
[DEBUG] 2019-10-02 19:37:31.839 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1a944655
[DEBUG] 2019-10-02 19:37:31.850 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7fd20944
[DEBUG] 2019-10-02 19:37:31.850 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7fd20944
[DEBUG] 2019-10-02 19:37:31.853 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41b7efb5
[DEBUG] 2019-10-02 19:37:31.853 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41b7efb5
[DEBUG] 2019-10-02 19:37:31.856 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@29c5760
[DEBUG] 2019-10-02 19:37:31.856 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@29c5760
[DEBUG] 2019-10-02 19:37:31.859 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@15c90da8
[DEBUG] 2019-10-02 19:37:31.859 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@15c90da8
[DEBUG] 2019-10-02 19:37:31.862 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6e082a1f
[DEBUG] 2019-10-02 19:37:31.862 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6e082a1f
[DEBUG] 2019-10-02 19:37:31.867 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3de1e61d
[DEBUG] 2019-10-02 19:37:31.867 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3de1e61d
[DEBUG] 2019-10-02 19:37:31.871 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7ff3853
[DEBUG] 2019-10-02 19:37:31.871 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7ff3853
[DEBUG] 2019-10-02 19:37:31.874 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7c89f7a5
[DEBUG] 2019-10-02 19:37:31.875 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c89f7a5
[DEBUG] 2019-10-02 19:37:31.877 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2b4c5607
[DEBUG] 2019-10-02 19:37:31.877 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2b4c5607
[DEBUG] 2019-10-02 19:37:31.880 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@41b5ffdd
[DEBUG] 2019-10-02 19:37:31.880 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@41b5ffdd
[DEBUG] 2019-10-02 19:37:31.880 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@41b5ffdd
[DEBUG] 2019-10-02 19:37:31.884 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2fceafd6
[DEBUG] 2019-10-02 19:37:31.887 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3821e4f5
[DEBUG] 2019-10-02 19:37:31.887 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3821e4f5
[DEBUG] 2019-10-02 19:37:31.887 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3821e4f5
[DEBUG] 2019-10-02 19:37:31.889 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5f65158e
[DEBUG] 2019-10-02 19:37:31.891 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@c88fb77
[DEBUG] 2019-10-02 19:37:31.891 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@c88fb77
[DEBUG] 2019-10-02 19:37:31.893 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4f95ee25
[DEBUG] 2019-10-02 19:37:31.894 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4f95ee25
[DEBUG] 2019-10-02 19:37:31.896 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1618bc2f
[DEBUG] 2019-10-02 19:37:31.896 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1618bc2f
[DEBUG] 2019-10-02 19:37:31.899 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5cd8be74
[DEBUG] 2019-10-02 19:37:31.899 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5cd8be74
[DEBUG] 2019-10-02 19:37:31.902 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@31cfc409
[DEBUG] 2019-10-02 19:37:31.902 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@31cfc409
[DEBUG] 2019-10-02 19:37:31.903 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@28b8cab0
[DEBUG] 2019-10-02 19:37:31.906 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4b6d13d7
[DEBUG] 2019-10-02 19:37:31.906 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4b6d13d7
[DEBUG] 2019-10-02 19:37:31.907 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4b6d13d7
[DEBUG] 2019-10-02 19:37:31.909 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@32ba9937
[DEBUG] 2019-10-02 19:37:31.909 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@32ba9937
[DEBUG] 2019-10-02 19:37:31.910 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@32ba9937
[DEBUG] 2019-10-02 19:37:31.913 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@49de4ca
[DEBUG] 2019-10-02 19:37:31.914 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5bcd640a
[DEBUG] 2019-10-02 19:37:31.918 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@46cdd0e4
[DEBUG] 2019-10-02 19:37:31.918 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@46cdd0e4
[DEBUG] 2019-10-02 19:37:31.918 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@46cdd0e4
[DEBUG] 2019-10-02 19:37:31.922 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1bd9736c
[DEBUG] 2019-10-02 19:37:31.922 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1bd9736c
[DEBUG] 2019-10-02 19:37:31.922 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1bd9736c
[DEBUG] 2019-10-02 19:37:31.924 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@24f33fbb
[DEBUG] 2019-10-02 19:37:31.925 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@198449ce
[DEBUG] 2019-10-02 19:37:31.929 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@ba3fced
[DEBUG] 2019-10-02 19:37:31.929 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ba3fced
[DEBUG] 2019-10-02 19:37:31.931 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@711ee33a
[DEBUG] 2019-10-02 19:37:31.935 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5a877fb8
[DEBUG] 2019-10-02 19:37:31.936 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a877fb8
[DEBUG] 2019-10-02 19:37:31.939 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6610cdb7
[DEBUG] 2019-10-02 19:37:31.940 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6610cdb7
[DEBUG] 2019-10-02 19:37:31.941 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@44f73887
[DEBUG] 2019-10-02 19:37:31.942 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1f15e85c
[DEBUG] 2019-10-02 19:37:31.946 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@55d0136c
[DEBUG] 2019-10-02 19:37:31.956 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5282ca8e
[DEBUG] 2019-10-02 19:37:31.956 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5282ca8e
[DEBUG] 2019-10-02 19:37:31.958 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4e779984
[DEBUG] 2019-10-02 19:37:31.958 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@37f9453f
[DEBUG] 2019-10-02 19:37:31.958 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3afdfe40
[DEBUG] 2019-10-02 19:37:31.958 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1f9a2f67
[DEBUG] 2019-10-02 19:37:31.958 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6dd32ea9
[DEBUG] 2019-10-02 19:37:31.958 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@107e5e91
[DEBUG] 2019-10-02 19:37:31.959 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@45a4bd20
[DEBUG] 2019-10-02 19:37:31.959 [http-nio-8080-exec-8] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b8b43e4
[DEBUG] 2019-10-02 19:37:32.038 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 19:37:32.039 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 19:37:32.042 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 19:37:32.042 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 19:37:32.043 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 19:37:32.046 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 19:37:32.047 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 19:37:32.051 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 19:37:32.053 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 19:37:32.054 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 19:37:32.055 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 19:37:32.056 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 19:37:32.056 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 19:37:32.058 [http-nio-8080-exec-8] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 19:37:32.072 [http-nio-8080-exec-8] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 19:37:32.072 [http-nio-8080-exec-8] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 19:37:32.072 [http-nio-8080-exec-8] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 19:37:32.377 [http-nio-8080-exec-8] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 19:37:33.318 [http-nio-8080-exec-8] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 19:37:33.320 [http-nio-8080-exec-8] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 19:37:33.320 [http-nio-8080-exec-8] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 19:37:33.411 [http-nio-8080-exec-8] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 19:37:33.476 [http-nio-8080-exec-8] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 19:37:33.531 [http-nio-8080-exec-8] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 19:37:33.625 [http-nio-8080-exec-8] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 19:37:33.635 [http-nio-8080-exec-8] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3d2dd266] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@25278d3d]
[DEBUG] 2019-10-02 19:37:33.823 [http-nio-8080-exec-8] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:37:33.899 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 19:37:33.924 [http-nio-8080-exec-8] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 19:37:33.933 [http-nio-8080-exec-8] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 19:37:34.015 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:37:34.023 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 19:37:34.027 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 19:37:34.033 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 19:37:34.040 [http-nio-8080-exec-8] PropertyBinder - Building property id
[DEBUG] 2019-10-02 19:37:34.056 [http-nio-8080-exec-8] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 19:37:34.060 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:37:34.060 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 19:37:34.060 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 19:37:34.060 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 19:37:34.060 [http-nio-8080-exec-8] PropertyBinder - Building property email
[DEBUG] 2019-10-02 19:37:34.061 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:37:34.061 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 19:37:34.061 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 19:37:34.061 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 19:37:34.062 [http-nio-8080-exec-8] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 19:37:34.062 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:37:34.062 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 19:37:34.062 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 19:37:34.062 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 19:37:34.062 [http-nio-8080-exec-8] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 19:37:34.065 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:37:34.066 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:37:34.071 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:37:34.100 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:37:34.101 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:37:34.103 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 19:37:34.108 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:37:34.108 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:37:34.109 [http-nio-8080-exec-8] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:37:34.120 [http-nio-8080-exec-8] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 19:37:34.121 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:37:34.121 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 19:37:34.121 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 19:37:34.122 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 19:37:34.123 [http-nio-8080-exec-8] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 19:37:34.126 [http-nio-8080-exec-8] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:37:34.126 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 19:37:34.126 [http-nio-8080-exec-8] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 19:37:34.126 [http-nio-8080-exec-8] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 19:37:34.129 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:37:34.129 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 19:37:34.129 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 19:37:34.129 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 19:37:34.129 [http-nio-8080-exec-8] PropertyBinder - Building property id
[DEBUG] 2019-10-02 19:37:34.130 [http-nio-8080-exec-8] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 19:37:34.130 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:37:34.130 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 19:37:34.130 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 19:37:34.130 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 19:37:34.130 [http-nio-8080-exec-8] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 19:37:34.130 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:37:34.131 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 19:37:34.131 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 19:37:34.131 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 19:37:34.131 [http-nio-8080-exec-8] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 19:37:34.131 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:37:34.131 [http-nio-8080-exec-8] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 19:37:34.131 [http-nio-8080-exec-8] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 19:37:34.131 [http-nio-8080-exec-8] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 19:37:34.131 [http-nio-8080-exec-8] PropertyBinder - Building property name
[DEBUG] 2019-10-02 19:37:34.132 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 19:37:34.132 [http-nio-8080-exec-8] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:37:34.136 [http-nio-8080-exec-8] PropertyBinder - Building property user
[DEBUG] 2019-10-02 19:37:34.140 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 19:37:34.141 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 19:37:34.141 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 19:37:34.141 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 19:37:34.141 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 19:37:34.141 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 19:37:34.141 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 19:37:34.141 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 19:37:34.141 [http-nio-8080-exec-8] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 19:37:34.152 [http-nio-8080-exec-8] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 19:37:34.152 [http-nio-8080-exec-8] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 19:37:34.152 [http-nio-8080-exec-8] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:37:34.153 [http-nio-8080-exec-8] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 19:37:34.155 [http-nio-8080-exec-8] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 19:37:34.158 [http-nio-8080-exec-8] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 19:37:34.159 [http-nio-8080-exec-8] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:37:34.159 [http-nio-8080-exec-8] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:37:34.166 [http-nio-8080-exec-8] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:37:34.249 [http-nio-8080-exec-8] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 19:37:34.251 [http-nio-8080-exec-8] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 19:37:34.251 [http-nio-8080-exec-8] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 19:37:34.251 [http-nio-8080-exec-8] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 19:37:34.251 [http-nio-8080-exec-8] Settings - Statistics: disabled
[DEBUG] 2019-10-02 19:37:34.251 [http-nio-8080-exec-8] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 19:37:34.251 [http-nio-8080-exec-8] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 19:37:34.251 [http-nio-8080-exec-8] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 19:37:34.251 [http-nio-8080-exec-8] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 19:37:34.251 [http-nio-8080-exec-8] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 19:37:34.252 [http-nio-8080-exec-8] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 19:37:34.252 [http-nio-8080-exec-8] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 19:37:34.252 [http-nio-8080-exec-8] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 19:37:34.252 [http-nio-8080-exec-8] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 19:37:34.252 [http-nio-8080-exec-8] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 19:37:34.252 [http-nio-8080-exec-8] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 19:37:34.252 [http-nio-8080-exec-8] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 19:37:34.252 [http-nio-8080-exec-8] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 19:37:34.252 [http-nio-8080-exec-8] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 19:37:34.253 [http-nio-8080-exec-8] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 19:37:34.253 [http-nio-8080-exec-8] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 19:37:34.253 [http-nio-8080-exec-8] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 19:37:34.253 [http-nio-8080-exec-8] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 19:37:34.253 [http-nio-8080-exec-8] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 19:37:34.253 [http-nio-8080-exec-8] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 19:37:34.253 [http-nio-8080-exec-8] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 19:37:34.253 [http-nio-8080-exec-8] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 19:37:34.253 [http-nio-8080-exec-8] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 19:37:34.254 [http-nio-8080-exec-8] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 19:37:34.254 [http-nio-8080-exec-8] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 19:37:34.254 [http-nio-8080-exec-8] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 19:37:34.254 [http-nio-8080-exec-8] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 19:37:34.254 [http-nio-8080-exec-8] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 19:37:34.254 [http-nio-8080-exec-8] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 19:37:34.254 [http-nio-8080-exec-8] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 19:37:34.254 [http-nio-8080-exec-8] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 19:37:34.254 [http-nio-8080-exec-8] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 19:37:34.255 [http-nio-8080-exec-8] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 19:37:34.255 [http-nio-8080-exec-8] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 19:37:34.433 [http-nio-8080-exec-8] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 19:37:34.477 [http-nio-8080-exec-8] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 19:37:34.477 [http-nio-8080-exec-8] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.2+9-LTS, user.name=Alex, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, java.vendor.version=18.9, derby.system.home=C:\Users\Alex\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\Users\Alex\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.2, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=windows, java.class.path=C:\Users\Alex\tomcat\bin\bootstrap.jar;C:\Users\Alex\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\Users\Alex\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/Users/Alex/tomcat/lib","C:/Users/Alex/tomcat/lib/*.jar","C:\Users\Alex\tomcat/lib","C:\Users\Alex\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=10.0, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=http://bugreport.java.com/bugreport/, tomee.remote.support=true, catalina.home=C:\Users\Alex\tomcat, user.dir=C:\Users\Alex\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@17202250, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2019-10-02 19:37:34.533 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:37:34.533 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:37:34.553 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:37:34.554 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:37:34.561 [http-nio-8080-exec-8] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 19:37:34.562 [http-nio-8080-exec-8] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 19:37:34.562 [http-nio-8080-exec-8] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3d2dd266] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@f089a36]
[DEBUG] 2019-10-02 19:37:34.676 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:37:34.676 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:37:34.731 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:37:34.731 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:37:35.267 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:37:35.267 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:37:35.268 [http-nio-8080-exec-8] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:37:35.268 [http-nio-8080-exec-8] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:37:35.307 [http-nio-8080-exec-8] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:37:35.308 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 19:37:35.308 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 19:37:35.308 [http-nio-8080-exec-8] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 19:37:35.308 [http-nio-8080-exec-8] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 19:37:35.324 [http-nio-8080-exec-8] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:37:35.324 [http-nio-8080-exec-8] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 19:37:35.324 [http-nio-8080-exec-8] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 19:37:35.324 [http-nio-8080-exec-8] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 19:37:35.324 [http-nio-8080-exec-8] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 19:37:35.325 [http-nio-8080-exec-8] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 19:37:35.325 [http-nio-8080-exec-8] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 19:37:35.392 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1243e90f]
[DEBUG] 2019-10-02 19:37:35.395 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 19:37:35.396 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 19:37:35.396 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 19:37:35.396 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 19:37:35.408 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a69053b]
[DEBUG] 2019-10-02 19:37:35.415 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a0cee45]
[DEBUG] 2019-10-02 19:37:35.418 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 19:37:35.418 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 19:37:35.418 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 19:37:35.418 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 19:37:35.418 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 19:37:35.419 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 19:37:35.420 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:37:35.453 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:37:35.468 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 19:37:35.474 [http-nio-8080-exec-8] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:37:35.474 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a71eaa]
[DEBUG] 2019-10-02 19:37:35.474 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 19:37:35.474 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 19:37:35.474 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 19:37:35.474 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 19:37:35.474 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69165f65]
[DEBUG] 2019-10-02 19:37:35.474 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ba4df17]
[DEBUG] 2019-10-02 19:37:35.475 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 19:37:35.475 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 19:37:35.475 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 19:37:35.475 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 19:37:35.475 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 19:37:35.475 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 19:37:35.475 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:37:35.475 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:37:35.478 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 19:37:35.478 [http-nio-8080-exec-8] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:37:35.519 [http-nio-8080-exec-8] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:37:35.520 [http-nio-8080-exec-8] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:37:35.520 [http-nio-8080-exec-8] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:37:35.520 [http-nio-8080-exec-8] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 19:37:35.520 [http-nio-8080-exec-8] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 19:37:35.520 [http-nio-8080-exec-8] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 19:37:35.520 [http-nio-8080-exec-8] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 19:37:35.520 [http-nio-8080-exec-8] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 19:37:35.520 [http-nio-8080-exec-8] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 19:37:35.520 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72d462c8]
[DEBUG] 2019-10-02 19:37:35.520 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:37:35.521 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:37:35.521 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:37:35.521 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:37:35.521 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b3561ef]
[DEBUG] 2019-10-02 19:37:35.522 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 19:37:35.522 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 19:37:35.523 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 19:37:35.523 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 19:37:35.523 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 19:37:35.523 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 19:37:35.523 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:37:35.523 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:37:35.524 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 19:37:35.524 [http-nio-8080-exec-8] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:37:35.524 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@460c6b04]
[DEBUG] 2019-10-02 19:37:35.524 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:37:35.524 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:37:35.524 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:37:35.524 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:37:35.525 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27403112]
[DEBUG] 2019-10-02 19:37:35.525 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 19:37:35.525 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 19:37:35.525 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 19:37:35.525 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 19:37:35.525 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 19:37:35.525 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 19:37:35.526 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:37:35.526 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:37:35.527 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 19:37:35.527 [http-nio-8080-exec-8] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:37:35.528 [http-nio-8080-exec-8] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 19:37:35.528 [http-nio-8080-exec-8] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 19:37:35.545 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5949a87d]
[DEBUG] 2019-10-02 19:37:35.546 [http-nio-8080-exec-8] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f6920a]
[DEBUG] 2019-10-02 19:37:35.546 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:37:35.546 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:37:35.546 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:37:35.546 [http-nio-8080-exec-8] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:37:35.547 [http-nio-8080-exec-8] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 19:37:35.547 [http-nio-8080-exec-8] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:37:35.553 [http-nio-8080-exec-8] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:37:35.553 [http-nio-8080-exec-8] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 19:37:35.554 [http-nio-8080-exec-8] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:37:35.668 [http-nio-8080-exec-8] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 19:37:35.668 [http-nio-8080-exec-8] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 19:37:35.669 [http-nio-8080-exec-8] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 19:37:35.690 [http-nio-8080-exec-8] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 19:37:35.690 [http-nio-8080-exec-8] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 19:37:35.691 [http-nio-8080-exec-8] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 19:37:35.691 [http-nio-8080-exec-8] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 19:37:35.696 [http-nio-8080-exec-8] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5569d9db
[DEBUG] 2019-10-02 19:37:35.700 [http-nio-8080-exec-8] SessionFactoryRegistry - Registering SessionFactory: 78cf9c98-8a54-44b9-936b-dd711bd6ebb0 (<unnamed>)
[DEBUG] 2019-10-02 19:37:35.700 [http-nio-8080-exec-8] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 19:37:35.918 [http-nio-8080-exec-8] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 19:37:35.969 [http-nio-8080-exec-8] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:37:36.023 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:37:36.027 [http-nio-8080-exec-8] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:37:36.058 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:37:36.060 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `directions` : value = Do the thing
[DEBUG] 2019-10-02 19:37:36.061 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:37:36.061 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-02 19:37:36.061 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:37:36.061 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 19:37:36.061 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:37:36.061 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 19:37:36.061 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:37:36.064 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:37:36.064 [http-nio-8080-exec-8] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:37:36.065 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:37:36.065 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:37:36.065 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 19:37:36.065 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:37:36.065 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 19:37:36.065 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:37:36.065 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:37:36.065 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:37:36.082 [http-nio-8080-exec-8] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 19:37:36.083 [http-nio-8080-exec-8] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:37:36.083 [http-nio-8080-exec-8] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:37:36.085 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:37:36.090 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:37:36.090 [http-nio-8080-exec-8] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:37:36.092 [http-nio-8080-exec-8] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:37:36.098 [http-nio-8080-exec-8] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:37:36.099 [http-nio-8080-exec-8] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:37:36.100 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:37:36.100 [http-nio-8080-exec-8] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:37:36.100 [http-nio-8080-exec-8] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:37:36.100 [http-nio-8080-exec-8] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:37:36.100 [http-nio-8080-exec-8] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 19:37:36.101 [http-nio-8080-exec-8] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-02 19:37:36.101 [http-nio-8080-exec-8] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:40:46.933 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 19:40:46.945 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 19:40:47.039 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 19:40:47.389 [http-nio-8080-exec-10] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 19:40:47.394 [http-nio-8080-exec-10] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 19:40:47.951 [http-nio-8080-exec-10] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 19:40:47.952 [http-nio-8080-exec-10] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 19:40:48.011 [http-nio-8080-exec-10] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 19:40:48.726 [http-nio-8080-exec-10] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 19:40:48.785 [http-nio-8080-exec-10] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 19:40:48.788 [http-nio-8080-exec-10] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 19:40:48.879 [http-nio-8080-exec-10] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 19:40:49.004 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@266be4b4
[DEBUG] 2019-10-02 19:40:49.004 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@266be4b4
[DEBUG] 2019-10-02 19:40:49.005 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@266be4b4
[DEBUG] 2019-10-02 19:40:49.007 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@56c4720
[DEBUG] 2019-10-02 19:40:49.008 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1c778797
[DEBUG] 2019-10-02 19:40:49.009 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@72bce007
[DEBUG] 2019-10-02 19:40:49.012 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@513a9683
[DEBUG] 2019-10-02 19:40:49.012 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@513a9683
[DEBUG] 2019-10-02 19:40:49.012 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@513a9683
[DEBUG] 2019-10-02 19:40:49.015 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7363c2ce
[DEBUG] 2019-10-02 19:40:49.015 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7363c2ce
[DEBUG] 2019-10-02 19:40:49.015 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7363c2ce
[DEBUG] 2019-10-02 19:40:49.019 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7441448d
[DEBUG] 2019-10-02 19:40:49.019 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7441448d
[DEBUG] 2019-10-02 19:40:49.019 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7441448d
[DEBUG] 2019-10-02 19:40:49.022 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@769d9a64
[DEBUG] 2019-10-02 19:40:49.022 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@769d9a64
[DEBUG] 2019-10-02 19:40:49.023 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@769d9a64
[DEBUG] 2019-10-02 19:40:49.026 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@13092b6f
[DEBUG] 2019-10-02 19:40:49.026 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@13092b6f
[DEBUG] 2019-10-02 19:40:49.026 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13092b6f
[DEBUG] 2019-10-02 19:40:49.028 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@46c72b2e
[DEBUG] 2019-10-02 19:40:49.028 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@46c72b2e
[DEBUG] 2019-10-02 19:40:49.029 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@46c72b2e
[DEBUG] 2019-10-02 19:40:49.032 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6ba8b6f7
[DEBUG] 2019-10-02 19:40:49.032 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6ba8b6f7
[DEBUG] 2019-10-02 19:40:49.032 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6ba8b6f7
[DEBUG] 2019-10-02 19:40:49.035 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6666cc8a
[DEBUG] 2019-10-02 19:40:49.036 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6666cc8a
[DEBUG] 2019-10-02 19:40:49.038 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5130821a
[DEBUG] 2019-10-02 19:40:49.039 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5130821a
[DEBUG] 2019-10-02 19:40:49.041 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1a38394e
[DEBUG] 2019-10-02 19:40:49.041 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1a38394e
[DEBUG] 2019-10-02 19:40:49.042 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5a0a1a1e
[DEBUG] 2019-10-02 19:40:49.044 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65fb721e
[DEBUG] 2019-10-02 19:40:49.046 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1f6ae3c2
[DEBUG] 2019-10-02 19:40:49.046 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1f6ae3c2
[DEBUG] 2019-10-02 19:40:49.049 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3313e8fc
[DEBUG] 2019-10-02 19:40:49.049 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3313e8fc
[DEBUG] 2019-10-02 19:40:49.061 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@35b2cd9
[DEBUG] 2019-10-02 19:40:49.062 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@35b2cd9
[DEBUG] 2019-10-02 19:40:49.070 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@61227577
[DEBUG] 2019-10-02 19:40:49.070 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@61227577
[DEBUG] 2019-10-02 19:40:49.072 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@662458bc
[DEBUG] 2019-10-02 19:40:49.073 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@662458bc
[DEBUG] 2019-10-02 19:40:49.075 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@44e4f7c8
[DEBUG] 2019-10-02 19:40:49.075 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@44e4f7c8
[DEBUG] 2019-10-02 19:40:49.079 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5ced5547
[DEBUG] 2019-10-02 19:40:49.079 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5ced5547
[DEBUG] 2019-10-02 19:40:49.082 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5b4a89a5
[DEBUG] 2019-10-02 19:40:49.082 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5b4a89a5
[DEBUG] 2019-10-02 19:40:49.088 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@157f3be8
[DEBUG] 2019-10-02 19:40:49.088 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@157f3be8
[DEBUG] 2019-10-02 19:40:49.092 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@498f6eca
[DEBUG] 2019-10-02 19:40:49.092 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@498f6eca
[DEBUG] 2019-10-02 19:40:49.095 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4a21bf88
[DEBUG] 2019-10-02 19:40:49.095 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4a21bf88
[DEBUG] 2019-10-02 19:40:49.097 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5f6df780
[DEBUG] 2019-10-02 19:40:49.098 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5f6df780
[DEBUG] 2019-10-02 19:40:49.098 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5f6df780
[DEBUG] 2019-10-02 19:40:49.103 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@49ab547d
[DEBUG] 2019-10-02 19:40:49.105 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@198adb71
[DEBUG] 2019-10-02 19:40:49.105 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@198adb71
[DEBUG] 2019-10-02 19:40:49.106 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@198adb71
[DEBUG] 2019-10-02 19:40:49.107 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1be81030
[DEBUG] 2019-10-02 19:40:49.110 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@18ac33ee
[DEBUG] 2019-10-02 19:40:49.110 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@18ac33ee
[DEBUG] 2019-10-02 19:40:49.112 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@34b5c0f7
[DEBUG] 2019-10-02 19:40:49.113 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@34b5c0f7
[DEBUG] 2019-10-02 19:40:49.115 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4f13006e
[DEBUG] 2019-10-02 19:40:49.116 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4f13006e
[DEBUG] 2019-10-02 19:40:49.121 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7f497e75
[DEBUG] 2019-10-02 19:40:49.121 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7f497e75
[DEBUG] 2019-10-02 19:40:49.124 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@796bd04f
[DEBUG] 2019-10-02 19:40:49.124 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@796bd04f
[DEBUG] 2019-10-02 19:40:49.126 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7c73b61b
[DEBUG] 2019-10-02 19:40:49.130 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@292ddf57
[DEBUG] 2019-10-02 19:40:49.131 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@292ddf57
[DEBUG] 2019-10-02 19:40:49.131 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@292ddf57
[DEBUG] 2019-10-02 19:40:49.135 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4e10fbd0
[DEBUG] 2019-10-02 19:40:49.135 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4e10fbd0
[DEBUG] 2019-10-02 19:40:49.136 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4e10fbd0
[DEBUG] 2019-10-02 19:40:49.140 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@252dfb29
[DEBUG] 2019-10-02 19:40:49.142 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@33d70b81
[DEBUG] 2019-10-02 19:40:49.145 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7161d63d
[DEBUG] 2019-10-02 19:40:49.147 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7161d63d
[DEBUG] 2019-10-02 19:40:49.147 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7161d63d
[DEBUG] 2019-10-02 19:40:49.153 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@96e90f7
[DEBUG] 2019-10-02 19:40:49.154 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@96e90f7
[DEBUG] 2019-10-02 19:40:49.154 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@96e90f7
[DEBUG] 2019-10-02 19:40:49.156 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3593f72
[DEBUG] 2019-10-02 19:40:49.158 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@28166b5e
[DEBUG] 2019-10-02 19:40:49.164 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@914aca6
[DEBUG] 2019-10-02 19:40:49.164 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@914aca6
[DEBUG] 2019-10-02 19:40:49.166 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@41f60988
[DEBUG] 2019-10-02 19:40:49.172 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5e10c9bc
[DEBUG] 2019-10-02 19:40:49.172 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5e10c9bc
[DEBUG] 2019-10-02 19:40:49.177 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@57e19d54
[DEBUG] 2019-10-02 19:40:49.177 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@57e19d54
[DEBUG] 2019-10-02 19:40:49.179 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@32fcd47b
[DEBUG] 2019-10-02 19:40:49.181 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3af1d16f
[DEBUG] 2019-10-02 19:40:49.189 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@27c1c78d
[DEBUG] 2019-10-02 19:40:49.204 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6d32f613
[DEBUG] 2019-10-02 19:40:49.204 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6d32f613
[DEBUG] 2019-10-02 19:40:49.206 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@524bb5
[DEBUG] 2019-10-02 19:40:49.206 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1c676017
[DEBUG] 2019-10-02 19:40:49.206 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@25233825
[DEBUG] 2019-10-02 19:40:49.207 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a6292cc
[DEBUG] 2019-10-02 19:40:49.207 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@187f7fd6
[DEBUG] 2019-10-02 19:40:49.207 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3fbfc316
[DEBUG] 2019-10-02 19:40:49.207 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36126d4
[DEBUG] 2019-10-02 19:40:49.207 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1d8b3086
[DEBUG] 2019-10-02 19:40:49.312 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 19:40:49.314 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 19:40:49.318 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 19:40:49.318 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 19:40:49.320 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 19:40:49.323 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 19:40:49.324 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 19:40:49.328 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 19:40:49.330 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 19:40:49.331 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 19:40:49.332 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 19:40:49.333 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 19:40:49.333 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 19:40:49.335 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 19:40:49.352 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 19:40:49.352 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 19:40:49.352 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 19:40:49.716 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 19:40:50.798 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 19:40:50.799 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 19:40:50.800 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 19:40:50.916 [http-nio-8080-exec-10] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 19:40:50.986 [http-nio-8080-exec-10] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 19:40:51.042 [http-nio-8080-exec-10] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 19:40:51.170 [http-nio-8080-exec-10] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 19:40:51.183 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@9ff227c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6efc0680]
[DEBUG] 2019-10-02 19:40:51.388 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:40:51.466 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 19:40:51.489 [http-nio-8080-exec-10] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 19:40:51.499 [http-nio-8080-exec-10] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 19:40:51.574 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:40:51.581 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 19:40:51.585 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 19:40:51.590 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 19:40:51.597 [http-nio-8080-exec-10] PropertyBinder - Building property id
[DEBUG] 2019-10-02 19:40:51.611 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 19:40:51.615 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:40:51.615 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 19:40:51.615 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 19:40:51.616 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 19:40:51.616 [http-nio-8080-exec-10] PropertyBinder - Building property email
[DEBUG] 2019-10-02 19:40:51.616 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:40:51.616 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 19:40:51.616 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 19:40:51.616 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 19:40:51.617 [http-nio-8080-exec-10] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 19:40:51.617 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:40:51.617 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 19:40:51.617 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 19:40:51.617 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 19:40:51.617 [http-nio-8080-exec-10] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 19:40:51.620 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:40:51.620 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:40:51.626 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:40:51.656 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:40:51.657 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:40:51.658 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 19:40:51.663 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:40:51.663 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:40:51.664 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:40:51.672 [http-nio-8080-exec-10] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 19:40:51.673 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:40:51.673 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 19:40:51.673 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 19:40:51.673 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 19:40:51.673 [http-nio-8080-exec-10] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 19:40:51.677 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:40:51.678 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 19:40:51.678 [http-nio-8080-exec-10] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 19:40:51.678 [http-nio-8080-exec-10] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 19:40:51.681 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:40:51.682 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 19:40:51.682 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 19:40:51.682 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 19:40:51.682 [http-nio-8080-exec-10] PropertyBinder - Building property id
[DEBUG] 2019-10-02 19:40:51.682 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 19:40:51.683 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:40:51.683 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 19:40:51.683 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 19:40:51.683 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 19:40:51.683 [http-nio-8080-exec-10] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 19:40:51.683 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:40:51.684 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 19:40:51.684 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 19:40:51.684 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 19:40:51.684 [http-nio-8080-exec-10] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 19:40:51.684 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:40:51.684 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 19:40:51.685 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 19:40:51.685 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 19:40:51.685 [http-nio-8080-exec-10] PropertyBinder - Building property name
[DEBUG] 2019-10-02 19:40:51.685 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 19:40:51.685 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:40:51.690 [http-nio-8080-exec-10] PropertyBinder - Building property user
[DEBUG] 2019-10-02 19:40:51.694 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 19:40:51.694 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 19:40:51.694 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 19:40:51.694 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 19:40:51.695 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 19:40:51.695 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 19:40:51.695 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 19:40:51.695 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 19:40:51.695 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 19:40:51.705 [http-nio-8080-exec-10] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 19:40:51.706 [http-nio-8080-exec-10] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 19:40:51.706 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:40:51.707 [http-nio-8080-exec-10] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 19:40:51.709 [http-nio-8080-exec-10] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 19:40:51.712 [http-nio-8080-exec-10] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 19:40:51.712 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:40:51.712 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:40:51.719 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:40:51.804 [http-nio-8080-exec-10] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 19:40:51.806 [http-nio-8080-exec-10] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 19:40:51.806 [http-nio-8080-exec-10] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 19:40:51.806 [http-nio-8080-exec-10] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 19:40:51.806 [http-nio-8080-exec-10] Settings - Statistics: disabled
[DEBUG] 2019-10-02 19:40:51.806 [http-nio-8080-exec-10] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 19:40:51.806 [http-nio-8080-exec-10] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 19:40:51.806 [http-nio-8080-exec-10] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 19:40:51.806 [http-nio-8080-exec-10] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 19:40:51.806 [http-nio-8080-exec-10] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 19:40:51.806 [http-nio-8080-exec-10] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 19:40:51.806 [http-nio-8080-exec-10] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 19:40:51.807 [http-nio-8080-exec-10] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 19:40:51.807 [http-nio-8080-exec-10] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 19:40:51.807 [http-nio-8080-exec-10] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 19:40:51.807 [http-nio-8080-exec-10] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 19:40:51.807 [http-nio-8080-exec-10] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 19:40:51.807 [http-nio-8080-exec-10] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 19:40:51.807 [http-nio-8080-exec-10] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 19:40:51.807 [http-nio-8080-exec-10] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 19:40:51.807 [http-nio-8080-exec-10] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 19:40:51.807 [http-nio-8080-exec-10] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 19:40:51.807 [http-nio-8080-exec-10] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 19:40:51.807 [http-nio-8080-exec-10] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 19:40:51.808 [http-nio-8080-exec-10] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 19:40:51.808 [http-nio-8080-exec-10] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 19:40:51.808 [http-nio-8080-exec-10] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 19:40:51.808 [http-nio-8080-exec-10] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 19:40:51.808 [http-nio-8080-exec-10] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 19:40:51.808 [http-nio-8080-exec-10] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 19:40:51.808 [http-nio-8080-exec-10] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 19:40:51.808 [http-nio-8080-exec-10] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 19:40:51.808 [http-nio-8080-exec-10] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 19:40:51.809 [http-nio-8080-exec-10] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 19:40:51.809 [http-nio-8080-exec-10] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 19:40:51.809 [http-nio-8080-exec-10] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 19:40:51.810 [http-nio-8080-exec-10] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 19:40:51.810 [http-nio-8080-exec-10] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 19:40:51.810 [http-nio-8080-exec-10] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 19:40:51.979 [http-nio-8080-exec-10] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 19:40:52.036 [http-nio-8080-exec-10] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 19:40:52.036 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.2+9-LTS, user.name=Alex, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, java.vendor.version=18.9, derby.system.home=C:\Users\Alex\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\Users\Alex\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.2, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=windows, java.class.path=C:\Users\Alex\tomcat\bin\bootstrap.jar;C:\Users\Alex\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\Users\Alex\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/Users/Alex/tomcat/lib","C:/Users/Alex/tomcat/lib/*.jar","C:\Users\Alex\tomcat/lib","C:\Users\Alex\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=10.0, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=http://bugreport.java.com/bugreport/, tomee.remote.support=true, catalina.home=C:\Users\Alex\tomcat, user.dir=C:\Users\Alex\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6fb21a88, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2019-10-02 19:40:52.093 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:40:52.093 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:40:52.116 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:40:52.116 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:40:52.122 [http-nio-8080-exec-10] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 19:40:52.123 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 19:40:52.123 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@9ff227c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2974eac3]
[DEBUG] 2019-10-02 19:40:52.251 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:40:52.251 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:40:52.305 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:40:52.305 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:40:52.844 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:40:52.844 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:40:52.845 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:40:52.845 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:40:52.891 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:40:52.891 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 19:40:52.891 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 19:40:52.891 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 19:40:52.891 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 19:40:52.901 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:40:52.901 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 19:40:52.902 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 19:40:52.902 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 19:40:52.902 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 19:40:52.902 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 19:40:52.902 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 19:40:52.970 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@710b682a]
[DEBUG] 2019-10-02 19:40:52.973 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 19:40:52.973 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 19:40:52.973 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 19:40:52.973 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 19:40:52.986 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4fe0f973]
[DEBUG] 2019-10-02 19:40:52.992 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f84c98d]
[DEBUG] 2019-10-02 19:40:52.995 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 19:40:52.996 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 19:40:52.996 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 19:40:52.996 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 19:40:52.996 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 19:40:52.998 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 19:40:52.998 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:40:53.033 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:40:53.048 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 19:40:53.055 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:40:53.055 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49c96963]
[DEBUG] 2019-10-02 19:40:53.056 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 19:40:53.056 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 19:40:53.056 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 19:40:53.056 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 19:40:53.056 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@30566e12]
[DEBUG] 2019-10-02 19:40:53.056 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@447e3f63]
[DEBUG] 2019-10-02 19:40:53.056 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 19:40:53.056 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 19:40:53.056 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 19:40:53.057 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 19:40:53.057 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 19:40:53.057 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 19:40:53.057 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:40:53.057 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:40:53.058 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 19:40:53.058 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:40:53.098 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:40:53.098 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:40:53.099 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:40:53.099 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 19:40:53.099 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 19:40:53.099 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 19:40:53.099 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 19:40:53.099 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 19:40:53.099 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 19:40:53.099 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d5cf1d1]
[DEBUG] 2019-10-02 19:40:53.100 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:40:53.100 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:40:53.100 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:40:53.100 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:40:53.100 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61848a5a]
[DEBUG] 2019-10-02 19:40:53.102 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 19:40:53.102 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 19:40:53.102 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 19:40:53.102 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 19:40:53.102 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 19:40:53.102 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 19:40:53.102 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:40:53.102 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:40:53.103 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 19:40:53.103 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:40:53.103 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15fca475]
[DEBUG] 2019-10-02 19:40:53.103 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:40:53.103 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:40:53.103 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:40:53.103 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:40:53.104 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cb9b12f]
[DEBUG] 2019-10-02 19:40:53.104 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 19:40:53.104 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 19:40:53.104 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 19:40:53.104 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 19:40:53.104 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 19:40:53.104 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 19:40:53.104 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:40:53.105 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:40:53.105 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 19:40:53.105 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:40:53.106 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 19:40:53.106 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 19:40:53.120 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e1aa9f2]
[DEBUG] 2019-10-02 19:40:53.120 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15f894d9]
[DEBUG] 2019-10-02 19:40:53.120 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:40:53.120 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:40:53.120 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:40:53.120 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:40:53.120 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 19:40:53.120 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:40:53.126 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:40:53.126 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 19:40:53.128 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:40:53.223 [http-nio-8080-exec-10] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 19:40:53.224 [http-nio-8080-exec-10] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 19:40:53.225 [http-nio-8080-exec-10] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 19:40:53.242 [http-nio-8080-exec-10] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 19:40:53.242 [http-nio-8080-exec-10] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 19:40:53.243 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 19:40:53.243 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 19:40:53.248 [http-nio-8080-exec-10] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@707f38a6
[DEBUG] 2019-10-02 19:40:53.251 [http-nio-8080-exec-10] SessionFactoryRegistry - Registering SessionFactory: f4ab6384-790e-400f-afef-beb07e2810dc (<unnamed>)
[DEBUG] 2019-10-02 19:40:53.251 [http-nio-8080-exec-10] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 19:40:53.463 [http-nio-8080-exec-10] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 19:40:53.506 [http-nio-8080-exec-10] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:40:53.552 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:40:53.556 [http-nio-8080-exec-10] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:40:53.578 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:40:53.580 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `directions` : value = Do the thing
[DEBUG] 2019-10-02 19:40:53.580 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:40:53.581 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-02 19:40:53.581 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:40:53.581 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 19:40:53.581 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:40:53.581 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 19:40:53.581 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:40:53.583 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:40:53.583 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:40:53.583 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:40:53.584 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:40:53.584 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 19:40:53.584 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:40:53.584 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 19:40:53.584 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:40:53.584 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:40:53.584 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:40:53.598 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 19:40:53.598 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:40:53.599 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:40:53.601 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:40:53.605 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:40:53.605 [http-nio-8080-exec-10] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:40:53.607 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:40:53.611 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:40:53.612 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:40:53.613 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:40:53.613 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:40:53.613 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:40:53.613 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:40:53.613 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 19:40:53.613 [http-nio-8080-exec-10] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-02 19:40:53.613 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:51:34.430 [http-nio-8080-exec-4] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:51:34.452 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:51:34.452 [http-nio-8080-exec-4] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:51:34.453 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:51:34.453 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-02 19:51:34.453 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:51:34.453 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `ingredients` : value = {"list":[{"ingrediant": "Ingrediant 1","amount": "16 oz"},{"ingrediant": "Ingrediant 2","amount": "5 lbs"}]}
[DEBUG] 2019-10-02 19:51:34.453 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:51:34.453 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 19:51:34.453 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:51:34.453 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 19:51:34.454 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:51:34.454 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:51:34.454 [http-nio-8080-exec-4] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:51:34.454 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:51:34.454 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:51:34.454 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 19:51:34.454 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:51:34.454 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 19:51:34.454 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:51:34.454 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:51:34.454 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:51:34.454 [http-nio-8080-exec-4] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 19:51:34.455 [http-nio-8080-exec-4] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:51:34.455 [http-nio-8080-exec-4] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:51:34.455 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:51:34.455 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:51:34.455 [http-nio-8080-exec-4] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:51:34.457 [http-nio-8080-exec-4] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:51:34.458 [http-nio-8080-exec-4] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:51:34.458 [http-nio-8080-exec-4] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:51:34.458 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:51:34.458 [http-nio-8080-exec-4] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:51:34.458 [http-nio-8080-exec-4] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:51:34.459 [http-nio-8080-exec-4] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:51:34.459 [http-nio-8080-exec-4] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 19:51:34.459 [http-nio-8080-exec-4] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-02 19:51:34.459 [http-nio-8080-exec-4] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:55:59.095 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 19:55:59.104 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 19:55:59.122 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 19:55:59.378 [http-nio-8080-exec-10] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 19:55:59.382 [http-nio-8080-exec-10] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 19:55:59.798 [http-nio-8080-exec-10] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 19:55:59.798 [http-nio-8080-exec-10] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 19:55:59.839 [http-nio-8080-exec-10] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 19:56:00.508 [http-nio-8080-exec-10] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 19:56:00.595 [http-nio-8080-exec-10] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 19:56:00.600 [http-nio-8080-exec-10] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 19:56:00.694 [http-nio-8080-exec-10] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 19:56:00.845 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@ee0b6ff
[DEBUG] 2019-10-02 19:56:00.845 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@ee0b6ff
[DEBUG] 2019-10-02 19:56:00.845 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@ee0b6ff
[DEBUG] 2019-10-02 19:56:00.847 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@334f6366
[DEBUG] 2019-10-02 19:56:00.849 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1fd40432
[DEBUG] 2019-10-02 19:56:00.851 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7db422a7
[DEBUG] 2019-10-02 19:56:00.855 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@28bf034a
[DEBUG] 2019-10-02 19:56:00.855 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@28bf034a
[DEBUG] 2019-10-02 19:56:00.855 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@28bf034a
[DEBUG] 2019-10-02 19:56:00.859 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@390363fe
[DEBUG] 2019-10-02 19:56:00.859 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@390363fe
[DEBUG] 2019-10-02 19:56:00.859 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@390363fe
[DEBUG] 2019-10-02 19:56:00.862 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@14b6e60
[DEBUG] 2019-10-02 19:56:00.862 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@14b6e60
[DEBUG] 2019-10-02 19:56:00.862 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14b6e60
[DEBUG] 2019-10-02 19:56:00.865 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@523f13f3
[DEBUG] 2019-10-02 19:56:00.865 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@523f13f3
[DEBUG] 2019-10-02 19:56:00.865 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@523f13f3
[DEBUG] 2019-10-02 19:56:00.868 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2b75bf83
[DEBUG] 2019-10-02 19:56:00.868 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@2b75bf83
[DEBUG] 2019-10-02 19:56:00.868 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2b75bf83
[DEBUG] 2019-10-02 19:56:00.871 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@a65f16
[DEBUG] 2019-10-02 19:56:00.871 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@a65f16
[DEBUG] 2019-10-02 19:56:00.871 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@a65f16
[DEBUG] 2019-10-02 19:56:00.875 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6e261a99
[DEBUG] 2019-10-02 19:56:00.875 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6e261a99
[DEBUG] 2019-10-02 19:56:00.875 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6e261a99
[DEBUG] 2019-10-02 19:56:00.879 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@404b23b1
[DEBUG] 2019-10-02 19:56:00.879 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@404b23b1
[DEBUG] 2019-10-02 19:56:00.883 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@279e61c2
[DEBUG] 2019-10-02 19:56:00.883 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@279e61c2
[DEBUG] 2019-10-02 19:56:00.887 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@630c83c6
[DEBUG] 2019-10-02 19:56:00.887 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@630c83c6
[DEBUG] 2019-10-02 19:56:00.888 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@13342146
[DEBUG] 2019-10-02 19:56:00.890 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@9384bbb
[DEBUG] 2019-10-02 19:56:00.892 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@71decf97
[DEBUG] 2019-10-02 19:56:00.893 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71decf97
[DEBUG] 2019-10-02 19:56:00.896 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@20ba8099
[DEBUG] 2019-10-02 19:56:00.896 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@20ba8099
[DEBUG] 2019-10-02 19:56:00.907 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@42dbf424
[DEBUG] 2019-10-02 19:56:00.908 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@42dbf424
[DEBUG] 2019-10-02 19:56:00.910 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4d589d34
[DEBUG] 2019-10-02 19:56:00.911 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4d589d34
[DEBUG] 2019-10-02 19:56:00.913 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@39a91153
[DEBUG] 2019-10-02 19:56:00.913 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@39a91153
[DEBUG] 2019-10-02 19:56:00.917 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2197d7da
[DEBUG] 2019-10-02 19:56:00.917 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2197d7da
[DEBUG] 2019-10-02 19:56:00.920 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@19064c2d
[DEBUG] 2019-10-02 19:56:00.920 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@19064c2d
[DEBUG] 2019-10-02 19:56:00.925 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6c0fcdc8
[DEBUG] 2019-10-02 19:56:00.925 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6c0fcdc8
[DEBUG] 2019-10-02 19:56:00.929 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@79af6d09
[DEBUG] 2019-10-02 19:56:00.929 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@79af6d09
[DEBUG] 2019-10-02 19:56:00.933 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2a8d1b8a
[DEBUG] 2019-10-02 19:56:00.933 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a8d1b8a
[DEBUG] 2019-10-02 19:56:00.936 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@649b13f5
[DEBUG] 2019-10-02 19:56:00.936 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@649b13f5
[DEBUG] 2019-10-02 19:56:00.938 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@11e10b7
[DEBUG] 2019-10-02 19:56:00.939 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11e10b7
[DEBUG] 2019-10-02 19:56:00.939 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11e10b7
[DEBUG] 2019-10-02 19:56:00.943 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14f586c
[DEBUG] 2019-10-02 19:56:00.946 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6489dfe3
[DEBUG] 2019-10-02 19:56:00.947 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6489dfe3
[DEBUG] 2019-10-02 19:56:00.947 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6489dfe3
[DEBUG] 2019-10-02 19:56:00.949 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@58eca23a
[DEBUG] 2019-10-02 19:56:00.951 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@337567f1
[DEBUG] 2019-10-02 19:56:00.952 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@337567f1
[DEBUG] 2019-10-02 19:56:00.954 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2dadf5a3
[DEBUG] 2019-10-02 19:56:00.954 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2dadf5a3
[DEBUG] 2019-10-02 19:56:00.960 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@67015cea
[DEBUG] 2019-10-02 19:56:00.960 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@67015cea
[DEBUG] 2019-10-02 19:56:00.964 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1df4ff9c
[DEBUG] 2019-10-02 19:56:00.964 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1df4ff9c
[DEBUG] 2019-10-02 19:56:00.967 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@701dfa81
[DEBUG] 2019-10-02 19:56:00.968 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@701dfa81
[DEBUG] 2019-10-02 19:56:00.970 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2a5af04a
[DEBUG] 2019-10-02 19:56:00.974 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5edc0401
[DEBUG] 2019-10-02 19:56:00.975 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5edc0401
[DEBUG] 2019-10-02 19:56:00.975 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5edc0401
[DEBUG] 2019-10-02 19:56:00.978 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@73cedc23
[DEBUG] 2019-10-02 19:56:00.979 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@73cedc23
[DEBUG] 2019-10-02 19:56:00.979 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@73cedc23
[DEBUG] 2019-10-02 19:56:00.982 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3b48ec26
[DEBUG] 2019-10-02 19:56:00.983 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@63dfb75d
[DEBUG] 2019-10-02 19:56:00.987 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@42dc66fd
[DEBUG] 2019-10-02 19:56:00.987 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@42dc66fd
[DEBUG] 2019-10-02 19:56:00.987 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@42dc66fd
[DEBUG] 2019-10-02 19:56:00.993 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@600e131
[DEBUG] 2019-10-02 19:56:00.994 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@600e131
[DEBUG] 2019-10-02 19:56:00.994 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@600e131
[DEBUG] 2019-10-02 19:56:00.995 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@54e8a0d2
[DEBUG] 2019-10-02 19:56:00.997 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@28939f58
[DEBUG] 2019-10-02 19:56:01.001 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@157cf3fd
[DEBUG] 2019-10-02 19:56:01.002 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@157cf3fd
[DEBUG] 2019-10-02 19:56:01.003 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@46c904fa
[DEBUG] 2019-10-02 19:56:01.008 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5059fa3e
[DEBUG] 2019-10-02 19:56:01.009 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5059fa3e
[DEBUG] 2019-10-02 19:56:01.013 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@41f51d
[DEBUG] 2019-10-02 19:56:01.013 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@41f51d
[DEBUG] 2019-10-02 19:56:01.014 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@33786c94
[DEBUG] 2019-10-02 19:56:01.016 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1f626de5
[DEBUG] 2019-10-02 19:56:01.021 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7bc27212
[DEBUG] 2019-10-02 19:56:01.033 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@11d5dfdd
[DEBUG] 2019-10-02 19:56:01.033 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@11d5dfdd
[DEBUG] 2019-10-02 19:56:01.035 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3ba6390b
[DEBUG] 2019-10-02 19:56:01.035 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1962705e
[DEBUG] 2019-10-02 19:56:01.035 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@38da56ea
[DEBUG] 2019-10-02 19:56:01.035 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2dd6c50b
[DEBUG] 2019-10-02 19:56:01.036 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2732cfdb
[DEBUG] 2019-10-02 19:56:01.036 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d58bbe3
[DEBUG] 2019-10-02 19:56:01.036 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@47dfd5a4
[DEBUG] 2019-10-02 19:56:01.036 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5cbaaec9
[DEBUG] 2019-10-02 19:56:01.115 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 19:56:01.117 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 19:56:01.119 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 19:56:01.119 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 19:56:01.120 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 19:56:01.125 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 19:56:01.126 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 19:56:01.130 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 19:56:01.133 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 19:56:01.134 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 19:56:01.135 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 19:56:01.136 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 19:56:01.136 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 19:56:01.138 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 19:56:01.153 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 19:56:01.153 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 19:56:01.153 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 19:56:01.488 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 19:56:02.620 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 19:56:02.621 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 19:56:02.621 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 19:56:02.798 [http-nio-8080-exec-10] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 19:56:02.883 [http-nio-8080-exec-10] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 19:56:02.974 [http-nio-8080-exec-10] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 19:56:03.112 [http-nio-8080-exec-10] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 19:56:03.127 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41a647cd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7588ddb]
[DEBUG] 2019-10-02 19:56:03.382 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:56:03.473 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 19:56:03.501 [http-nio-8080-exec-10] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 19:56:03.509 [http-nio-8080-exec-10] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 19:56:03.594 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:56:03.602 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 19:56:03.606 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 19:56:03.613 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 19:56:03.619 [http-nio-8080-exec-10] PropertyBinder - Building property id
[DEBUG] 2019-10-02 19:56:03.633 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 19:56:03.637 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:56:03.637 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 19:56:03.637 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 19:56:03.637 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 19:56:03.638 [http-nio-8080-exec-10] PropertyBinder - Building property email
[DEBUG] 2019-10-02 19:56:03.638 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:56:03.638 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 19:56:03.639 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 19:56:03.639 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 19:56:03.639 [http-nio-8080-exec-10] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 19:56:03.639 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:56:03.639 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 19:56:03.640 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 19:56:03.640 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 19:56:03.640 [http-nio-8080-exec-10] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 19:56:03.644 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:56:03.644 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:56:03.651 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:56:03.677 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:56:03.678 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:56:03.679 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 19:56:03.685 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:56:03.686 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 19:56:03.687 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:56:03.697 [http-nio-8080-exec-10] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 19:56:03.697 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:56:03.698 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 19:56:03.699 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 19:56:03.699 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 19:56:03.699 [http-nio-8080-exec-10] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 19:56:03.703 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:56:03.703 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 19:56:03.703 [http-nio-8080-exec-10] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 19:56:03.704 [http-nio-8080-exec-10] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 19:56:03.707 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:56:03.707 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 19:56:03.708 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 19:56:03.708 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 19:56:03.708 [http-nio-8080-exec-10] PropertyBinder - Building property id
[DEBUG] 2019-10-02 19:56:03.708 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 19:56:03.708 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:56:03.708 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 19:56:03.708 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 19:56:03.709 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 19:56:03.709 [http-nio-8080-exec-10] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 19:56:03.709 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:56:03.709 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 19:56:03.709 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 19:56:03.709 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 19:56:03.709 [http-nio-8080-exec-10] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 19:56:03.710 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:56:03.710 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 19:56:03.710 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 19:56:03.710 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 19:56:03.710 [http-nio-8080-exec-10] PropertyBinder - Building property name
[DEBUG] 2019-10-02 19:56:03.710 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 19:56:03.711 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 19:56:03.717 [http-nio-8080-exec-10] PropertyBinder - Building property user
[DEBUG] 2019-10-02 19:56:03.721 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 19:56:03.722 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 19:56:03.722 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 19:56:03.722 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 19:56:03.722 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 19:56:03.722 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 19:56:03.722 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 19:56:03.722 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 19:56:03.722 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 19:56:03.737 [http-nio-8080-exec-10] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 19:56:03.737 [http-nio-8080-exec-10] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 19:56:03.737 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:56:03.739 [http-nio-8080-exec-10] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 19:56:03.741 [http-nio-8080-exec-10] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 19:56:03.744 [http-nio-8080-exec-10] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 19:56:03.745 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:56:03.745 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:56:03.755 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:56:03.860 [http-nio-8080-exec-10] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 19:56:03.863 [http-nio-8080-exec-10] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 19:56:03.863 [http-nio-8080-exec-10] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 19:56:03.863 [http-nio-8080-exec-10] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 19:56:03.863 [http-nio-8080-exec-10] Settings - Statistics: disabled
[DEBUG] 2019-10-02 19:56:03.863 [http-nio-8080-exec-10] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 19:56:03.863 [http-nio-8080-exec-10] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 19:56:03.864 [http-nio-8080-exec-10] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 19:56:03.864 [http-nio-8080-exec-10] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 19:56:03.864 [http-nio-8080-exec-10] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 19:56:03.864 [http-nio-8080-exec-10] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 19:56:03.864 [http-nio-8080-exec-10] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 19:56:03.864 [http-nio-8080-exec-10] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 19:56:03.864 [http-nio-8080-exec-10] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 19:56:03.864 [http-nio-8080-exec-10] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 19:56:03.865 [http-nio-8080-exec-10] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 19:56:03.865 [http-nio-8080-exec-10] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 19:56:03.865 [http-nio-8080-exec-10] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 19:56:03.865 [http-nio-8080-exec-10] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 19:56:03.865 [http-nio-8080-exec-10] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 19:56:03.865 [http-nio-8080-exec-10] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 19:56:03.865 [http-nio-8080-exec-10] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 19:56:03.866 [http-nio-8080-exec-10] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 19:56:03.866 [http-nio-8080-exec-10] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 19:56:03.866 [http-nio-8080-exec-10] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 19:56:03.866 [http-nio-8080-exec-10] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 19:56:03.866 [http-nio-8080-exec-10] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 19:56:03.866 [http-nio-8080-exec-10] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 19:56:03.866 [http-nio-8080-exec-10] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 19:56:03.866 [http-nio-8080-exec-10] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 19:56:03.866 [http-nio-8080-exec-10] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 19:56:03.867 [http-nio-8080-exec-10] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 19:56:03.867 [http-nio-8080-exec-10] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 19:56:03.867 [http-nio-8080-exec-10] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 19:56:03.867 [http-nio-8080-exec-10] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 19:56:03.867 [http-nio-8080-exec-10] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 19:56:03.867 [http-nio-8080-exec-10] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 19:56:03.867 [http-nio-8080-exec-10] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 19:56:03.867 [http-nio-8080-exec-10] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 19:56:04.041 [http-nio-8080-exec-10] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 19:56:04.093 [http-nio-8080-exec-10] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 19:56:04.094 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.2+9-LTS, user.name=Alex, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, java.vendor.version=18.9, derby.system.home=C:\Users\Alex\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\Users\Alex\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.2, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=windows, java.class.path=C:\Users\Alex\tomcat\bin\bootstrap.jar;C:\Users\Alex\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\Users\Alex\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/Users/Alex/tomcat/lib","C:/Users/Alex/tomcat/lib/*.jar","C:\Users\Alex\tomcat/lib","C:\Users\Alex\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=10.0, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=http://bugreport.java.com/bugreport/, tomee.remote.support=true, catalina.home=C:\Users\Alex\tomcat, user.dir=C:\Users\Alex\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@526a9f33, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2019-10-02 19:56:04.151 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:56:04.152 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:56:04.172 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:56:04.173 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:56:04.178 [http-nio-8080-exec-10] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 19:56:04.180 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 19:56:04.180 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41a647cd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@40c897ce]
[DEBUG] 2019-10-02 19:56:04.319 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:56:04.319 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:56:04.392 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 19:56:04.393 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:56:04.984 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:56:04.985 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:56:04.985 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 19:56:04.985 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:56:05.029 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:56:05.029 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 19:56:05.029 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 19:56:05.029 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 19:56:05.029 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 19:56:05.038 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 19:56:05.038 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 19:56:05.038 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 19:56:05.039 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 19:56:05.039 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 19:56:05.039 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 19:56:05.039 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 19:56:05.106 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56b02141]
[DEBUG] 2019-10-02 19:56:05.109 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 19:56:05.109 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 19:56:05.109 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 19:56:05.109 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 19:56:05.122 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4726c518]
[DEBUG] 2019-10-02 19:56:05.128 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c744533]
[DEBUG] 2019-10-02 19:56:05.132 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 19:56:05.132 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 19:56:05.132 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 19:56:05.132 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 19:56:05.132 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 19:56:05.134 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 19:56:05.134 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:56:05.167 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:56:05.182 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 19:56:05.189 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:56:05.190 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3915abad]
[DEBUG] 2019-10-02 19:56:05.190 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 19:56:05.190 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 19:56:05.190 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 19:56:05.190 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 19:56:05.190 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@bbbca1f]
[DEBUG] 2019-10-02 19:56:05.190 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ac9d034]
[DEBUG] 2019-10-02 19:56:05.190 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 19:56:05.190 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 19:56:05.190 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 19:56:05.191 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 19:56:05.191 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 19:56:05.191 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 19:56:05.191 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:56:05.191 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:56:05.192 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 19:56:05.192 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:56:05.227 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:56:05.228 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 19:56:05.228 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 19:56:05.228 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 19:56:05.228 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 19:56:05.229 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 19:56:05.229 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 19:56:05.229 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 19:56:05.229 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 19:56:05.229 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@219ad1bf]
[DEBUG] 2019-10-02 19:56:05.229 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:56:05.229 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:56:05.229 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:56:05.229 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:56:05.230 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70700b13]
[DEBUG] 2019-10-02 19:56:05.231 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 19:56:05.231 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 19:56:05.231 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 19:56:05.231 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 19:56:05.231 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 19:56:05.232 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 19:56:05.232 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:56:05.232 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:56:05.233 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 19:56:05.233 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:56:05.233 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9fd4a8b]
[DEBUG] 2019-10-02 19:56:05.233 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:56:05.234 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:56:05.234 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:56:05.234 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:56:05.234 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cc3fe9c]
[DEBUG] 2019-10-02 19:56:05.234 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 19:56:05.234 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 19:56:05.234 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 19:56:05.234 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 19:56:05.234 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 19:56:05.234 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 19:56:05.235 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:56:05.235 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:56:05.235 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 19:56:05.236 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:56:05.236 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 19:56:05.236 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 19:56:05.251 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@735b9a67]
[DEBUG] 2019-10-02 19:56:05.251 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@728657c7]
[DEBUG] 2019-10-02 19:56:05.251 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 19:56:05.251 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 19:56:05.251 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 19:56:05.251 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 19:56:05.251 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 19:56:05.252 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 19:56:05.257 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 19:56:05.258 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 19:56:05.259 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:56:05.384 [http-nio-8080-exec-10] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 19:56:05.384 [http-nio-8080-exec-10] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 19:56:05.386 [http-nio-8080-exec-10] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 19:56:05.409 [http-nio-8080-exec-10] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 19:56:05.409 [http-nio-8080-exec-10] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 19:56:05.410 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 19:56:05.410 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 19:56:05.414 [http-nio-8080-exec-10] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@60bd1e2e
[DEBUG] 2019-10-02 19:56:05.418 [http-nio-8080-exec-10] SessionFactoryRegistry - Registering SessionFactory: 95a1fc27-5b62-422a-8bf3-efec8ec123fb (<unnamed>)
[DEBUG] 2019-10-02 19:56:05.419 [http-nio-8080-exec-10] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 19:56:05.629 [http-nio-8080-exec-10] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 19:56:05.684 [http-nio-8080-exec-10] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:56:05.744 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:56:05.748 [http-nio-8080-exec-10] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:56:05.775 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:56:05.777 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `directions` : value = {"list": ["Instruction 1", "Instruction 2"]}
[DEBUG] 2019-10-02 19:56:05.778 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:56:05.778 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `ingredients` : value = {"list":[{"ingrediant": "Ingrediant 1","amount": "16 oz"},{"ingrediant": "Ingrediant 2","amount": "5 lbs"}]}
[DEBUG] 2019-10-02 19:56:05.778 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:56:05.778 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 19:56:05.778 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:56:05.778 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 19:56:05.778 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:56:05.780 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:56:05.780 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:56:05.780 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:56:05.780 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:56:05.781 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 19:56:05.781 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:56:05.781 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 19:56:05.781 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:56:05.781 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:56:05.781 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:56:05.799 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 19:56:05.800 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:56:05.800 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:56:05.802 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:56:05.807 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:56:05.807 [http-nio-8080-exec-10] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:56:05.809 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:56:05.814 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:56:05.814 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:56:05.815 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:56:05.815 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:56:05.815 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:56:05.815 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:56:05.815 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 19:56:05.815 [http-nio-8080-exec-10] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-02 19:56:05.815 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:57:18.886 [http-nio-8080-exec-3] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:57:18.893 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:57:18.893 [http-nio-8080-exec-3] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:57:18.894 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:57:18.894 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `directions` : value = {"list": ["Instruction 1", "Instruction 2"]}
[DEBUG] 2019-10-02 19:57:18.894 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:57:18.894 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `ingredients` : value = {[{"ingrediant": "Ingrediant 1","amount": "16 oz"},{"ingrediant": "Ingrediant 2","amount": "5 lbs"}]}
[DEBUG] 2019-10-02 19:57:18.894 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:57:18.894 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 19:57:18.894 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:57:18.894 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 19:57:18.894 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:57:18.895 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:57:18.895 [http-nio-8080-exec-3] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:57:18.895 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:57:18.895 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:57:18.895 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 19:57:18.895 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:57:18.895 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 19:57:18.895 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:57:18.896 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:57:18.896 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:57:18.896 [http-nio-8080-exec-3] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 19:57:18.896 [http-nio-8080-exec-3] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:57:18.896 [http-nio-8080-exec-3] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:57:18.896 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:57:18.897 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:57:18.897 [http-nio-8080-exec-3] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:57:18.899 [http-nio-8080-exec-3] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:57:18.900 [http-nio-8080-exec-3] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:57:18.900 [http-nio-8080-exec-3] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:57:18.900 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:57:18.901 [http-nio-8080-exec-3] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:57:18.901 [http-nio-8080-exec-3] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:57:18.901 [http-nio-8080-exec-3] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:57:18.901 [http-nio-8080-exec-3] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 19:57:18.901 [http-nio-8080-exec-3] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-02 19:57:18.901 [http-nio-8080-exec-3] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 19:57:33.821 [http-nio-8080-exec-5] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 19:57:33.827 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:57:33.828 [http-nio-8080-exec-5] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 19:57:33.828 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:57:33.828 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `directions` : value = {"list": ["Instruction 1", "Instruction 2"]}
[DEBUG] 2019-10-02 19:57:33.828 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:57:33.828 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `ingredients` : value = {"list":[{"ingrediant": "Ingrediant 1","amount": "16 oz"},{"ingrediant": "Ingrediant 2","amount": "5 lbs"}]}
[DEBUG] 2019-10-02 19:57:33.828 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:57:33.829 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 19:57:33.829 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:57:33.829 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 19:57:33.829 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:57:33.829 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 19:57:33.829 [http-nio-8080-exec-5] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:57:33.829 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 19:57:33.829 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:57:33.829 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 19:57:33.829 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:57:33.829 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 19:57:33.830 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:57:33.830 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 19:57:33.830 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:57:33.830 [http-nio-8080-exec-5] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 19:57:33.830 [http-nio-8080-exec-5] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 19:57:33.830 [http-nio-8080-exec-5] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 19:57:33.831 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:57:33.831 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:57:33.832 [http-nio-8080-exec-5] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 19:57:33.834 [http-nio-8080-exec-5] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:57:33.834 [http-nio-8080-exec-5] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 19:57:33.834 [http-nio-8080-exec-5] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:57:33.835 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:57:33.835 [http-nio-8080-exec-5] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 19:57:33.835 [http-nio-8080-exec-5] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 19:57:33.835 [http-nio-8080-exec-5] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 19:57:33.835 [http-nio-8080-exec-5] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 19:57:33.835 [http-nio-8080-exec-5] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-02 19:57:33.835 [http-nio-8080-exec-5] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 20:00:47.518 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 20:00:47.526 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 20:00:47.548 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 20:00:47.902 [http-nio-8080-exec-9] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 20:00:47.908 [http-nio-8080-exec-9] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 20:00:48.523 [http-nio-8080-exec-9] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 20:00:48.523 [http-nio-8080-exec-9] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 20:00:48.572 [http-nio-8080-exec-9] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 20:00:49.276 [http-nio-8080-exec-9] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 20:00:49.336 [http-nio-8080-exec-9] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 20:00:49.340 [http-nio-8080-exec-9] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 20:00:49.407 [http-nio-8080-exec-9] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 20:00:49.533 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5bcd620f
[DEBUG] 2019-10-02 20:00:49.534 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5bcd620f
[DEBUG] 2019-10-02 20:00:49.534 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5bcd620f
[DEBUG] 2019-10-02 20:00:49.536 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@38e35ce3
[DEBUG] 2019-10-02 20:00:49.538 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@267c7e60
[DEBUG] 2019-10-02 20:00:49.540 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@51dfdcd1
[DEBUG] 2019-10-02 20:00:49.543 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@311dc715
[DEBUG] 2019-10-02 20:00:49.543 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@311dc715
[DEBUG] 2019-10-02 20:00:49.544 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@311dc715
[DEBUG] 2019-10-02 20:00:49.546 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@29be6dc8
[DEBUG] 2019-10-02 20:00:49.547 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@29be6dc8
[DEBUG] 2019-10-02 20:00:49.547 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@29be6dc8
[DEBUG] 2019-10-02 20:00:49.550 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@73d8ada0
[DEBUG] 2019-10-02 20:00:49.550 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@73d8ada0
[DEBUG] 2019-10-02 20:00:49.550 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@73d8ada0
[DEBUG] 2019-10-02 20:00:49.554 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@45edefec
[DEBUG] 2019-10-02 20:00:49.555 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@45edefec
[DEBUG] 2019-10-02 20:00:49.555 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@45edefec
[DEBUG] 2019-10-02 20:00:49.558 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@90be3f4
[DEBUG] 2019-10-02 20:00:49.559 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@90be3f4
[DEBUG] 2019-10-02 20:00:49.559 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@90be3f4
[DEBUG] 2019-10-02 20:00:49.562 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@17476331
[DEBUG] 2019-10-02 20:00:49.562 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@17476331
[DEBUG] 2019-10-02 20:00:49.562 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@17476331
[DEBUG] 2019-10-02 20:00:49.565 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@16bff96c
[DEBUG] 2019-10-02 20:00:49.566 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@16bff96c
[DEBUG] 2019-10-02 20:00:49.566 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@16bff96c
[DEBUG] 2019-10-02 20:00:49.569 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@10b577a8
[DEBUG] 2019-10-02 20:00:49.570 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@10b577a8
[DEBUG] 2019-10-02 20:00:49.574 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@62b0848
[DEBUG] 2019-10-02 20:00:49.574 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@62b0848
[DEBUG] 2019-10-02 20:00:49.577 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@49f91f87
[DEBUG] 2019-10-02 20:00:49.578 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@49f91f87
[DEBUG] 2019-10-02 20:00:49.580 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1bcc1134
[DEBUG] 2019-10-02 20:00:49.582 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4a04c680
[DEBUG] 2019-10-02 20:00:49.585 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@57748ffe
[DEBUG] 2019-10-02 20:00:49.586 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@57748ffe
[DEBUG] 2019-10-02 20:00:49.589 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@6e920227
[DEBUG] 2019-10-02 20:00:49.590 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6e920227
[DEBUG] 2019-10-02 20:00:49.602 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@11d84262
[DEBUG] 2019-10-02 20:00:49.603 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@11d84262
[DEBUG] 2019-10-02 20:00:49.607 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@24391ebd
[DEBUG] 2019-10-02 20:00:49.608 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@24391ebd
[DEBUG] 2019-10-02 20:00:49.612 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5038f1f
[DEBUG] 2019-10-02 20:00:49.612 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5038f1f
[DEBUG] 2019-10-02 20:00:49.616 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2f7f019e
[DEBUG] 2019-10-02 20:00:49.616 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2f7f019e
[DEBUG] 2019-10-02 20:00:49.621 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a24f088
[DEBUG] 2019-10-02 20:00:49.621 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7a24f088
[DEBUG] 2019-10-02 20:00:49.626 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2ebe1d95
[DEBUG] 2019-10-02 20:00:49.626 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2ebe1d95
[DEBUG] 2019-10-02 20:00:49.633 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3aed7e6a
[DEBUG] 2019-10-02 20:00:49.634 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3aed7e6a
[DEBUG] 2019-10-02 20:00:49.639 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3130e066
[DEBUG] 2019-10-02 20:00:49.639 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3130e066
[DEBUG] 2019-10-02 20:00:49.642 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3a33f61b
[DEBUG] 2019-10-02 20:00:49.642 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3a33f61b
[DEBUG] 2019-10-02 20:00:49.645 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@9044a46
[DEBUG] 2019-10-02 20:00:49.645 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@9044a46
[DEBUG] 2019-10-02 20:00:49.645 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@9044a46
[DEBUG] 2019-10-02 20:00:49.649 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57f22514
[DEBUG] 2019-10-02 20:00:49.652 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6491e4e1
[DEBUG] 2019-10-02 20:00:49.652 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6491e4e1
[DEBUG] 2019-10-02 20:00:49.653 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6491e4e1
[DEBUG] 2019-10-02 20:00:49.655 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@44eb68db
[DEBUG] 2019-10-02 20:00:49.658 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@142dade5
[DEBUG] 2019-10-02 20:00:49.658 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@142dade5
[DEBUG] 2019-10-02 20:00:49.661 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@730fb49c
[DEBUG] 2019-10-02 20:00:49.662 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@730fb49c
[DEBUG] 2019-10-02 20:00:49.664 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@772c8d93
[DEBUG] 2019-10-02 20:00:49.665 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@772c8d93
[DEBUG] 2019-10-02 20:00:49.667 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@708bd6ea
[DEBUG] 2019-10-02 20:00:49.668 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@708bd6ea
[DEBUG] 2019-10-02 20:00:49.672 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@70403269
[DEBUG] 2019-10-02 20:00:49.672 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@70403269
[DEBUG] 2019-10-02 20:00:49.674 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4562dd4b
[DEBUG] 2019-10-02 20:00:49.678 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@255d6f5b
[DEBUG] 2019-10-02 20:00:49.678 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@255d6f5b
[DEBUG] 2019-10-02 20:00:49.678 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@255d6f5b
[DEBUG] 2019-10-02 20:00:49.682 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@448fc91
[DEBUG] 2019-10-02 20:00:49.683 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@448fc91
[DEBUG] 2019-10-02 20:00:49.683 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@448fc91
[DEBUG] 2019-10-02 20:00:49.687 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6c0f9787
[DEBUG] 2019-10-02 20:00:49.689 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@64187f15
[DEBUG] 2019-10-02 20:00:49.692 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@d7876f1
[DEBUG] 2019-10-02 20:00:49.692 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@d7876f1
[DEBUG] 2019-10-02 20:00:49.692 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@d7876f1
[DEBUG] 2019-10-02 20:00:49.695 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1cf68472
[DEBUG] 2019-10-02 20:00:49.695 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1cf68472
[DEBUG] 2019-10-02 20:00:49.695 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1cf68472
[DEBUG] 2019-10-02 20:00:49.697 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3ebe4381
[DEBUG] 2019-10-02 20:00:49.699 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@535a8546
[DEBUG] 2019-10-02 20:00:49.705 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3a1881ac
[DEBUG] 2019-10-02 20:00:49.705 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3a1881ac
[DEBUG] 2019-10-02 20:00:49.707 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@75576b0
[DEBUG] 2019-10-02 20:00:49.711 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@189ad9b0
[DEBUG] 2019-10-02 20:00:49.711 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@189ad9b0
[DEBUG] 2019-10-02 20:00:49.716 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@741f01de
[DEBUG] 2019-10-02 20:00:49.716 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@741f01de
[DEBUG] 2019-10-02 20:00:49.717 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2be72a28
[DEBUG] 2019-10-02 20:00:49.719 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@17efcd43
[DEBUG] 2019-10-02 20:00:49.724 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@95eb71d
[DEBUG] 2019-10-02 20:00:49.737 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@d59a21f
[DEBUG] 2019-10-02 20:00:49.737 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@d59a21f
[DEBUG] 2019-10-02 20:00:49.739 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f82e35f
[DEBUG] 2019-10-02 20:00:49.739 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@369964d
[DEBUG] 2019-10-02 20:00:49.739 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@42fbdc28
[DEBUG] 2019-10-02 20:00:49.739 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@522fb1bd
[DEBUG] 2019-10-02 20:00:49.739 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4aaf38bc
[DEBUG] 2019-10-02 20:00:49.739 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5bb145a
[DEBUG] 2019-10-02 20:00:49.740 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19bd8259
[DEBUG] 2019-10-02 20:00:49.740 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@36306a8a
[DEBUG] 2019-10-02 20:00:49.834 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 20:00:49.836 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 20:00:49.838 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 20:00:49.839 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 20:00:49.840 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 20:00:49.844 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 20:00:49.845 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 20:00:49.848 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 20:00:49.851 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 20:00:49.852 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 20:00:49.854 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 20:00:49.855 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 20:00:49.855 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 20:00:49.857 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 20:00:49.873 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 20:00:49.873 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 20:00:49.873 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 20:00:50.292 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 20:00:51.506 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 20:00:51.507 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 20:00:51.507 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 20:00:51.609 [http-nio-8080-exec-9] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 20:00:51.675 [http-nio-8080-exec-9] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 20:00:51.731 [http-nio-8080-exec-9] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 20:00:51.858 [http-nio-8080-exec-9] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 20:00:51.875 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e60648] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4ea4030b]
[DEBUG] 2019-10-02 20:00:52.082 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:00:52.167 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 20:00:52.207 [http-nio-8080-exec-9] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 20:00:52.220 [http-nio-8080-exec-9] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 20:00:52.321 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:00:52.333 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 20:00:52.338 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 20:00:52.348 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 20:00:52.355 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2019-10-02 20:00:52.376 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 20:00:52.383 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:00:52.383 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 20:00:52.383 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 20:00:52.383 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 20:00:52.383 [http-nio-8080-exec-9] PropertyBinder - Building property email
[DEBUG] 2019-10-02 20:00:52.384 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:00:52.384 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 20:00:52.384 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 20:00:52.385 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 20:00:52.385 [http-nio-8080-exec-9] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 20:00:52.385 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:00:52.385 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 20:00:52.385 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 20:00:52.385 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 20:00:52.386 [http-nio-8080-exec-9] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 20:00:52.390 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 20:00:52.390 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:00:52.399 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:00:52.435 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:00:52.436 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:00:52.438 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 20:00:52.442 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 20:00:52.442 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 20:00:52.443 [http-nio-8080-exec-9] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 20:00:52.455 [http-nio-8080-exec-9] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 20:00:52.456 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:00:52.457 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 20:00:52.457 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 20:00:52.457 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 20:00:52.457 [http-nio-8080-exec-9] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 20:00:52.461 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 20:00:52.462 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 20:00:52.462 [http-nio-8080-exec-9] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 20:00:52.462 [http-nio-8080-exec-9] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 20:00:52.466 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:00:52.466 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 20:00:52.466 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 20:00:52.466 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 20:00:52.466 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2019-10-02 20:00:52.466 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 20:00:52.466 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:00:52.466 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 20:00:52.466 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 20:00:52.466 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 20:00:52.466 [http-nio-8080-exec-9] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 20:00:52.466 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:00:52.467 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 20:00:52.467 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 20:00:52.467 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 20:00:52.467 [http-nio-8080-exec-9] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 20:00:52.467 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:00:52.467 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 20:00:52.467 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 20:00:52.467 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 20:00:52.467 [http-nio-8080-exec-9] PropertyBinder - Building property name
[DEBUG] 2019-10-02 20:00:52.468 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 20:00:52.468 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:00:52.472 [http-nio-8080-exec-9] PropertyBinder - Building property user
[DEBUG] 2019-10-02 20:00:52.476 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 20:00:52.476 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 20:00:52.476 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 20:00:52.476 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 20:00:52.476 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 20:00:52.477 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 20:00:52.477 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 20:00:52.477 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 20:00:52.477 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 20:00:52.489 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 20:00:52.489 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 20:00:52.489 [http-nio-8080-exec-9] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 20:00:52.491 [http-nio-8080-exec-9] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 20:00:52.492 [http-nio-8080-exec-9] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 20:00:52.497 [http-nio-8080-exec-9] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 20:00:52.497 [http-nio-8080-exec-9] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 20:00:52.497 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:00:52.505 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:00:52.610 [http-nio-8080-exec-9] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 20:00:52.611 [http-nio-8080-exec-9] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 20:00:52.612 [http-nio-8080-exec-9] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 20:00:52.612 [http-nio-8080-exec-9] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 20:00:52.612 [http-nio-8080-exec-9] Settings - Statistics: disabled
[DEBUG] 2019-10-02 20:00:52.612 [http-nio-8080-exec-9] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 20:00:52.612 [http-nio-8080-exec-9] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 20:00:52.612 [http-nio-8080-exec-9] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 20:00:52.612 [http-nio-8080-exec-9] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 20:00:52.613 [http-nio-8080-exec-9] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 20:00:52.613 [http-nio-8080-exec-9] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 20:00:52.613 [http-nio-8080-exec-9] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 20:00:52.613 [http-nio-8080-exec-9] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 20:00:52.613 [http-nio-8080-exec-9] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 20:00:52.613 [http-nio-8080-exec-9] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 20:00:52.614 [http-nio-8080-exec-9] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 20:00:52.614 [http-nio-8080-exec-9] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 20:00:52.614 [http-nio-8080-exec-9] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 20:00:52.614 [http-nio-8080-exec-9] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 20:00:52.614 [http-nio-8080-exec-9] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 20:00:52.614 [http-nio-8080-exec-9] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 20:00:52.614 [http-nio-8080-exec-9] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 20:00:52.614 [http-nio-8080-exec-9] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 20:00:52.615 [http-nio-8080-exec-9] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 20:00:52.615 [http-nio-8080-exec-9] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 20:00:52.615 [http-nio-8080-exec-9] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 20:00:52.615 [http-nio-8080-exec-9] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 20:00:52.615 [http-nio-8080-exec-9] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 20:00:52.615 [http-nio-8080-exec-9] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 20:00:52.615 [http-nio-8080-exec-9] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 20:00:52.615 [http-nio-8080-exec-9] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 20:00:52.615 [http-nio-8080-exec-9] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 20:00:52.616 [http-nio-8080-exec-9] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 20:00:52.616 [http-nio-8080-exec-9] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 20:00:52.616 [http-nio-8080-exec-9] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 20:00:52.616 [http-nio-8080-exec-9] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 20:00:52.616 [http-nio-8080-exec-9] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 20:00:52.616 [http-nio-8080-exec-9] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 20:00:52.616 [http-nio-8080-exec-9] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 20:00:52.835 [http-nio-8080-exec-9] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 20:00:52.893 [http-nio-8080-exec-9] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 20:00:52.894 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.2+9-LTS, user.name=Alex, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, java.vendor.version=18.9, derby.system.home=C:\Users\Alex\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\Users\Alex\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.2, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=windows, java.class.path=C:\Users\Alex\tomcat\bin\bootstrap.jar;C:\Users\Alex\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\Users\Alex\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/Users/Alex/tomcat/lib","C:/Users/Alex/tomcat/lib/*.jar","C:\Users\Alex\tomcat/lib","C:\Users\Alex\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=10.0, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=http://bugreport.java.com/bugreport/, tomee.remote.support=true, catalina.home=C:\Users\Alex\tomcat, user.dir=C:\Users\Alex\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7dc724e0, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2019-10-02 20:00:52.953 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 20:00:52.953 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:00:52.974 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 20:00:52.974 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 20:00:52.980 [http-nio-8080-exec-9] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 20:00:52.982 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 20:00:52.982 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4e60648] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5d802b0c]
[DEBUG] 2019-10-02 20:00:53.095 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 20:00:53.095 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:00:53.150 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 20:00:53.150 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:00:53.680 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 20:00:53.680 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 20:00:53.680 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 20:00:53.680 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 20:00:53.737 [http-nio-8080-exec-9] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 20:00:53.737 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 20:00:53.737 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 20:00:53.737 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 20:00:53.737 [http-nio-8080-exec-9] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 20:00:53.748 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:00:53.748 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 20:00:53.749 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 20:00:53.749 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 20:00:53.749 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 20:00:53.749 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 20:00:53.749 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 20:00:53.827 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53bea827]
[DEBUG] 2019-10-02 20:00:53.830 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 20:00:53.831 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 20:00:53.831 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 20:00:53.831 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 20:00:53.844 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f84feed]
[DEBUG] 2019-10-02 20:00:53.850 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c34fe5a]
[DEBUG] 2019-10-02 20:00:53.854 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 20:00:53.854 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 20:00:53.854 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 20:00:53.854 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 20:00:53.854 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 20:00:53.855 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 20:00:53.856 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 20:00:53.889 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 20:00:53.904 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 20:00:53.915 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 20:00:53.915 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fefd8f6]
[DEBUG] 2019-10-02 20:00:53.916 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 20:00:53.916 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 20:00:53.916 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 20:00:53.916 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 20:00:53.916 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55b9ce8d]
[DEBUG] 2019-10-02 20:00:53.916 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b187be2]
[DEBUG] 2019-10-02 20:00:53.916 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 20:00:53.916 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 20:00:53.916 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 20:00:53.917 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 20:00:53.917 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 20:00:53.917 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 20:00:53.917 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 20:00:53.917 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 20:00:53.919 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 20:00:53.919 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 20:00:53.960 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 20:00:53.961 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 20:00:53.961 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 20:00:53.961 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 20:00:53.961 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 20:00:53.961 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 20:00:53.961 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 20:00:53.962 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 20:00:53.962 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 20:00:53.962 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a88471d]
[DEBUG] 2019-10-02 20:00:53.962 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 20:00:53.962 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 20:00:53.962 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 20:00:53.962 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 20:00:53.963 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@344a931a]
[DEBUG] 2019-10-02 20:00:53.965 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 20:00:53.965 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 20:00:53.965 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 20:00:53.965 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 20:00:53.965 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 20:00:53.965 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 20:00:53.965 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 20:00:53.966 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 20:00:53.966 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 20:00:53.967 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 20:00:53.967 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ec79695]
[DEBUG] 2019-10-02 20:00:53.967 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 20:00:53.967 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 20:00:53.967 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 20:00:53.967 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 20:00:53.967 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a9d06fc]
[DEBUG] 2019-10-02 20:00:53.968 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 20:00:53.968 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 20:00:53.969 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 20:00:53.969 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 20:00:53.969 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 20:00:53.969 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 20:00:53.969 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 20:00:53.969 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 20:00:53.970 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 20:00:53.970 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 20:00:53.970 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 20:00:53.971 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 20:00:53.984 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@46373b2c]
[DEBUG] 2019-10-02 20:00:53.984 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@583b381c]
[DEBUG] 2019-10-02 20:00:53.985 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 20:00:53.986 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 20:00:53.986 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 20:00:53.986 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 20:00:53.986 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 20:00:53.986 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 20:00:53.991 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 20:00:53.992 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 20:00:53.993 [http-nio-8080-exec-9] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 20:00:54.109 [http-nio-8080-exec-9] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 20:00:54.109 [http-nio-8080-exec-9] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 20:00:54.110 [http-nio-8080-exec-9] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 20:00:54.128 [http-nio-8080-exec-9] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 20:00:54.128 [http-nio-8080-exec-9] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 20:00:54.129 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 20:00:54.129 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 20:00:54.133 [http-nio-8080-exec-9] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@78d6ccef
[DEBUG] 2019-10-02 20:00:54.136 [http-nio-8080-exec-9] SessionFactoryRegistry - Registering SessionFactory: c47eb22f-7117-4883-893d-10b3b1182202 (<unnamed>)
[DEBUG] 2019-10-02 20:00:54.136 [http-nio-8080-exec-9] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 20:00:54.360 [http-nio-8080-exec-9] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 20:00:54.417 [http-nio-8080-exec-9] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 20:00:54.486 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 20:00:54.492 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 20:00:54.529 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 20:00:54.531 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `directions` : value = {"list": ["Instruction 1", "Instruction 2"]}
[DEBUG] 2019-10-02 20:00:54.531 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:00:54.531 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `ingredients` : value = {"list":[{"ingrediant": "Ingrediant 1","amount": "16 oz"},{"ingrediant": "Ingrediant 2","amount": "5 lbs"}]}
[DEBUG] 2019-10-02 20:00:54.531 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:00:54.531 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 20:00:54.532 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:00:54.532 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 20:00:54.532 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:00:54.534 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 20:00:54.534 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 20:00:54.534 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 20:00:54.534 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:00:54.534 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 20:00:54.534 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:00:54.535 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 20:00:54.535 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:00:54.535 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 20:00:54.535 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:00:54.554 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 20:00:54.554 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:00:54.554 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 20:00:54.556 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 20:00:54.559 [http-nio-8080-exec-9] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 20:00:54.560 [http-nio-8080-exec-9] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 20:00:54.562 [http-nio-8080-exec-9] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 20:00:54.566 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 20:00:54.567 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 20:00:54.567 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 20:00:54.567 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 20:00:54.568 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 20:00:54.568 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 20:00:54.568 [http-nio-8080-exec-9] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 20:00:54.568 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-02 20:00:54.568 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 20:05:03.862 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 20:05:03.868 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 20:05:03.888 [http-nio-8080-exec-9] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 20:05:04.307 [http-nio-8080-exec-9] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 20:05:04.312 [http-nio-8080-exec-9] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 20:05:04.782 [http-nio-8080-exec-9] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 20:05:04.782 [http-nio-8080-exec-9] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 20:05:04.825 [http-nio-8080-exec-9] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 20:05:05.542 [http-nio-8080-exec-9] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 20:05:05.610 [http-nio-8080-exec-9] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 20:05:05.614 [http-nio-8080-exec-9] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 20:05:05.696 [http-nio-8080-exec-9] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 20:05:05.809 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@68dcd4b3
[DEBUG] 2019-10-02 20:05:05.809 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@68dcd4b3
[DEBUG] 2019-10-02 20:05:05.809 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@68dcd4b3
[DEBUG] 2019-10-02 20:05:05.811 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3ef17036
[DEBUG] 2019-10-02 20:05:05.813 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1342bd88
[DEBUG] 2019-10-02 20:05:05.815 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@71342d60
[DEBUG] 2019-10-02 20:05:05.818 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@70b3eed8
[DEBUG] 2019-10-02 20:05:05.818 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@70b3eed8
[DEBUG] 2019-10-02 20:05:05.818 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@70b3eed8
[DEBUG] 2019-10-02 20:05:05.822 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3040bd46
[DEBUG] 2019-10-02 20:05:05.822 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3040bd46
[DEBUG] 2019-10-02 20:05:05.822 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3040bd46
[DEBUG] 2019-10-02 20:05:05.826 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@357ddd8e
[DEBUG] 2019-10-02 20:05:05.826 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@357ddd8e
[DEBUG] 2019-10-02 20:05:05.826 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@357ddd8e
[DEBUG] 2019-10-02 20:05:05.831 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@42841844
[DEBUG] 2019-10-02 20:05:05.831 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@42841844
[DEBUG] 2019-10-02 20:05:05.831 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@42841844
[DEBUG] 2019-10-02 20:05:05.834 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4b0a6e85
[DEBUG] 2019-10-02 20:05:05.834 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4b0a6e85
[DEBUG] 2019-10-02 20:05:05.834 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4b0a6e85
[DEBUG] 2019-10-02 20:05:05.837 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3c9c8ae6
[DEBUG] 2019-10-02 20:05:05.837 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3c9c8ae6
[DEBUG] 2019-10-02 20:05:05.837 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3c9c8ae6
[DEBUG] 2019-10-02 20:05:05.841 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@695a1bd3
[DEBUG] 2019-10-02 20:05:05.841 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@695a1bd3
[DEBUG] 2019-10-02 20:05:05.841 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@695a1bd3
[DEBUG] 2019-10-02 20:05:05.844 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4e1f004a
[DEBUG] 2019-10-02 20:05:05.844 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4e1f004a
[DEBUG] 2019-10-02 20:05:05.848 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@436a491f
[DEBUG] 2019-10-02 20:05:05.848 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@436a491f
[DEBUG] 2019-10-02 20:05:05.850 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@19872f39
[DEBUG] 2019-10-02 20:05:05.850 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@19872f39
[DEBUG] 2019-10-02 20:05:05.852 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@37f11e9c
[DEBUG] 2019-10-02 20:05:05.853 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5272cc5e
[DEBUG] 2019-10-02 20:05:05.855 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@9cc1b95
[DEBUG] 2019-10-02 20:05:05.855 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@9cc1b95
[DEBUG] 2019-10-02 20:05:05.858 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@651d1136
[DEBUG] 2019-10-02 20:05:05.858 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@651d1136
[DEBUG] 2019-10-02 20:05:05.870 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@21878f36
[DEBUG] 2019-10-02 20:05:05.870 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@21878f36
[DEBUG] 2019-10-02 20:05:05.873 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d30d0e4
[DEBUG] 2019-10-02 20:05:05.873 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d30d0e4
[DEBUG] 2019-10-02 20:05:05.876 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4625337c
[DEBUG] 2019-10-02 20:05:05.876 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4625337c
[DEBUG] 2019-10-02 20:05:05.879 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@75776516
[DEBUG] 2019-10-02 20:05:05.879 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@75776516
[DEBUG] 2019-10-02 20:05:05.883 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@72d83ebc
[DEBUG] 2019-10-02 20:05:05.883 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@72d83ebc
[DEBUG] 2019-10-02 20:05:05.886 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@64c0ba02
[DEBUG] 2019-10-02 20:05:05.887 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@64c0ba02
[DEBUG] 2019-10-02 20:05:05.891 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@34fea185
[DEBUG] 2019-10-02 20:05:05.891 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@34fea185
[DEBUG] 2019-10-02 20:05:05.894 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6369e69b
[DEBUG] 2019-10-02 20:05:05.894 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6369e69b
[DEBUG] 2019-10-02 20:05:05.898 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1eb8639c
[DEBUG] 2019-10-02 20:05:05.898 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1eb8639c
[DEBUG] 2019-10-02 20:05:05.901 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4c57db30
[DEBUG] 2019-10-02 20:05:05.901 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4c57db30
[DEBUG] 2019-10-02 20:05:05.901 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4c57db30
[DEBUG] 2019-10-02 20:05:05.904 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7e6ad50c
[DEBUG] 2019-10-02 20:05:05.907 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@33c24c0e
[DEBUG] 2019-10-02 20:05:05.908 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@33c24c0e
[DEBUG] 2019-10-02 20:05:05.908 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@33c24c0e
[DEBUG] 2019-10-02 20:05:05.910 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6e9e07fc
[DEBUG] 2019-10-02 20:05:05.912 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6675969c
[DEBUG] 2019-10-02 20:05:05.912 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6675969c
[DEBUG] 2019-10-02 20:05:05.916 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@566b6632
[DEBUG] 2019-10-02 20:05:05.916 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@566b6632
[DEBUG] 2019-10-02 20:05:05.918 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@dead875
[DEBUG] 2019-10-02 20:05:05.918 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@dead875
[DEBUG] 2019-10-02 20:05:05.920 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2ea7a5da
[DEBUG] 2019-10-02 20:05:05.920 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2ea7a5da
[DEBUG] 2019-10-02 20:05:05.923 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6d246796
[DEBUG] 2019-10-02 20:05:05.923 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6d246796
[DEBUG] 2019-10-02 20:05:05.924 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4c73814a
[DEBUG] 2019-10-02 20:05:05.927 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5be41566
[DEBUG] 2019-10-02 20:05:05.927 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5be41566
[DEBUG] 2019-10-02 20:05:05.927 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5be41566
[DEBUG] 2019-10-02 20:05:05.929 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7af06407
[DEBUG] 2019-10-02 20:05:05.929 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7af06407
[DEBUG] 2019-10-02 20:05:05.930 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7af06407
[DEBUG] 2019-10-02 20:05:05.933 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@36bb86c9
[DEBUG] 2019-10-02 20:05:05.934 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@d4130ef
[DEBUG] 2019-10-02 20:05:05.936 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5335c39d
[DEBUG] 2019-10-02 20:05:05.937 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5335c39d
[DEBUG] 2019-10-02 20:05:05.937 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5335c39d
[DEBUG] 2019-10-02 20:05:05.939 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@43807a68
[DEBUG] 2019-10-02 20:05:05.939 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@43807a68
[DEBUG] 2019-10-02 20:05:05.940 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@43807a68
[DEBUG] 2019-10-02 20:05:05.941 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2955b959
[DEBUG] 2019-10-02 20:05:05.942 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5303978
[DEBUG] 2019-10-02 20:05:05.946 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@31ab9640
[DEBUG] 2019-10-02 20:05:05.946 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@31ab9640
[DEBUG] 2019-10-02 20:05:05.947 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@20576484
[DEBUG] 2019-10-02 20:05:05.951 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3baf6ab3
[DEBUG] 2019-10-02 20:05:05.952 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3baf6ab3
[DEBUG] 2019-10-02 20:05:05.955 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@2e36e649
[DEBUG] 2019-10-02 20:05:05.955 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2e36e649
[DEBUG] 2019-10-02 20:05:05.956 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2cfbc79d
[DEBUG] 2019-10-02 20:05:05.958 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6644bcfe
[DEBUG] 2019-10-02 20:05:05.961 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@16e9e136
[DEBUG] 2019-10-02 20:05:05.970 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@18ca197f
[DEBUG] 2019-10-02 20:05:05.970 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@18ca197f
[DEBUG] 2019-10-02 20:05:05.971 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@69d49d1
[DEBUG] 2019-10-02 20:05:05.971 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@298cd12c
[DEBUG] 2019-10-02 20:05:05.971 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@784a4d36
[DEBUG] 2019-10-02 20:05:05.971 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@13719aa2
[DEBUG] 2019-10-02 20:05:05.972 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7f4e9adc
[DEBUG] 2019-10-02 20:05:05.972 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@300421a8
[DEBUG] 2019-10-02 20:05:05.972 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a0df963
[DEBUG] 2019-10-02 20:05:05.972 [http-nio-8080-exec-9] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b6d40a
[DEBUG] 2019-10-02 20:05:06.049 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 20:05:06.050 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 20:05:06.052 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 20:05:06.053 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 20:05:06.054 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 20:05:06.057 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 20:05:06.058 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 20:05:06.061 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 20:05:06.064 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 20:05:06.066 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 20:05:06.067 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 20:05:06.068 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 20:05:06.068 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 20:05:06.070 [http-nio-8080-exec-9] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 20:05:06.084 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 20:05:06.085 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 20:05:06.085 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 20:05:06.406 [http-nio-8080-exec-9] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 20:05:07.305 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 20:05:07.305 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 20:05:07.306 [http-nio-8080-exec-9] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 20:05:07.412 [http-nio-8080-exec-9] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 20:05:07.470 [http-nio-8080-exec-9] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 20:05:07.525 [http-nio-8080-exec-9] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 20:05:07.628 [http-nio-8080-exec-9] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 20:05:07.659 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@49033e31] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@33a1c6cd]
[DEBUG] 2019-10-02 20:05:07.811 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:05:07.882 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 20:05:07.906 [http-nio-8080-exec-9] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 20:05:07.914 [http-nio-8080-exec-9] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 20:05:07.983 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:05:07.990 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 20:05:07.993 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 20:05:07.999 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 20:05:08.005 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2019-10-02 20:05:08.015 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 20:05:08.018 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:05:08.018 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 20:05:08.019 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 20:05:08.019 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 20:05:08.019 [http-nio-8080-exec-9] PropertyBinder - Building property email
[DEBUG] 2019-10-02 20:05:08.019 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:05:08.020 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 20:05:08.020 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 20:05:08.020 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 20:05:08.020 [http-nio-8080-exec-9] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 20:05:08.021 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:05:08.021 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 20:05:08.021 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 20:05:08.021 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 20:05:08.021 [http-nio-8080-exec-9] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 20:05:08.024 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 20:05:08.024 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:05:08.029 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:05:08.053 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:05:08.054 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:05:08.055 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 20:05:08.058 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 20:05:08.058 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 20:05:08.059 [http-nio-8080-exec-9] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 20:05:08.068 [http-nio-8080-exec-9] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 20:05:08.069 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:05:08.069 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 20:05:08.069 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 20:05:08.069 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 20:05:08.070 [http-nio-8080-exec-9] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 20:05:08.073 [http-nio-8080-exec-9] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 20:05:08.073 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 20:05:08.073 [http-nio-8080-exec-9] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 20:05:08.074 [http-nio-8080-exec-9] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 20:05:08.076 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:05:08.076 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 20:05:08.076 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 20:05:08.076 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 20:05:08.077 [http-nio-8080-exec-9] PropertyBinder - Building property id
[DEBUG] 2019-10-02 20:05:08.077 [http-nio-8080-exec-9] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 20:05:08.077 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:05:08.077 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 20:05:08.077 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 20:05:08.077 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 20:05:08.077 [http-nio-8080-exec-9] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 20:05:08.077 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:05:08.078 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 20:05:08.078 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 20:05:08.078 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 20:05:08.078 [http-nio-8080-exec-9] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 20:05:08.078 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:05:08.078 [http-nio-8080-exec-9] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 20:05:08.078 [http-nio-8080-exec-9] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 20:05:08.078 [http-nio-8080-exec-9] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 20:05:08.078 [http-nio-8080-exec-9] PropertyBinder - Building property name
[DEBUG] 2019-10-02 20:05:08.079 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 20:05:08.079 [http-nio-8080-exec-9] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:05:08.082 [http-nio-8080-exec-9] PropertyBinder - Building property user
[DEBUG] 2019-10-02 20:05:08.087 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 20:05:08.087 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 20:05:08.087 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 20:05:08.087 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 20:05:08.087 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 20:05:08.087 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 20:05:08.087 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 20:05:08.087 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 20:05:08.087 [http-nio-8080-exec-9] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 20:05:08.099 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 20:05:08.099 [http-nio-8080-exec-9] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 20:05:08.099 [http-nio-8080-exec-9] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 20:05:08.101 [http-nio-8080-exec-9] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 20:05:08.102 [http-nio-8080-exec-9] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 20:05:08.106 [http-nio-8080-exec-9] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 20:05:08.106 [http-nio-8080-exec-9] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 20:05:08.106 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:05:08.113 [http-nio-8080-exec-9] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:05:08.195 [http-nio-8080-exec-9] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 20:05:08.197 [http-nio-8080-exec-9] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 20:05:08.198 [http-nio-8080-exec-9] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 20:05:08.198 [http-nio-8080-exec-9] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 20:05:08.198 [http-nio-8080-exec-9] Settings - Statistics: disabled
[DEBUG] 2019-10-02 20:05:08.198 [http-nio-8080-exec-9] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 20:05:08.198 [http-nio-8080-exec-9] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 20:05:08.198 [http-nio-8080-exec-9] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 20:05:08.198 [http-nio-8080-exec-9] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 20:05:08.198 [http-nio-8080-exec-9] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 20:05:08.198 [http-nio-8080-exec-9] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 20:05:08.198 [http-nio-8080-exec-9] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 20:05:08.198 [http-nio-8080-exec-9] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 20:05:08.198 [http-nio-8080-exec-9] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 20:05:08.199 [http-nio-8080-exec-9] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 20:05:08.199 [http-nio-8080-exec-9] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 20:05:08.199 [http-nio-8080-exec-9] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 20:05:08.199 [http-nio-8080-exec-9] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 20:05:08.199 [http-nio-8080-exec-9] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 20:05:08.199 [http-nio-8080-exec-9] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 20:05:08.200 [http-nio-8080-exec-9] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 20:05:08.200 [http-nio-8080-exec-9] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 20:05:08.200 [http-nio-8080-exec-9] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 20:05:08.200 [http-nio-8080-exec-9] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 20:05:08.200 [http-nio-8080-exec-9] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 20:05:08.200 [http-nio-8080-exec-9] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 20:05:08.200 [http-nio-8080-exec-9] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 20:05:08.200 [http-nio-8080-exec-9] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 20:05:08.200 [http-nio-8080-exec-9] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 20:05:08.201 [http-nio-8080-exec-9] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 20:05:08.201 [http-nio-8080-exec-9] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 20:05:08.201 [http-nio-8080-exec-9] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 20:05:08.201 [http-nio-8080-exec-9] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 20:05:08.201 [http-nio-8080-exec-9] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 20:05:08.201 [http-nio-8080-exec-9] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 20:05:08.201 [http-nio-8080-exec-9] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 20:05:08.201 [http-nio-8080-exec-9] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 20:05:08.201 [http-nio-8080-exec-9] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 20:05:08.202 [http-nio-8080-exec-9] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 20:05:08.367 [http-nio-8080-exec-9] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 20:05:08.425 [http-nio-8080-exec-9] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 20:05:08.425 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.2+9-LTS, user.name=Alex, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, java.vendor.version=18.9, derby.system.home=C:\Users\Alex\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\Users\Alex\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.2, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=windows, java.class.path=C:\Users\Alex\tomcat\bin\bootstrap.jar;C:\Users\Alex\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\Users\Alex\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/Users/Alex/tomcat/lib","C:/Users/Alex/tomcat/lib/*.jar","C:\Users\Alex\tomcat/lib","C:\Users\Alex\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=10.0, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=http://bugreport.java.com/bugreport/, tomee.remote.support=true, catalina.home=C:\Users\Alex\tomcat, user.dir=C:\Users\Alex\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1e2879bf, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2019-10-02 20:05:08.486 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 20:05:08.486 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:05:08.509 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 20:05:08.509 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 20:05:08.515 [http-nio-8080-exec-9] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 20:05:08.516 [http-nio-8080-exec-9] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 20:05:08.516 [http-nio-8080-exec-9] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@49033e31] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@a937662]
[DEBUG] 2019-10-02 20:05:08.659 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 20:05:08.659 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:05:08.713 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 20:05:08.714 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:05:09.253 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 20:05:09.253 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 20:05:09.253 [http-nio-8080-exec-9] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 20:05:09.253 [http-nio-8080-exec-9] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 20:05:09.300 [http-nio-8080-exec-9] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 20:05:09.301 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 20:05:09.301 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 20:05:09.301 [http-nio-8080-exec-9] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 20:05:09.301 [http-nio-8080-exec-9] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 20:05:09.310 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:05:09.311 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 20:05:09.311 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 20:05:09.311 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 20:05:09.311 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 20:05:09.311 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 20:05:09.311 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 20:05:09.380 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a4c536f]
[DEBUG] 2019-10-02 20:05:09.383 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 20:05:09.383 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 20:05:09.383 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 20:05:09.383 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 20:05:09.397 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6080d508]
[DEBUG] 2019-10-02 20:05:09.404 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39c8be77]
[DEBUG] 2019-10-02 20:05:09.409 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 20:05:09.409 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 20:05:09.409 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 20:05:09.409 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 20:05:09.410 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 20:05:09.411 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 20:05:09.411 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 20:05:09.446 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 20:05:09.461 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 20:05:09.467 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 20:05:09.467 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62b55bfe]
[DEBUG] 2019-10-02 20:05:09.467 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 20:05:09.467 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 20:05:09.467 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 20:05:09.467 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 20:05:09.467 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50841a6a]
[DEBUG] 2019-10-02 20:05:09.468 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d62284a]
[DEBUG] 2019-10-02 20:05:09.468 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 20:05:09.468 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 20:05:09.468 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 20:05:09.468 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 20:05:09.468 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 20:05:09.468 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 20:05:09.469 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 20:05:09.469 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 20:05:09.470 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 20:05:09.470 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 20:05:09.508 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 20:05:09.509 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 20:05:09.509 [http-nio-8080-exec-9] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 20:05:09.509 [http-nio-8080-exec-9] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 20:05:09.509 [http-nio-8080-exec-9] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 20:05:09.509 [http-nio-8080-exec-9] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 20:05:09.509 [http-nio-8080-exec-9] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 20:05:09.510 [http-nio-8080-exec-9] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 20:05:09.510 [http-nio-8080-exec-9] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 20:05:09.510 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a20abb7]
[DEBUG] 2019-10-02 20:05:09.510 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 20:05:09.510 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 20:05:09.510 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 20:05:09.510 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 20:05:09.510 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41bb549b]
[DEBUG] 2019-10-02 20:05:09.512 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 20:05:09.512 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 20:05:09.512 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 20:05:09.512 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 20:05:09.512 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 20:05:09.512 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 20:05:09.512 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 20:05:09.513 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 20:05:09.513 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 20:05:09.513 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 20:05:09.514 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@591ef252]
[DEBUG] 2019-10-02 20:05:09.514 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 20:05:09.514 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 20:05:09.514 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 20:05:09.514 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 20:05:09.514 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6643fabe]
[DEBUG] 2019-10-02 20:05:09.514 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 20:05:09.514 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 20:05:09.514 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 20:05:09.514 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 20:05:09.514 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 20:05:09.514 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 20:05:09.515 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 20:05:09.515 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 20:05:09.515 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 20:05:09.516 [http-nio-8080-exec-9] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 20:05:09.516 [http-nio-8080-exec-9] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 20:05:09.516 [http-nio-8080-exec-9] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 20:05:09.529 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72a26a7]
[DEBUG] 2019-10-02 20:05:09.529 [http-nio-8080-exec-9] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f9abb0f]
[DEBUG] 2019-10-02 20:05:09.530 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 20:05:09.530 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 20:05:09.530 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 20:05:09.530 [http-nio-8080-exec-9] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 20:05:09.530 [http-nio-8080-exec-9] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 20:05:09.530 [http-nio-8080-exec-9] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 20:05:09.535 [http-nio-8080-exec-9] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 20:05:09.536 [http-nio-8080-exec-9] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 20:05:09.537 [http-nio-8080-exec-9] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 20:05:09.657 [http-nio-8080-exec-9] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 20:05:09.657 [http-nio-8080-exec-9] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 20:05:09.659 [http-nio-8080-exec-9] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 20:05:09.679 [http-nio-8080-exec-9] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 20:05:09.679 [http-nio-8080-exec-9] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 20:05:09.680 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 20:05:09.681 [http-nio-8080-exec-9] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 20:05:09.686 [http-nio-8080-exec-9] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ec985aa
[DEBUG] 2019-10-02 20:05:09.689 [http-nio-8080-exec-9] SessionFactoryRegistry - Registering SessionFactory: c1f87dff-ab43-490a-929c-700ebb497b92 (<unnamed>)
[DEBUG] 2019-10-02 20:05:09.689 [http-nio-8080-exec-9] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 20:05:09.897 [http-nio-8080-exec-9] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 20:05:09.950 [http-nio-8080-exec-9] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 20:05:10.009 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 20:05:10.014 [http-nio-8080-exec-9] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 20:05:10.042 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 20:05:10.045 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `directions` : value = {"list": ["Instruction 1", "Instruction 2"]}
[DEBUG] 2019-10-02 20:05:10.045 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:05:10.045 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `ingredients` : value = {"list":[{"ingrediant": "Ingrediant 1","amount": "16 oz"},{"ingrediant": "Ingrediant 2","amount": "5 lbs"}]}
[DEBUG] 2019-10-02 20:05:10.045 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:05:10.045 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 20:05:10.045 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:05:10.045 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 20:05:10.045 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:05:10.048 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 20:05:10.048 [http-nio-8080-exec-9] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 20:05:10.048 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 20:05:10.048 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:05:10.048 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 20:05:10.048 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:05:10.048 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 20:05:10.048 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:05:10.049 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 20:05:10.049 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:05:10.064 [http-nio-8080-exec-9] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 20:05:10.065 [http-nio-8080-exec-9] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:05:10.065 [http-nio-8080-exec-9] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 20:05:10.066 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 20:05:10.069 [http-nio-8080-exec-9] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 20:05:10.070 [http-nio-8080-exec-9] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 20:05:10.072 [http-nio-8080-exec-9] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 20:05:10.076 [http-nio-8080-exec-9] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 20:05:10.077 [http-nio-8080-exec-9] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 20:05:10.077 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 20:05:10.077 [http-nio-8080-exec-9] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 20:05:10.078 [http-nio-8080-exec-9] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 20:05:10.078 [http-nio-8080-exec-9] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 20:05:10.078 [http-nio-8080-exec-9] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 20:05:10.078 [http-nio-8080-exec-9] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-02 20:05:10.078 [http-nio-8080-exec-9] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-02 20:09:23.139 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-02 20:09:23.147 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-02 20:09:23.162 [http-nio-8080-exec-10] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-02 20:09:23.434 [http-nio-8080-exec-10] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-02 20:09:23.438 [http-nio-8080-exec-10] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-02 20:09:23.923 [http-nio-8080-exec-10] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-02 20:09:23.924 [http-nio-8080-exec-10] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-02 20:09:23.968 [http-nio-8080-exec-10] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-02 20:09:24.605 [http-nio-8080-exec-10] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-02 20:09:24.687 [http-nio-8080-exec-10] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-02 20:09:24.692 [http-nio-8080-exec-10] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-02 20:09:24.785 [http-nio-8080-exec-10] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-02 20:09:24.918 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1f9f8596
[DEBUG] 2019-10-02 20:09:24.918 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1f9f8596
[DEBUG] 2019-10-02 20:09:24.918 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1f9f8596
[DEBUG] 2019-10-02 20:09:24.921 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3c72b86e
[DEBUG] 2019-10-02 20:09:24.924 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4cf37278
[DEBUG] 2019-10-02 20:09:24.927 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@284e8dcc
[DEBUG] 2019-10-02 20:09:24.930 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@630a556
[DEBUG] 2019-10-02 20:09:24.930 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@630a556
[DEBUG] 2019-10-02 20:09:24.931 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@630a556
[DEBUG] 2019-10-02 20:09:24.935 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@35523b2d
[DEBUG] 2019-10-02 20:09:24.936 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@35523b2d
[DEBUG] 2019-10-02 20:09:24.936 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@35523b2d
[DEBUG] 2019-10-02 20:09:24.939 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5af57ef
[DEBUG] 2019-10-02 20:09:24.939 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5af57ef
[DEBUG] 2019-10-02 20:09:24.939 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5af57ef
[DEBUG] 2019-10-02 20:09:24.943 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@26846592
[DEBUG] 2019-10-02 20:09:24.943 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@26846592
[DEBUG] 2019-10-02 20:09:24.943 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@26846592
[DEBUG] 2019-10-02 20:09:24.947 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@59607fb7
[DEBUG] 2019-10-02 20:09:24.947 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@59607fb7
[DEBUG] 2019-10-02 20:09:24.947 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@59607fb7
[DEBUG] 2019-10-02 20:09:24.951 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@26c96072
[DEBUG] 2019-10-02 20:09:24.952 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@26c96072
[DEBUG] 2019-10-02 20:09:24.952 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@26c96072
[DEBUG] 2019-10-02 20:09:24.955 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1992292b
[DEBUG] 2019-10-02 20:09:24.955 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1992292b
[DEBUG] 2019-10-02 20:09:24.956 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1992292b
[DEBUG] 2019-10-02 20:09:24.959 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6a6a5a67
[DEBUG] 2019-10-02 20:09:24.960 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6a6a5a67
[DEBUG] 2019-10-02 20:09:24.962 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@45d4aa71
[DEBUG] 2019-10-02 20:09:24.963 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@45d4aa71
[DEBUG] 2019-10-02 20:09:24.967 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7f34b3fe
[DEBUG] 2019-10-02 20:09:24.968 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7f34b3fe
[DEBUG] 2019-10-02 20:09:24.970 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6b500022
[DEBUG] 2019-10-02 20:09:24.971 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@75bca1a3
[DEBUG] 2019-10-02 20:09:24.974 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@40a5938f
[DEBUG] 2019-10-02 20:09:24.974 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@40a5938f
[DEBUG] 2019-10-02 20:09:24.983 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@9e51618
[DEBUG] 2019-10-02 20:09:24.983 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@9e51618
[DEBUG] 2019-10-02 20:09:24.997 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3d6ac960
[DEBUG] 2019-10-02 20:09:24.997 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3d6ac960
[DEBUG] 2019-10-02 20:09:25.001 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@11e7a3f8
[DEBUG] 2019-10-02 20:09:25.002 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@11e7a3f8
[DEBUG] 2019-10-02 20:09:25.005 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5920f61b
[DEBUG] 2019-10-02 20:09:25.005 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5920f61b
[DEBUG] 2019-10-02 20:09:25.009 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6487508e
[DEBUG] 2019-10-02 20:09:25.009 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6487508e
[DEBUG] 2019-10-02 20:09:25.013 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@68dc7fc1
[DEBUG] 2019-10-02 20:09:25.014 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@68dc7fc1
[DEBUG] 2019-10-02 20:09:25.019 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@38f5c0f6
[DEBUG] 2019-10-02 20:09:25.019 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@38f5c0f6
[DEBUG] 2019-10-02 20:09:25.024 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@420dfb2a
[DEBUG] 2019-10-02 20:09:25.024 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@420dfb2a
[DEBUG] 2019-10-02 20:09:25.029 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5f747285
[DEBUG] 2019-10-02 20:09:25.029 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5f747285
[DEBUG] 2019-10-02 20:09:25.034 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@211f88e5
[DEBUG] 2019-10-02 20:09:25.034 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@211f88e5
[DEBUG] 2019-10-02 20:09:25.037 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2730d7ef
[DEBUG] 2019-10-02 20:09:25.037 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2730d7ef
[DEBUG] 2019-10-02 20:09:25.038 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2730d7ef
[DEBUG] 2019-10-02 20:09:25.045 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@187bbf50
[DEBUG] 2019-10-02 20:09:25.048 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@61dda3ab
[DEBUG] 2019-10-02 20:09:25.048 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@61dda3ab
[DEBUG] 2019-10-02 20:09:25.048 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@61dda3ab
[DEBUG] 2019-10-02 20:09:25.051 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@321982f7
[DEBUG] 2019-10-02 20:09:25.055 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@48d44cec
[DEBUG] 2019-10-02 20:09:25.055 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@48d44cec
[DEBUG] 2019-10-02 20:09:25.059 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2e16fb8d
[DEBUG] 2019-10-02 20:09:25.059 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2e16fb8d
[DEBUG] 2019-10-02 20:09:25.063 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4482232c
[DEBUG] 2019-10-02 20:09:25.063 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4482232c
[DEBUG] 2019-10-02 20:09:25.067 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@675df7e8
[DEBUG] 2019-10-02 20:09:25.067 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@675df7e8
[DEBUG] 2019-10-02 20:09:25.069 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@a3dafd2
[DEBUG] 2019-10-02 20:09:25.069 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@a3dafd2
[DEBUG] 2019-10-02 20:09:25.071 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@771da2b0
[DEBUG] 2019-10-02 20:09:25.073 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2b87a1a8
[DEBUG] 2019-10-02 20:09:25.073 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2b87a1a8
[DEBUG] 2019-10-02 20:09:25.073 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2b87a1a8
[DEBUG] 2019-10-02 20:09:25.076 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7510d87
[DEBUG] 2019-10-02 20:09:25.076 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7510d87
[DEBUG] 2019-10-02 20:09:25.076 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7510d87
[DEBUG] 2019-10-02 20:09:25.078 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@18ef869a
[DEBUG] 2019-10-02 20:09:25.079 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6c123190
[DEBUG] 2019-10-02 20:09:25.083 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2f115fd5
[DEBUG] 2019-10-02 20:09:25.083 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2f115fd5
[DEBUG] 2019-10-02 20:09:25.084 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2f115fd5
[DEBUG] 2019-10-02 20:09:25.086 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3be5b01f
[DEBUG] 2019-10-02 20:09:25.087 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3be5b01f
[DEBUG] 2019-10-02 20:09:25.087 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3be5b01f
[DEBUG] 2019-10-02 20:09:25.088 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6e7acaf5
[DEBUG] 2019-10-02 20:09:25.089 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@be73f5
[DEBUG] 2019-10-02 20:09:25.093 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2cdce98b
[DEBUG] 2019-10-02 20:09:25.093 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2cdce98b
[DEBUG] 2019-10-02 20:09:25.094 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@8098e55
[DEBUG] 2019-10-02 20:09:25.098 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@d060ebf
[DEBUG] 2019-10-02 20:09:25.099 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@d060ebf
[DEBUG] 2019-10-02 20:09:25.105 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@781a1976
[DEBUG] 2019-10-02 20:09:25.105 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@781a1976
[DEBUG] 2019-10-02 20:09:25.107 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@17274749
[DEBUG] 2019-10-02 20:09:25.109 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7947fce4
[DEBUG] 2019-10-02 20:09:25.112 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@44114642
[DEBUG] 2019-10-02 20:09:25.123 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@44e61ee5
[DEBUG] 2019-10-02 20:09:25.123 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@44e61ee5
[DEBUG] 2019-10-02 20:09:25.124 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7385389e
[DEBUG] 2019-10-02 20:09:25.124 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@59f77f98
[DEBUG] 2019-10-02 20:09:25.125 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@60c63140
[DEBUG] 2019-10-02 20:09:25.125 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@675cb7ee
[DEBUG] 2019-10-02 20:09:25.125 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3dc73253
[DEBUG] 2019-10-02 20:09:25.125 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5f2e91cc
[DEBUG] 2019-10-02 20:09:25.125 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@e33e758
[DEBUG] 2019-10-02 20:09:25.125 [http-nio-8080-exec-10] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@c52c2b7
[DEBUG] 2019-10-02 20:09:25.206 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-02 20:09:25.208 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-02 20:09:25.210 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 20:09:25.210 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-02 20:09:25.212 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-02 20:09:25.216 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-02 20:09:25.218 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-02 20:09:25.221 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 20:09:25.224 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-02 20:09:25.226 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-02 20:09:25.227 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-02 20:09:25.228 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-02 20:09:25.229 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-02 20:09:25.230 [http-nio-8080-exec-10] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-02 20:09:25.248 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC
[INFO ] 2019-10-02 20:09:25.249 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2019-10-02 20:09:25.249 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-02 20:09:25.561 [http-nio-8080-exec-10] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-02 20:09:26.489 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-02 20:09:26.489 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-02 20:09:26.490 [http-nio-8080-exec-10] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-02 20:09:26.658 [http-nio-8080-exec-10] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-02 20:09:26.762 [http-nio-8080-exec-10] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-02 20:09:26.867 [http-nio-8080-exec-10] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-02 20:09:27.029 [http-nio-8080-exec-10] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-02 20:09:27.049 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1ca6fc28] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@17dfbdf7]
[DEBUG] 2019-10-02 20:09:27.241 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:09:27.325 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 20:09:27.350 [http-nio-8080-exec-10] EntityBinder - Import with entity name User
[DEBUG] 2019-10-02 20:09:27.369 [http-nio-8080-exec-10] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-02 20:09:27.480 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:09:27.488 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 20:09:27.497 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-02 20:09:27.514 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 20:09:27.521 [http-nio-8080-exec-10] PropertyBinder - Building property id
[DEBUG] 2019-10-02 20:09:27.545 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 20:09:27.551 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:09:27.553 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-02 20:09:27.553 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-02 20:09:27.553 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-02 20:09:27.553 [http-nio-8080-exec-10] PropertyBinder - Building property email
[DEBUG] 2019-10-02 20:09:27.554 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:09:27.554 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-02 20:09:27.555 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-02 20:09:27.555 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-02 20:09:27.555 [http-nio-8080-exec-10] PropertyBinder - Building property firstName
[DEBUG] 2019-10-02 20:09:27.557 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:09:27.558 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-02 20:09:27.558 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-02 20:09:27.558 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-02 20:09:27.558 [http-nio-8080-exec-10] PropertyBinder - Building property lastName
[DEBUG] 2019-10-02 20:09:27.563 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 20:09:27.563 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:09:27.569 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:09:27.602 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:09:27.603 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:09:27.607 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 20:09:27.613 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 20:09:27.613 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-02 20:09:27.614 [http-nio-8080-exec-10] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 20:09:27.623 [http-nio-8080-exec-10] PropertyBinder - Building property recipes
[DEBUG] 2019-10-02 20:09:27.624 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:09:27.624 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-02 20:09:27.624 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-02 20:09:27.624 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-02 20:09:27.625 [http-nio-8080-exec-10] PropertyBinder - Building property userName
[DEBUG] 2019-10-02 20:09:27.630 [http-nio-8080-exec-10] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 20:09:27.631 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-02 20:09:27.631 [http-nio-8080-exec-10] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-02 20:09:27.631 [http-nio-8080-exec-10] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-02 20:09:27.633 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:09:27.634 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-02 20:09:27.634 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-02 20:09:27.634 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-02 20:09:27.634 [http-nio-8080-exec-10] PropertyBinder - Building property id
[DEBUG] 2019-10-02 20:09:27.634 [http-nio-8080-exec-10] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-02 20:09:27.634 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:09:27.634 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-02 20:09:27.635 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-02 20:09:27.635 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-02 20:09:27.635 [http-nio-8080-exec-10] PropertyBinder - Building property directions
[DEBUG] 2019-10-02 20:09:27.635 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:09:27.635 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-02 20:09:27.635 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-02 20:09:27.635 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-02 20:09:27.636 [http-nio-8080-exec-10] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-02 20:09:27.636 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:09:27.636 [http-nio-8080-exec-10] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-02 20:09:27.636 [http-nio-8080-exec-10] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-02 20:09:27.636 [http-nio-8080-exec-10] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-02 20:09:27.636 [http-nio-8080-exec-10] PropertyBinder - Building property name
[DEBUG] 2019-10-02 20:09:27.636 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-02 20:09:27.637 [http-nio-8080-exec-10] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-02 20:09:27.641 [http-nio-8080-exec-10] PropertyBinder - Building property user
[DEBUG] 2019-10-02 20:09:27.646 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 20:09:27.646 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-02 20:09:27.647 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-02 20:09:27.647 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-02 20:09:27.647 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-02 20:09:27.647 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-02 20:09:27.647 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-02 20:09:27.647 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-02 20:09:27.647 [http-nio-8080-exec-10] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-02 20:09:27.664 [http-nio-8080-exec-10] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-02 20:09:27.664 [http-nio-8080-exec-10] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-02 20:09:27.665 [http-nio-8080-exec-10] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 20:09:27.666 [http-nio-8080-exec-10] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-02 20:09:27.669 [http-nio-8080-exec-10] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-02 20:09:27.673 [http-nio-8080-exec-10] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-02 20:09:27.673 [http-nio-8080-exec-10] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 20:09:27.674 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:09:27.685 [http-nio-8080-exec-10] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:09:27.796 [http-nio-8080-exec-10] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-02 20:09:27.798 [http-nio-8080-exec-10] Settings - SessionFactory name : null
[DEBUG] 2019-10-02 20:09:27.798 [http-nio-8080-exec-10] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-02 20:09:27.798 [http-nio-8080-exec-10] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-02 20:09:27.798 [http-nio-8080-exec-10] Settings - Statistics: disabled
[DEBUG] 2019-10-02 20:09:27.798 [http-nio-8080-exec-10] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-02 20:09:27.798 [http-nio-8080-exec-10] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-02 20:09:27.798 [http-nio-8080-exec-10] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-02 20:09:27.798 [http-nio-8080-exec-10] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-02 20:09:27.798 [http-nio-8080-exec-10] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-02 20:09:27.798 [http-nio-8080-exec-10] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-02 20:09:27.799 [http-nio-8080-exec-10] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-02 20:09:27.799 [http-nio-8080-exec-10] Settings - Default null ordering: NONE
[DEBUG] 2019-10-02 20:09:27.799 [http-nio-8080-exec-10] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-02 20:09:27.799 [http-nio-8080-exec-10] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-02 20:09:27.799 [http-nio-8080-exec-10] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-02 20:09:27.799 [http-nio-8080-exec-10] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-02 20:09:27.799 [http-nio-8080-exec-10] Settings - Query language substitutions: {}
[DEBUG] 2019-10-02 20:09:27.799 [http-nio-8080-exec-10] Settings - Named query checking : enabled
[DEBUG] 2019-10-02 20:09:27.799 [http-nio-8080-exec-10] Settings - Second-level cache: disabled
[DEBUG] 2019-10-02 20:09:27.799 [http-nio-8080-exec-10] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-02 20:09:27.799 [http-nio-8080-exec-10] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-02 20:09:27.799 [http-nio-8080-exec-10] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-02 20:09:27.800 [http-nio-8080-exec-10] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-02 20:09:27.800 [http-nio-8080-exec-10] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-02 20:09:27.800 [http-nio-8080-exec-10] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-02 20:09:27.800 [http-nio-8080-exec-10] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-02 20:09:27.800 [http-nio-8080-exec-10] Settings - JDBC batch size: 15
[DEBUG] 2019-10-02 20:09:27.800 [http-nio-8080-exec-10] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-02 20:09:27.800 [http-nio-8080-exec-10] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-02 20:09:27.800 [http-nio-8080-exec-10] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-02 20:09:27.800 [http-nio-8080-exec-10] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-02 20:09:27.800 [http-nio-8080-exec-10] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-02 20:09:27.800 [http-nio-8080-exec-10] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-02 20:09:27.800 [http-nio-8080-exec-10] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-02 20:09:27.800 [http-nio-8080-exec-10] Settings - JPA compliance - query : 
[DEBUG] 2019-10-02 20:09:27.801 [http-nio-8080-exec-10] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-02 20:09:27.801 [http-nio-8080-exec-10] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-02 20:09:27.801 [http-nio-8080-exec-10] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-02 20:09:27.968 [http-nio-8080-exec-10] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-02 20:09:28.016 [http-nio-8080-exec-10] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-02 20:09:28.017 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiating session factory with properties: {awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, sun.arch.data.model=64, java.vendor.url=http://java.oracle.com/, catalina.useNaming=true, openejb.provider.default=org.apache.tomee, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=org.apache.catalina.startup.Bootstrap start, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.naming.factory.url.pkgs=org.apache.naming:org.apache.openejb.core.ivm.naming, openejb.embedder.source=ServerListener, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, ignore.endorsed.dirs=, file.separator=\, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, openejb.scan.webapp.container=true, com.sun.management.jmxremote.password.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\jmxremote.password, package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.naming.,org.apache.tomcat., openejb.deployments.classpath.filter.systemapps=false, jdk.tls.ephemeralDHKeySize=2048, user.script=, java.util.logging.config.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\conf\logging.properties, java.protocol.handler.pkgs=org.apache.catalina.webresources, connection.password=Nightwish563, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, openejb.scan.webapp.container.excludes=, java.runtime.version=11.0.2+9-LTS, user.name=Alex, org.apache.johnzon.max-string-length=8192, file.encoding=Cp1252, java.vendor.version=18.9, derby.system.home=C:\Users\Alex\tomcat\bin, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\Users\Alex\tomcat\temp, tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-taglib*.jar,log4j-web*.jar,log4javascript*.jar,slf4j-taglib*.jar, java.version=11.0.2, com.sun.management.jmxremote.port=1099, tomcat.util.scan.StandardJarScanFilter.jarsToSkip=annotations-api.jar,ant-junit*.jar,ant-launcher.jar,ant.jar,asm-*.jar,aspectj*.jar,bootstrap.jar,catalina-ant.jar,catalina-ha.jar,catalina-jmx-remote.jar,catalina-storeconfig.jar,catalina-tribes.jar,catalina-ws.jar,catalina.jar,cglib-*.jar,cobertura-*.jar,commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,commons-daemon.jar,commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,commons-math*.jar,commons-pool*.jar,dom4j-*.jar,easymock-*.jar,ecj-*.jar,el-api.jar,geronimo-spec-jaxrpc*.jar,h2*.jar,hamcrest-*.jar,hibernate*.jar,httpclient*.jar,icu4j-*.jar,jasper-el.jar,jasper.jar,jaspic-api.jar,jaxb-*.jar,jaxen-*.jar,jdom-*.jar,jetty-*.jar,jmx-tools.jar,jmx.jar,jsp-api.jar,jstl.jar,jta*.jar,junit-*.jar,junit.jar,log4j*.jar,mail*.jar,objenesis-*.jar,oraclepki.jar,oro-*.jar,servlet-api-*.jar,servlet-api.jar,slf4j*.jar,taglibs-standard-spec-*.jar,tagsoup-*.jar,tomcat-api.jar,tomcat-coyote.jar,tomcat-dbcp.jar,tomcat-i18n-*.jar,tomcat-jdbc.jar,tomcat-jni.jar,tomcat-juli-adapters.jar,tomcat-juli.jar,tomcat-util-scan.jar,tomcat-util.jar,tomcat-websocket.jar,tools.jar,websocket-api.jar,wsdl4j*.jar,xercesImpl.jar,xml-apis.jar,xmlParserAPIs-*.jar,xmlParserAPIs.jar,xom-*.jar, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, tomcat.built=May 4 2019 09:17:16 UTC, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, tomee.version=7.1.1, java.rmi.server.randomIDs=true, sun.io.unicode.encoding=UnicodeLittle, tomcat.util.buf.StringCache.byte.enabled=true, sun.desktop=windows, java.class.path=C:\Users\Alex\tomcat\bin\bootstrap.jar;C:\Users\Alex\tomcat\bin\tomcat-juli.jar, tomcat.version=8.5.41.0, java.vm.vendor=Oracle Corporation, openejb.home=C:\Users\Alex\tomcat, user.variant=, openejb.system.apps=true, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, openejb.base=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject, com.sun.management.jmxremote=, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, openejb.deployments.classpath=false, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat., openejb.loader=tomcat-system, server.loader=, com.sun.management.jmxremote.access.file=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject\jmxremote.access, hibernate.c3p0.max_size=20, java.naming.factory.initial=org.apache.naming.java.javaURLContextFactory, path.separator=;, org.apache.openejb.core.security.JaccProvider=org.apache.openejb.core.security.jacc.BasicJaccProvider, common.loader="C:/Users/Alex/tomcat/lib","C:/Users/Alex/tomcat/lib/*.jar","C:\Users\Alex\tomcat/lib","C:\Users\Alex\tomcat/lib/*.jar", hibernate.connection.username=****, os.version=10.0, openejb.version=7.1.1, org.apache.security.jacc.EJBMethodPermission.methodInterfaces=BusinessLocalHome,BusinessRemoteHome,BusinessRemote,BusinessLocal, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, openejb.scan.webapp.container.includes=.*(geronimo|mp-jwt|failsafe).*, java.vendor.url.bug=http://bugreport.java.com/bugreport/, tomee.remote.support=true, catalina.home=C:\Users\Alex\tomcat, user.dir=C:\Users\Alex\tomcat\bin, bval.in-container=true, os.arch=amd64, openjpa.Log=org.apache.openejb.openjpa.JULOpenJPALogFactory, hibernate.connection.password=****, tomee.serialization.class.blacklist=-, tomee.serialization.class.whitelist=, shared.loader=, catalina.base=C:\Users\Alex\.IntelliJIdea2019.2\system\tomcat\Unnamed_indeproject, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@37f5e060, noBanner=true, java.util.logging.manager=org.apache.juli.ClassLoaderLogManager, org.apache.webbeans.logger.WebBeansLoggerFacade=org.apache.openejb.cdi.logging.ContainerJULLoggerFactory, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.hostname=127.0.0.1, javax.security.jacc.PolicyConfigurationFactory.provider=org.apache.openejb.core.security.JaccProvider$Factory, connection.url=jdbc:mysql://localhost:3306/IndeProject?serverTimezone=UTC, java.class.version=55.0, authconfigprovider.factory=false}
[DEBUG] 2019-10-02 20:09:28.067 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 20:09:28.067 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:09:28.086 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 20:09:28.086 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 20:09:28.092 [http-nio-8080-exec-10] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-02 20:09:28.093 [http-nio-8080-exec-10] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-02 20:09:28.093 [http-nio-8080-exec-10] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1ca6fc28] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7ff2e2a]
[DEBUG] 2019-10-02 20:09:28.216 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 20:09:28.216 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:09:28.270 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-02 20:09:28.270 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:09:28.804 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 20:09:28.804 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 20:09:28.805 [http-nio-8080-exec-10] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-02 20:09:28.805 [http-nio-8080-exec-10] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 20:09:28.850 [http-nio-8080-exec-10] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 20:09:28.850 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-02 20:09:28.851 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-02 20:09:28.851 [http-nio-8080-exec-10] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-02 20:09:28.851 [http-nio-8080-exec-10] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-02 20:09:28.859 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-02 20:09:28.860 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-02 20:09:28.860 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-02 20:09:28.860 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 20:09:28.860 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-02 20:09:28.860 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-02 20:09:28.860 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 20:09:28.929 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1444456b]
[DEBUG] 2019-10-02 20:09:28.933 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 20:09:28.933 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 20:09:28.933 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 20:09:28.933 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 20:09:28.946 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77fc4406]
[DEBUG] 2019-10-02 20:09:28.952 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fb70179]
[DEBUG] 2019-10-02 20:09:28.956 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 20:09:28.956 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 20:09:28.956 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 20:09:28.956 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 20:09:28.956 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 20:09:28.957 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 20:09:28.957 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 20:09:29.010 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 20:09:29.026 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 20:09:29.034 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 20:09:29.034 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20a4b03f]
[DEBUG] 2019-10-02 20:09:29.035 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-02 20:09:29.035 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-02 20:09:29.035 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-02 20:09:29.035 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-02 20:09:29.035 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23e3c024]
[DEBUG] 2019-10-02 20:09:29.035 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55e2f447]
[DEBUG] 2019-10-02 20:09:29.036 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-02 20:09:29.036 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-02 20:09:29.036 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-02 20:09:29.036 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-02 20:09:29.036 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-02 20:09:29.036 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-02 20:09:29.036 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 20:09:29.036 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 20:09:29.037 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id5_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-02 20:09:29.037 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id5_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.user_id as user_id5_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 20:09:29.076 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 20:09:29.077 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id5_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.user_id as user_id5_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-02 20:09:29.077 [http-nio-8080-exec-10] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-02 20:09:29.077 [http-nio-8080-exec-10] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-02 20:09:29.077 [http-nio-8080-exec-10] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.user_id as user_id5_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-02 20:09:29.078 [http-nio-8080-exec-10] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-02 20:09:29.078 [http-nio-8080-exec-10] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, user_id=? where id=?
[DEBUG] 2019-10-02 20:09:29.078 [http-nio-8080-exec-10] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-02 20:09:29.078 [http-nio-8080-exec-10] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, user_id) values (?, ?, ?, ?)
[DEBUG] 2019-10-02 20:09:29.079 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16fb743a]
[DEBUG] 2019-10-02 20:09:29.079 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 20:09:29.079 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 20:09:29.079 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 20:09:29.079 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 20:09:29.079 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60ce3d5b]
[DEBUG] 2019-10-02 20:09:29.081 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 20:09:29.082 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 20:09:29.082 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 20:09:29.082 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 20:09:29.082 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 20:09:29.082 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 20:09:29.082 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 20:09:29.082 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 20:09:29.083 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 20:09:29.083 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 20:09:29.084 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12bd6a24]
[DEBUG] 2019-10-02 20:09:29.084 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 20:09:29.084 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 20:09:29.084 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 20:09:29.084 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 20:09:29.084 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d4bb13b]
[DEBUG] 2019-10-02 20:09:29.085 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-02 20:09:29.085 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-02 20:09:29.085 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-02 20:09:29.085 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-02 20:09:29.085 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-02 20:09:29.085 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-02 20:09:29.085 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 20:09:29.085 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 20:09:29.086 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-02 20:09:29.086 [http-nio-8080-exec-10] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 20:09:29.086 [http-nio-8080-exec-10] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 20:09:29.087 [http-nio-8080-exec-10] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-02 20:09:29.100 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@632a27f8]
[DEBUG] 2019-10-02 20:09:29.101 [http-nio-8080-exec-10] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cc33f14]
[DEBUG] 2019-10-02 20:09:29.101 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-02 20:09:29.101 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-02 20:09:29.101 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-02 20:09:29.101 [http-nio-8080-exec-10] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-02 20:09:29.101 [http-nio-8080-exec-10] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-02 20:09:29.101 [http-nio-8080-exec-10] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-02 20:09:29.106 [http-nio-8080-exec-10] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-02 20:09:29.107 [http-nio-8080-exec-10] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id5_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-02 20:09:29.108 [http-nio-8080-exec-10] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 20:09:29.209 [http-nio-8080-exec-10] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-02 20:09:29.209 [http-nio-8080-exec-10] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-02 20:09:29.211 [http-nio-8080-exec-10] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-02 20:09:29.230 [http-nio-8080-exec-10] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-02 20:09:29.230 [http-nio-8080-exec-10] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-02 20:09:29.231 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-02 20:09:29.231 [http-nio-8080-exec-10] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-02 20:09:29.235 [http-nio-8080-exec-10] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@53fe6e45
[DEBUG] 2019-10-02 20:09:29.238 [http-nio-8080-exec-10] SessionFactoryRegistry - Registering SessionFactory: e420c8b8-1131-4479-bcad-49a6c9f39881 (<unnamed>)
[DEBUG] 2019-10-02 20:09:29.238 [http-nio-8080-exec-10] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-02 20:09:29.426 [http-nio-8080-exec-10] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-02 20:09:29.477 [http-nio-8080-exec-10] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.user_id as user_id5_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-02 20:09:29.537 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 20:09:29.541 [http-nio-8080-exec-10] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-02 20:09:29.573 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 20:09:29.575 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `directions` : value = {"list": ["Instruction 1", "Instruction 2"]}
[DEBUG] 2019-10-02 20:09:29.576 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:09:29.576 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `ingredients` : value = {"list":[{"ingrediant": "Ingrediant 1","amount": "16 oz"},{"ingrediant": "Ingrediant 2","amount": "5 lbs"}]}
[DEBUG] 2019-10-02 20:09:29.576 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:09:29.576 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-02 20:09:29.576 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:09:29.576 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-02 20:09:29.576 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:09:29.578 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-02 20:09:29.578 [http-nio-8080-exec-10] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 20:09:29.579 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-02 20:09:29.579 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:09:29.579 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-02 20:09:29.579 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:09:29.579 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-02 20:09:29.580 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:09:29.580 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-02 20:09:29.580 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:09:29.600 [http-nio-8080-exec-10] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-02 20:09:29.600 [http-nio-8080-exec-10] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-02 20:09:29.600 [http-nio-8080-exec-10] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-02 20:09:29.602 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 20:09:29.607 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 20:09:29.607 [http-nio-8080-exec-10] SQL - select recipes0_.user_id as user_id5_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.user_id as user_id5_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-02 20:09:29.609 [http-nio-8080-exec-10] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 20:09:29.616 [http-nio-8080-exec-10] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-02 20:09:29.616 [http-nio-8080-exec-10] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 20:09:29.617 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 20:09:29.617 [http-nio-8080-exec-10] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-02 20:09:29.617 [http-nio-8080-exec-10] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-02 20:09:29.617 [http-nio-8080-exec-10] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-02 20:09:29.617 [http-nio-8080-exec-10] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-02 20:09:29.617 [http-nio-8080-exec-10] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-02 20:09:29.618 [http-nio-8080-exec-10] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
