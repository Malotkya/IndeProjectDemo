[DEBUG] 2019-10-08 15:44:03.647 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2019-10-08 15:44:03.663 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2019-10-08 15:44:03.663 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2019-10-08 15:44:03.798 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2019-10-08 15:44:03.808 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2019-10-08 15:44:04.104 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2019-10-08 15:44:04.112 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2019-10-08 15:44:04.114 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2019-10-08 15:44:04.525 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2019-10-08 15:44:04.556 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2019-10-08 15:44:04.556 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2019-10-08 15:44:04.578 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2019-10-08 15:44:04.625 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@554f0dfb
[DEBUG] 2019-10-08 15:44:04.625 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@554f0dfb
[DEBUG] 2019-10-08 15:44:04.625 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@554f0dfb
[DEBUG] 2019-10-08 15:44:04.625 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@761e788f
[DEBUG] 2019-10-08 15:44:04.625 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b3a7ef5
[DEBUG] 2019-10-08 15:44:04.625 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@5633ed82
[DEBUG] 2019-10-08 15:44:04.625 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@fab35b1
[DEBUG] 2019-10-08 15:44:04.625 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@fab35b1
[DEBUG] 2019-10-08 15:44:04.625 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@fab35b1
[DEBUG] 2019-10-08 15:44:04.625 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2f37f1f9
[DEBUG] 2019-10-08 15:44:04.625 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2f37f1f9
[DEBUG] 2019-10-08 15:44:04.625 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2f37f1f9
[DEBUG] 2019-10-08 15:44:04.625 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@48d293ee
[DEBUG] 2019-10-08 15:44:04.625 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@48d293ee
[DEBUG] 2019-10-08 15:44:04.625 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@48d293ee
[DEBUG] 2019-10-08 15:44:04.625 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7add323c
[DEBUG] 2019-10-08 15:44:04.625 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7add323c
[DEBUG] 2019-10-08 15:44:04.625 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7add323c
[DEBUG] 2019-10-08 15:44:04.641 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@76563d26
[DEBUG] 2019-10-08 15:44:04.641 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@76563d26
[DEBUG] 2019-10-08 15:44:04.641 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@76563d26
[DEBUG] 2019-10-08 15:44:04.641 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@22a736d7
[DEBUG] 2019-10-08 15:44:04.641 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@22a736d7
[DEBUG] 2019-10-08 15:44:04.641 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@22a736d7
[DEBUG] 2019-10-08 15:44:04.641 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@66273da0
[DEBUG] 2019-10-08 15:44:04.641 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@66273da0
[DEBUG] 2019-10-08 15:44:04.641 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@66273da0
[DEBUG] 2019-10-08 15:44:04.641 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7b6860f9
[DEBUG] 2019-10-08 15:44:04.641 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7b6860f9
[DEBUG] 2019-10-08 15:44:04.641 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6069dd38
[DEBUG] 2019-10-08 15:44:04.641 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6069dd38
[DEBUG] 2019-10-08 15:44:04.641 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@26dc9bd5
[DEBUG] 2019-10-08 15:44:04.641 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@26dc9bd5
[DEBUG] 2019-10-08 15:44:04.641 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6403e24c
[DEBUG] 2019-10-08 15:44:04.641 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@d109c4f
[DEBUG] 2019-10-08 15:44:04.656 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@63c12e52
[DEBUG] 2019-10-08 15:44:04.656 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@63c12e52
[DEBUG] 2019-10-08 15:44:04.656 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@255eaa6b
[DEBUG] 2019-10-08 15:44:04.656 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@255eaa6b
[DEBUG] 2019-10-08 15:44:04.663 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2f1d0bbc
[DEBUG] 2019-10-08 15:44:04.663 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2f1d0bbc
[DEBUG] 2019-10-08 15:44:04.679 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@59dc36d4
[DEBUG] 2019-10-08 15:44:04.679 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@59dc36d4
[DEBUG] 2019-10-08 15:44:04.679 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3ee0b4f7
[DEBUG] 2019-10-08 15:44:04.679 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3ee0b4f7
[DEBUG] 2019-10-08 15:44:04.679 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7fdab70c
[DEBUG] 2019-10-08 15:44:04.679 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7fdab70c
[DEBUG] 2019-10-08 15:44:04.679 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e519ad3
[DEBUG] 2019-10-08 15:44:04.679 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e519ad3
[DEBUG] 2019-10-08 15:44:04.679 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@52d97ab6
[DEBUG] 2019-10-08 15:44:04.679 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@52d97ab6
[DEBUG] 2019-10-08 15:44:04.694 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7fe82967
[DEBUG] 2019-10-08 15:44:04.694 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7fe82967
[DEBUG] 2019-10-08 15:44:04.694 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2e66bc32
[DEBUG] 2019-10-08 15:44:04.694 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2e66bc32
[DEBUG] 2019-10-08 15:44:04.694 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5624657a
[DEBUG] 2019-10-08 15:44:04.694 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5624657a
[DEBUG] 2019-10-08 15:44:04.694 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@121bb45b
[DEBUG] 2019-10-08 15:44:04.694 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@121bb45b
[DEBUG] 2019-10-08 15:44:04.694 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@121bb45b
[DEBUG] 2019-10-08 15:44:04.694 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5a6d30e2
[DEBUG] 2019-10-08 15:44:04.694 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@56da7487
[DEBUG] 2019-10-08 15:44:04.710 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56da7487
[DEBUG] 2019-10-08 15:44:04.710 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56da7487
[DEBUG] 2019-10-08 15:44:04.710 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2f2bff16
[DEBUG] 2019-10-08 15:44:04.710 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4a163575
[DEBUG] 2019-10-08 15:44:04.710 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4a163575
[DEBUG] 2019-10-08 15:44:04.710 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@118ffcfd
[DEBUG] 2019-10-08 15:44:04.710 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@118ffcfd
[DEBUG] 2019-10-08 15:44:04.710 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@434514d8
[DEBUG] 2019-10-08 15:44:04.710 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@434514d8
[DEBUG] 2019-10-08 15:44:04.710 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@37df14d1
[DEBUG] 2019-10-08 15:44:04.710 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@37df14d1
[DEBUG] 2019-10-08 15:44:04.710 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@42b84286
[DEBUG] 2019-10-08 15:44:04.710 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@42b84286
[DEBUG] 2019-10-08 15:44:04.710 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@53b7ce6
[DEBUG] 2019-10-08 15:44:04.710 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@43af351a
[DEBUG] 2019-10-08 15:44:04.710 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@43af351a
[DEBUG] 2019-10-08 15:44:04.710 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@43af351a
[DEBUG] 2019-10-08 15:44:04.710 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@642f9a77
[DEBUG] 2019-10-08 15:44:04.710 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@642f9a77
[DEBUG] 2019-10-08 15:44:04.710 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@642f9a77
[DEBUG] 2019-10-08 15:44:04.725 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@119aa36
[DEBUG] 2019-10-08 15:44:04.725 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6caf7803
[DEBUG] 2019-10-08 15:44:04.725 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6573d2f7
[DEBUG] 2019-10-08 15:44:04.725 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6573d2f7
[DEBUG] 2019-10-08 15:44:04.725 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6573d2f7
[DEBUG] 2019-10-08 15:44:04.725 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@317a118b
[DEBUG] 2019-10-08 15:44:04.725 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@317a118b
[DEBUG] 2019-10-08 15:44:04.725 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@317a118b
[DEBUG] 2019-10-08 15:44:04.725 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1e253c9d
[DEBUG] 2019-10-08 15:44:04.725 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@44f24a20
[DEBUG] 2019-10-08 15:44:04.725 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@39a87e72
[DEBUG] 2019-10-08 15:44:04.725 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@39a87e72
[DEBUG] 2019-10-08 15:44:04.725 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3f0d6038
[DEBUG] 2019-10-08 15:44:04.725 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1cc680e
[DEBUG] 2019-10-08 15:44:04.725 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1cc680e
[DEBUG] 2019-10-08 15:44:04.725 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@68b9834c
[DEBUG] 2019-10-08 15:44:04.725 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@68b9834c
[DEBUG] 2019-10-08 15:44:04.725 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@44cffc25
[DEBUG] 2019-10-08 15:44:04.725 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3bd2af5b
[DEBUG] 2019-10-08 15:44:04.725 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@38ed139b
[DEBUG] 2019-10-08 15:44:04.741 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@423b2b62
[DEBUG] 2019-10-08 15:44:04.741 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@423b2b62
[DEBUG] 2019-10-08 15:44:04.741 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6f911326
[DEBUG] 2019-10-08 15:44:04.741 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@f1d0004
[DEBUG] 2019-10-08 15:44:04.741 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6e4f263e
[DEBUG] 2019-10-08 15:44:04.741 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@48b4a043
[DEBUG] 2019-10-08 15:44:04.741 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2f5b8250
[DEBUG] 2019-10-08 15:44:04.741 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4821aa9f
[DEBUG] 2019-10-08 15:44:04.741 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f481b73
[DEBUG] 2019-10-08 15:44:04.741 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@32130e61
[DEBUG] 2019-10-08 15:44:04.794 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2019-10-08 15:44:04.794 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2019-10-08 15:44:04.794 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-08 15:44:04.794 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2019-10-08 15:44:04.794 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2019-10-08 15:44:04.794 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2019-10-08 15:44:04.794 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2019-10-08 15:44:04.810 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-08 15:44:04.810 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2019-10-08 15:44:04.810 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2019-10-08 15:44:04.810 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2019-10-08 15:44:04.810 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2019-10-08 15:44:04.810 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2019-10-08 15:44:04.810 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2019-10-08 15:44:04.810 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/IndeTest?serverTimezone=UTC
[INFO ] 2019-10-08 15:44:04.810 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=indeApp}
[INFO ] 2019-10-08 15:44:04.810 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2019-10-08 15:44:05.187 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2019-10-08 15:44:05.448 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.17
      major : 8
      minor : 0
[DEBUG] 2019-10-08 15:44:05.448 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2019-10-08 15:44:05.448 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2019-10-08 15:44:05.499 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2019-10-08 15:44:05.539 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2019-10-08 15:44:05.599 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2019-10-08 15:44:05.682 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2019-10-08 15:44:05.684 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b4b96a4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2dd8ff1d]
[DEBUG] 2019-10-08 15:44:05.742 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.User
[DEBUG] 2019-10-08 15:44:05.783 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-08 15:44:05.785 [main] EntityBinder - Import with entity name User
[DEBUG] 2019-10-08 15:44:05.793 [main] EntityBinder - Bind entity com.alexmalotky.entity.User on table users
[DEBUG] 2019-10-08 15:44:05.823 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.823 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-08 15:44:05.823 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:id]
[DEBUG] 2019-10-08 15:44:05.823 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-08 15:44:05.838 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-08 15:44:05.838 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-08 15:44:05.838 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.838 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2019-10-08 15:44:05.838 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:email]
[DEBUG] 2019-10-08 15:44:05.838 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2019-10-08 15:44:05.838 [main] PropertyBinder - Building property email
[DEBUG] 2019-10-08 15:44:05.838 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.838 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2019-10-08 15:44:05.838 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:firstName]
[DEBUG] 2019-10-08 15:44:05.838 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2019-10-08 15:44:05.838 [main] PropertyBinder - Building property firstName
[DEBUG] 2019-10-08 15:44:05.838 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.854 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2019-10-08 15:44:05.854 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:lastName]
[DEBUG] 2019-10-08 15:44:05.854 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2019-10-08 15:44:05.854 [main] PropertyBinder - Building property lastName
[DEBUG] 2019-10-08 15:44:05.854 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-08 15:44:05.854 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.854 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.870 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.870 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=recipes_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.870 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='recipes_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-08 15:44:05.870 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-08 15:44:05.870 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2019-10-08 15:44:05.870 [main] CollectionBinder - Collection role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:05.885 [main] PropertyBinder - Building property recipes
[DEBUG] 2019-10-08 15:44:05.885 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.885 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2019-10-08 15:44:05.885 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.User:userName]
[DEBUG] 2019-10-08 15:44:05.885 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2019-10-08 15:44:05.885 [main] PropertyBinder - Building property userName
[DEBUG] 2019-10-08 15:44:05.885 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-08 15:44:05.885 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-08 15:44:05.885 [main] EntityBinder - Import with entity name Recipe
[DEBUG] 2019-10-08 15:44:05.885 [main] EntityBinder - Bind entity com.alexmalotky.entity.Recipe on table recipes
[DEBUG] 2019-10-08 15:44:05.885 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.885 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-08 15:44:05.885 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:id]
[DEBUG] 2019-10-08 15:44:05.885 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-08 15:44:05.885 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-08 15:44:05.885 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-08 15:44:05.885 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=directions, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.885 [main] PropertyBinder - MetadataSourceProcessor property directions with lazy=false
[DEBUG] 2019-10-08 15:44:05.885 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:directions]
[DEBUG] 2019-10-08 15:44:05.885 [main] SimpleValueBinder - building SimpleValue for directions
[DEBUG] 2019-10-08 15:44:05.901 [main] PropertyBinder - Building property directions
[DEBUG] 2019-10-08 15:44:05.901 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=ingredients, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.901 [main] PropertyBinder - MetadataSourceProcessor property ingredients with lazy=false
[DEBUG] 2019-10-08 15:44:05.901 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:ingredients]
[DEBUG] 2019-10-08 15:44:05.901 [main] SimpleValueBinder - building SimpleValue for ingredients
[DEBUG] 2019-10-08 15:44:05.901 [main] PropertyBinder - Building property ingredients
[DEBUG] 2019-10-08 15:44:05.901 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.901 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-08 15:44:05.901 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:name]
[DEBUG] 2019-10-08 15:44:05.901 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-08 15:44:05.901 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-08 15:44:05.901 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=public, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.901 [main] PropertyBinder - MetadataSourceProcessor property publicView with lazy=false
[DEBUG] 2019-10-08 15:44:05.901 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Recipe:publicView]
[DEBUG] 2019-10-08 15:44:05.901 [main] SimpleValueBinder - building SimpleValue for publicView
[DEBUG] 2019-10-08 15:44:05.901 [main] PropertyBinder - Building property publicView
[DEBUG] 2019-10-08 15:44:05.901 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2019-10-08 15:44:05.901 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(recipes), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.901 [main] PropertyBinder - Building property user
[DEBUG] 2019-10-08 15:44:05.901 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Volume
[DEBUG] 2019-10-08 15:44:05.901 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-08 15:44:05.901 [main] EntityBinder - Import with entity name Volume
[DEBUG] 2019-10-08 15:44:05.901 [main] EntityBinder - Bind entity com.alexmalotky.entity.Volume on table Volume
[DEBUG] 2019-10-08 15:44:05.901 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Volume), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.901 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-08 15:44:05.901 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Volume:id]
[DEBUG] 2019-10-08 15:44:05.901 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-08 15:44:05.901 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-08 15:44:05.901 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-08 15:44:05.901 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Volume), mappingColumn=code, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.901 [main] PropertyBinder - MetadataSourceProcessor property code with lazy=false
[DEBUG] 2019-10-08 15:44:05.901 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Volume:code]
[DEBUG] 2019-10-08 15:44:05.901 [main] SimpleValueBinder - building SimpleValue for code
[DEBUG] 2019-10-08 15:44:05.901 [main] PropertyBinder - Building property code
[DEBUG] 2019-10-08 15:44:05.901 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Volume), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.901 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-08 15:44:05.901 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Volume:name]
[DEBUG] 2019-10-08 15:44:05.901 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-08 15:44:05.901 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-08 15:44:05.901 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Volume), mappingColumn=value, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.901 [main] PropertyBinder - MetadataSourceProcessor property value with lazy=false
[DEBUG] 2019-10-08 15:44:05.901 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Volume:value]
[DEBUG] 2019-10-08 15:44:05.901 [main] SimpleValueBinder - building SimpleValue for value
[DEBUG] 2019-10-08 15:44:05.901 [main] PropertyBinder - Building property value
[DEBUG] 2019-10-08 15:44:05.901 [main] AnnotationBinder - Binding entity from annotated class: com.alexmalotky.entity.Weight
[DEBUG] 2019-10-08 15:44:05.901 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2019-10-08 15:44:05.901 [main] EntityBinder - Import with entity name Weight
[DEBUG] 2019-10-08 15:44:05.901 [main] EntityBinder - Bind entity com.alexmalotky.entity.Weight on table Weight
[DEBUG] 2019-10-08 15:44:05.901 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Weight), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.901 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2019-10-08 15:44:05.901 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Weight:id]
[DEBUG] 2019-10-08 15:44:05.901 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2019-10-08 15:44:05.901 [main] PropertyBinder - Building property id
[DEBUG] 2019-10-08 15:44:05.917 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2019-10-08 15:44:05.917 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Weight), mappingColumn=code, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.917 [main] PropertyBinder - MetadataSourceProcessor property code with lazy=false
[DEBUG] 2019-10-08 15:44:05.917 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Weight:code]
[DEBUG] 2019-10-08 15:44:05.917 [main] SimpleValueBinder - building SimpleValue for code
[DEBUG] 2019-10-08 15:44:05.917 [main] PropertyBinder - Building property code
[DEBUG] 2019-10-08 15:44:05.917 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Weight), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.917 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2019-10-08 15:44:05.917 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Weight:name]
[DEBUG] 2019-10-08 15:44:05.917 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2019-10-08 15:44:05.917 [main] PropertyBinder - Building property name
[DEBUG] 2019-10-08 15:44:05.917 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Weight), mappingColumn=value, insertable=true, updatable=true, unique=false}
[DEBUG] 2019-10-08 15:44:05.917 [main] PropertyBinder - MetadataSourceProcessor property value with lazy=false
[DEBUG] 2019-10-08 15:44:05.917 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.alexmalotky.entity.Weight:value]
[DEBUG] 2019-10-08 15:44:05.917 [main] SimpleValueBinder - building SimpleValue for value
[DEBUG] 2019-10-08 15:44:05.917 [main] PropertyBinder - Building property value
[DEBUG] 2019-10-08 15:44:05.923 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-08 15:44:05.923 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2019-10-08 15:44:05.923 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2019-10-08 15:44:05.923 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2019-10-08 15:44:05.923 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2019-10-08 15:44:05.923 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-08 15:44:05.923 [main] SimpleValueBinder - Starting fillSimpleValue for directions
[DEBUG] 2019-10-08 15:44:05.923 [main] SimpleValueBinder - Starting fillSimpleValue for ingredients
[DEBUG] 2019-10-08 15:44:05.923 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-08 15:44:05.923 [main] SimpleValueBinder - Starting fillSimpleValue for publicView
[DEBUG] 2019-10-08 15:44:05.923 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-08 15:44:05.923 [main] SimpleValueBinder - Starting fillSimpleValue for code
[DEBUG] 2019-10-08 15:44:05.923 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-08 15:44:05.923 [main] SimpleValueBinder - Starting fillSimpleValue for value
[DEBUG] 2019-10-08 15:44:05.923 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2019-10-08 15:44:05.923 [main] SimpleValueBinder - Starting fillSimpleValue for code
[DEBUG] 2019-10-08 15:44:05.923 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2019-10-08 15:44:05.923 [main] SimpleValueBinder - Starting fillSimpleValue for value
[DEBUG] 2019-10-08 15:44:05.923 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2019-10-08 15:44:05.923 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [recipes]
[DEBUG] 2019-10-08 15:44:05.923 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [volume]
[DEBUG] 2019-10-08 15:44:05.923 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [weight]
[DEBUG] 2019-10-08 15:44:05.923 [main] CollectionSecondPass - Second pass for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:05.923 [main] CollectionBinder - Binding a OneToMany: com.alexmalotky.entity.User.recipes through a foreign key
[DEBUG] 2019-10-08 15:44:05.923 [main] CollectionBinder - Mapping collection: com.alexmalotky.entity.User.recipes -> recipes
[DEBUG] 2019-10-08 15:44:05.939 [main] TableBinder - Retrieving property com.alexmalotky.entity.Recipe.user
[DEBUG] 2019-10-08 15:44:05.939 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-08 15:44:05.939 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-08 15:44:05.939 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.alexmalotky.entity.User
[DEBUG] 2019-10-08 15:44:06.001 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - SessionFactory name : null
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Statistics: disabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Default entity-mode: pojo
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Default batch fetch size: -1
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Default null ordering: NONE
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Query language substitutions: {}
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Named query checking : enabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Second-level cache: disabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Second-level query cache: disabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Second-level query cache factory: null
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - JDBC batch size: 15
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Wrap result sets: disabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - JPA compliance - query : 
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - JPA compliance - lists : 
[DEBUG] 2019-10-08 15:44:06.001 [main] Settings - JPA compliance - transactions : 
[INFO ] 2019-10-08 15:44:06.139 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2019-10-08 15:44:06.170 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2019-10-08 15:44:06.170 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=11, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-11.0.2\bin, sun.java.command=C:\Users\Alex\IdeaProjects\indeproject\target\surefire\surefirebooter15083314296337372228.jar C:\Users\Alex\IdeaProjects\indeproject\target\surefire\surefire11453045704107913360tmp C:\Users\Alex\IdeaProjects\indeproject\target\surefire\surefire_016614566657616107829tmp, jdk.debug=release, surefire.test.class.path=C:\Users\Alex\IdeaProjects\indeproject\target\test-classes;C:\Users\Alex\IdeaProjects\indeproject\target\classes;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\Alex\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-commons\1.0.0\junit-platform-commons-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\Alex\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\Alex\.m2\repository\org\opentest4j\opentest4j\1.0.0\opentest4j-1.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\Alex\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.0.0\junit-jupiter-api-5.0.0.jar;C:\Users\Alex\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\Alex\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Alex\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\Alex\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\Alex\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\Alex\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\Alex\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-core\5.4.4.Final\hibernate-core-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Alex\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Alex\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Alex\.m2\repository\net\bytebuddy\byte-buddy\1.9.11\byte-buddy-1.9.11.jar;C:\Users\Alex\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Alex\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Alex\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Alex\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Alex\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Alex\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Alex\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Alex\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Alex\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Alex\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Alex\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Alex\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Alex\.m2\repository\org\hibernate\hibernate-c3p0\5.4.4.Final\hibernate-c3p0-5.4.4.Final.jar;C:\Users\Alex\.m2\repository\com\mchange\c3p0\0.9.5.3\c3p0-0.9.5.3.jar;C:\Users\Alex\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar;, sun.cpu.endian=little, user.home=C:\Users\Alex, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-01-15, java.home=C:\Program Files\Java\jdk-11.0.2, idea.version2019.2.1=true, file.separator=\, basedir=C:\Users\Alex\IdeaProjects\indeproject, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, surefire.real.class.path=C:\Users\Alex\IdeaProjects\indeproject\target\surefire\surefirebooter15083314296337372228.jar, user.script=, connection.password=ePBu2q9g, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.2+9-LTS, user.name=Alex, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/IndeTest?serverTimezone=UTC, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, localRepository=C:\Users\Alex\.m2\repository, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=http://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Alex\AppData\Local\Temp\, java.version=11.0.2, user.dir=C:\Users\Alex\IdeaProjects\indeproject, os.arch=amd64, connection.username=indeApp, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@481b2f10, java.library.path=C:\Program Files\Java\jdk-11.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\Git\cmd;C:\Users\Alex\AppData\Local\Microsoft\WindowsApps;C:\Users\Alex\AppData\Local\atom\bin;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.2+9-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/IndeTest?serverTimezone=UTC, java.class.version=55.0}
[DEBUG] 2019-10-08 15:44:06.202 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2019-10-08 15:44:06.202 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2019-10-08 15:44:06.202 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2019-10-08 15:44:06.202 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b4b96a4] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@e5c2463]
[DEBUG] 2019-10-08 15:44:06.302 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Weight] is safe
[DEBUG] 2019-10-08 15:44:06.302 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Weight
[DEBUG] 2019-10-08 15:44:06.340 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Weight] is safe
[DEBUG] 2019-10-08 15:44:06.340 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Weight
[DEBUG] 2019-10-08 15:44:06.730 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-08 15:44:06.730 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-08 15:44:06.732 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.User] is safe
[DEBUG] 2019-10-08 15:44:06.732 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.User
[DEBUG] 2019-10-08 15:44:06.792 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-08 15:44:06.792 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-08 15:44:06.792 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Recipe] is safe
[DEBUG] 2019-10-08 15:44:06.792 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-08 15:44:06.832 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Volume] is safe
[DEBUG] 2019-10-08 15:44:06.840 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Volume
[DEBUG] 2019-10-08 15:44:06.840 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.alexmalotky.entity.Volume] is safe
[DEBUG] 2019-10-08 15:44:06.840 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.alexmalotky.entity.Volume
[DEBUG] 2019-10-08 15:44:06.897 [main] AbstractCollectionPersister - Static SQL for collection: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:06.897 [main] AbstractCollectionPersister -  Row insert: update recipes set user_id=? where id=?
[DEBUG] 2019-10-08 15:44:06.897 [main] AbstractCollectionPersister -  Row update: update recipes set  where id=?
[DEBUG] 2019-10-08 15:44:06.897 [main] AbstractCollectionPersister -  Row delete: update recipes set user_id=null where user_id=? and id=?
[DEBUG] 2019-10-08 15:44:06.897 [main] AbstractCollectionPersister -  One-shot delete: update recipes set user_id=null where user_id=?
[DEBUG] 2019-10-08 15:44:06.905 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Weight
[DEBUG] 2019-10-08 15:44:06.905 [main] AbstractEntityPersister -  Version select: select id from Weight where id =?
[DEBUG] 2019-10-08 15:44:06.905 [main] AbstractEntityPersister -  Snapshot select: select weight_.id, weight_.code as code2_3_, weight_.name as name3_3_, weight_.value as value4_3_ from Weight weight_ where weight_.id=?
[DEBUG] 2019-10-08 15:44:06.907 [main] AbstractEntityPersister -  Insert 0: insert into Weight (code, name, value, id) values (?, ?, ?, ?)
[DEBUG] 2019-10-08 15:44:06.907 [main] AbstractEntityPersister -  Update 0: update Weight set code=?, name=?, value=? where id=?
[DEBUG] 2019-10-08 15:44:06.907 [main] AbstractEntityPersister -  Delete 0: delete from Weight where id=?
[DEBUG] 2019-10-08 15:44:06.907 [main] AbstractEntityPersister -  Identity insert: insert into Weight (code, name, value) values (?, ?, ?)
[DEBUG] 2019-10-08 15:44:06.937 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d66ae3a]
[DEBUG] 2019-10-08 15:44:06.945 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2019-10-08 15:44:06.945 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-08 15:44:06.947 [main] MetamodelGraphWalker - Visiting attribute path : value
[DEBUG] 2019-10-08 15:44:06.947 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-08 15:44:06.965 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-08 15:44:06.965 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Weight)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Weight, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Weight)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Weight)
          - SQL table alias mapping - weight0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

[DEBUG] 2019-10-08 15:44:06.975 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Weight [NONE]: select weight0_.id as id1_3_0_, weight0_.code as code2_3_0_, weight0_.name as name3_3_0_, weight0_.value as value4_3_0_ from Weight weight0_ where weight0_.id=?
[DEBUG] 2019-10-08 15:44:06.975 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55c50f52]
[DEBUG] 2019-10-08 15:44:06.975 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2019-10-08 15:44:06.975 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-08 15:44:06.975 [main] MetamodelGraphWalker - Visiting attribute path : value
[DEBUG] 2019-10-08 15:44:06.975 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-08 15:44:06.977 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-08 15:44:06.977 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Weight)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Weight, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Weight)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Weight)
          - SQL table alias mapping - weight0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

[DEBUG] 2019-10-08 15:44:06.977 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Weight [READ]: select weight0_.id as id1_3_0_, weight0_.code as code2_3_0_, weight0_.name as name3_3_0_, weight0_.value as value4_3_0_ from Weight weight0_ where weight0_.id=?
[DEBUG] 2019-10-08 15:44:06.987 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Weight: select weight0_.id as id1_3_0_, weight0_.code as code2_3_0_, weight0_.name as name3_3_0_, weight0_.value as value4_3_0_ from Weight weight0_ where weight0_.id=?
[DEBUG] 2019-10-08 15:44:06.987 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Weight: select weight0_.id as id1_3_0_, weight0_.code as code2_3_0_, weight0_.name as name3_3_0_, weight0_.value as value4_3_0_ from Weight weight0_ where weight0_.id=?
[DEBUG] 2019-10-08 15:44:06.987 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.User
[DEBUG] 2019-10-08 15:44:06.987 [main] AbstractEntityPersister -  Version select: select id from users where id =?
[DEBUG] 2019-10-08 15:44:06.987 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_ from users user_ where user_.id=?
[DEBUG] 2019-10-08 15:44:06.987 [main] AbstractEntityPersister -  Insert 0: insert into users (email, first_name, last_name, user_name, id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-08 15:44:06.987 [main] AbstractEntityPersister -  Update 0: update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-08 15:44:06.987 [main] AbstractEntityPersister -  Delete 0: delete from users where id=?
[DEBUG] 2019-10-08 15:44:06.995 [main] AbstractEntityPersister -  Identity insert: insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-08 15:44:06.995 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21516c88]
[DEBUG] 2019-10-08 15:44:06.995 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-08 15:44:06.995 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-08 15:44:06.995 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-08 15:44:06.995 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-08 15:44:06.995 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14d1737a]
[DEBUG] 2019-10-08 15:44:06.995 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25214797]
[DEBUG] 2019-10-08 15:44:06.995 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-08 15:44:06.995 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-08 15:44:06.995 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-08 15:44:06.995 [main] MetamodelGraphWalker - Visiting attribute path : recipes.publicView
[DEBUG] 2019-10-08 15:44:06.995 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-08 15:44:07.005 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-08 15:44:07.007 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-08 15:44:07.007 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-08 15:44:07.007 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-08 15:44:07.007 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id6_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-08 15:44:07.007 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id6_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.public as public5_0_2_, recipes1_.user_id as user_id6_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-08 15:44:07.007 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@635ff2a5]
[DEBUG] 2019-10-08 15:44:07.007 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2019-10-08 15:44:07.007 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2019-10-08 15:44:07.007 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2019-10-08 15:44:07.007 [main] MetamodelGraphWalker - Visiting attribute path : recipes
[DEBUG] 2019-10-08 15:44:07.007 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1515f782]
[DEBUG] 2019-10-08 15:44:07.007 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f5ce33e]
[DEBUG] 2019-10-08 15:44:07.007 [main] MetamodelGraphWalker - Visiting attribute path : recipes.directions
[DEBUG] 2019-10-08 15:44:07.007 [main] MetamodelGraphWalker - Visiting attribute path : recipes.ingredients
[DEBUG] 2019-10-08 15:44:07.007 [main] MetamodelGraphWalker - Visiting attribute path : recipes.name
[DEBUG] 2019-10-08 15:44:07.007 [main] MetamodelGraphWalker - Visiting attribute path : recipes.publicView
[DEBUG] 2019-10-08 15:44:07.007 [main] MetamodelGraphWalker - Visiting attribute path : recipes.user
[DEBUG] 2019-10-08 15:44:07.007 [main] MetamodelGraphWalker - Property path deemed to be circular : recipes.user
[DEBUG] 2019-10-08 15:44:07.007 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2019-10-08 15:44:07.007 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-08 15:44:07.007 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-08 15:44:07.007 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.User)
          - CollectionAttributeFetchImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.User.recipes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:2>, path=com.alexmalotky.entity.User.recipes.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(recipes)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.alexmalotky.entity.User.recipes)
                - SQL table alias mapping - recipes1_
                - alias suffix - 1_
                - suffixed key columns - {user_id6_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.alexmalotky.entity.Recipe)
                      - SQL table alias mapping - recipes1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2019-10-08 15:44:07.007 [main] EntityLoader - Static select for entity com.alexmalotky.entity.User [READ]: select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id6_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.public as public5_0_2_, recipes1_.user_id as user_id6_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-08 15:44:07.015 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id6_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.public as public5_0_0_, recipes1_.user_id as user_id6_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-08 15:44:07.015 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.User: select user0_.id as id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, recipes1_.user_id as user_id6_0_3_, recipes1_.id as id1_0_3_, recipes1_.id as id1_0_0_, recipes1_.directions as directio2_0_0_, recipes1_.ingredients as ingredie3_0_0_, recipes1_.name as name4_0_0_, recipes1_.public as public5_0_0_, recipes1_.user_id as user_id6_0_0_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-08 15:44:07.015 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Recipe
[DEBUG] 2019-10-08 15:44:07.015 [main] AbstractEntityPersister -  Version select: select id from recipes where id =?
[DEBUG] 2019-10-08 15:44:07.015 [main] AbstractEntityPersister -  Snapshot select: select recipe_.id, recipe_.directions as directio2_0_, recipe_.ingredients as ingredie3_0_, recipe_.name as name4_0_, recipe_.public as public5_0_, recipe_.user_id as user_id6_0_ from recipes recipe_ where recipe_.id=?
[DEBUG] 2019-10-08 15:44:07.015 [main] AbstractEntityPersister -  Insert 0: insert into recipes (directions, ingredients, name, public, user_id, id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2019-10-08 15:44:07.015 [main] AbstractEntityPersister -  Update 0: update recipes set directions=?, ingredients=?, name=?, public=?, user_id=? where id=?
[DEBUG] 2019-10-08 15:44:07.015 [main] AbstractEntityPersister -  Delete 0: delete from recipes where id=?
[DEBUG] 2019-10-08 15:44:07.015 [main] AbstractEntityPersister -  Identity insert: insert into recipes (directions, ingredients, name, public, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-08 15:44:07.015 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@163e8949]
[DEBUG] 2019-10-08 15:44:07.015 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Visiting attribute path : publicView
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-08 15:44:07.017 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64c25a62]
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-08 15:44:07.017 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-08 15:44:07.017 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-08 15:44:07.017 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-08 15:44:07.017 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [NONE]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.public as public5_0_0_, recipe0_.user_id as user_id6_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-08 15:44:07.017 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46d0f89c]
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Visiting attribute path : publicView
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-08 15:44:07.017 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a457c2b]
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Visiting attribute path : user.email
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Visiting attribute path : user.recipes
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Property path deemed to be circular : user.recipes
[DEBUG] 2019-10-08 15:44:07.017 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2019-10-08 15:44:07.017 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-08 15:44:07.017 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-08 15:44:07.017 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Recipe)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Recipe)
          - EntityAttributeFetchImpl(entity=com.alexmalotky.entity.User, querySpaceUid=<gen:1>, path=com.alexmalotky.entity.Recipe.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Recipe)
          - SQL table alias mapping - recipe0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2019-10-08 15:44:07.017 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Recipe [READ]: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.public as public5_0_0_, recipe0_.user_id as user_id6_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-08 15:44:07.017 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.public as public5_0_0_, recipe0_.user_id as user_id6_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-08 15:44:07.017 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Recipe: select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.public as public5_0_0_, recipe0_.user_id as user_id6_0_0_ from recipes recipe0_ where recipe0_.id=?
[DEBUG] 2019-10-08 15:44:07.025 [main] AbstractEntityPersister - Static SQL for entity: com.alexmalotky.entity.Volume
[DEBUG] 2019-10-08 15:44:07.025 [main] AbstractEntityPersister -  Version select: select id from Volume where id =?
[DEBUG] 2019-10-08 15:44:07.025 [main] AbstractEntityPersister -  Snapshot select: select volume_.id, volume_.code as code2_2_, volume_.name as name3_2_, volume_.value as value4_2_ from Volume volume_ where volume_.id=?
[DEBUG] 2019-10-08 15:44:07.025 [main] AbstractEntityPersister -  Insert 0: insert into Volume (code, name, value, id) values (?, ?, ?, ?)
[DEBUG] 2019-10-08 15:44:07.025 [main] AbstractEntityPersister -  Update 0: update Volume set code=?, name=?, value=? where id=?
[DEBUG] 2019-10-08 15:44:07.025 [main] AbstractEntityPersister -  Delete 0: delete from Volume where id=?
[DEBUG] 2019-10-08 15:44:07.025 [main] AbstractEntityPersister -  Identity insert: insert into Volume (code, name, value) values (?, ?, ?)
[DEBUG] 2019-10-08 15:44:07.025 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5773d271]
[DEBUG] 2019-10-08 15:44:07.025 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2019-10-08 15:44:07.025 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-08 15:44:07.025 [main] MetamodelGraphWalker - Visiting attribute path : value
[DEBUG] 2019-10-08 15:44:07.025 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-08 15:44:07.025 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-08 15:44:07.025 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Volume)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Volume, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Volume)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Volume)
          - SQL table alias mapping - volume0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2019-10-08 15:44:07.025 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Volume [NONE]: select volume0_.id as id1_2_0_, volume0_.code as code2_2_0_, volume0_.name as name3_2_0_, volume0_.value as value4_2_0_ from Volume volume0_ where volume0_.id=?
[DEBUG] 2019-10-08 15:44:07.025 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7871d261]
[DEBUG] 2019-10-08 15:44:07.025 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2019-10-08 15:44:07.025 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-08 15:44:07.025 [main] MetamodelGraphWalker - Visiting attribute path : value
[DEBUG] 2019-10-08 15:44:07.025 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-08 15:44:07.025 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-08 15:44:07.025 [main] LoadPlanTreePrinter - LoadPlan(entity=com.alexmalotky.entity.Volume)
    - Returns
       - EntityReturnImpl(entity=com.alexmalotky.entity.Volume, querySpaceUid=<gen:0>, path=com.alexmalotky.entity.Volume)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.alexmalotky.entity.Volume)
          - SQL table alias mapping - volume0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2019-10-08 15:44:07.025 [main] EntityLoader - Static select for entity com.alexmalotky.entity.Volume [READ]: select volume0_.id as id1_2_0_, volume0_.code as code2_2_0_, volume0_.name as name3_2_0_, volume0_.value as value4_2_0_ from Volume volume0_ where volume0_.id=?
[DEBUG] 2019-10-08 15:44:07.025 [main] Loader - Static select for action ACTION_MERGE on entity com.alexmalotky.entity.Volume: select volume0_.id as id1_2_0_, volume0_.code as code2_2_0_, volume0_.name as name3_2_0_, volume0_.value as value4_2_0_ from Volume volume0_ where volume0_.id=?
[DEBUG] 2019-10-08 15:44:07.025 [main] Loader - Static select for action ACTION_REFRESH on entity com.alexmalotky.entity.Volume: select volume0_.id as id1_2_0_, volume0_.code as code2_2_0_, volume0_.name as name3_2_0_, volume0_.value as value4_2_0_ from Volume volume0_ where volume0_.id=?
[DEBUG] 2019-10-08 15:44:07.025 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ee37ca7]
[DEBUG] 2019-10-08 15:44:07.025 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6775c0d1]
[DEBUG] 2019-10-08 15:44:07.025 [main] MetamodelGraphWalker - Visiting attribute path : directions
[DEBUG] 2019-10-08 15:44:07.025 [main] MetamodelGraphWalker - Visiting attribute path : ingredients
[DEBUG] 2019-10-08 15:44:07.025 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2019-10-08 15:44:07.025 [main] MetamodelGraphWalker - Visiting attribute path : publicView
[DEBUG] 2019-10-08 15:44:07.025 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2019-10-08 15:44:07.025 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2019-10-08 15:44:07.025 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2019-10-08 15:44:07.038 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2019-10-08 15:44:07.038 [main] LoadPlanTreePrinter - LoadPlan(collection=com.alexmalotky.entity.User.recipes)
    - Returns
       - CollectionReturnImpl(collection=com.alexmalotky.entity.User.recipes, querySpaceUid=<gen:0>, path=[com.alexmalotky.entity.User.recipes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.alexmalotky.entity.Recipe, querySpaceUid=<gen:1>, path=[com.alexmalotky.entity.User.recipes].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.alexmalotky.entity.User.recipes)
          - SQL table alias mapping - recipes0_
          - alias suffix - 0_
          - suffixed key columns - {user_id6_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.alexmalotky.entity.Recipe)
                - SQL table alias mapping - recipes0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2019-10-08 15:44:07.038 [main] CollectionLoader - Static select for collection com.alexmalotky.entity.User.recipes: select recipes0_.user_id as user_id6_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.public as public5_0_1_, recipes0_.user_id as user_id6_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-08 15:44:07.076 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2019-10-08 15:44:07.076 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2019-10-08 15:44:07.076 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2019-10-08 15:44:07.076 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2019-10-08 15:44:07.076 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2019-10-08 15:44:07.076 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2019-10-08 15:44:07.076 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2019-10-08 15:44:07.091 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2a1e57c6
[DEBUG] 2019-10-08 15:44:07.091 [main] SessionFactoryRegistry - Registering SessionFactory: b48d409e-af07-457f-b0c4-7f8ae2a2fd33 (<unnamed>)
[DEBUG] 2019-10-08 15:44:07.091 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2019-10-08 15:44:07.176 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2019-10-08 15:44:07.192 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id6_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.public as public5_0_2_, recipes1_.user_id as user_id6_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-08 15:44:07.239 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:07.239 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-08 15:44:07.254 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:07.254 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-08 15:44:07.254 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:07.254 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.254 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-08 15:44:07.254 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.254 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-08 15:44:07.254 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.254 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:07.254 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.254 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-08 15:44:07.254 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.270 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-08 15:44:07.270 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:07.270 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-08 15:44:07.270 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.270 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-08 15:44:07.270 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.270 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-08 15:44:07.270 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.270 [main] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-08 15:44:07.270 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.270 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-08 15:44:07.270 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.270 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:07.270 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:07.276 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:07.276 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:07.276 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:07.276 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-08 15:44:07.276 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:07.323 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-10-08 15:44:07.354 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@141bb6b8
[DEBUG] 2019-10-08 15:44:07.392 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-10-08 15:44:07.408 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-08 15:44:07.423 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'alexmalotky'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Recipe'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'name'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'user'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

[DEBUG] 2019-10-08 15:44:07.455 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-08 15:44:07.492 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.Recipe (generatedAlias0) -> recipe0_
[DEBUG] 2019-10-08 15:44:07.492 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-08 15:44:07.492 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-08 15:44:07.492 [main] DotNode - getDataType() : name -> org.hibernate.type.StringType@26dc9bd5
[DEBUG] 2019-10-08 15:44:07.492 [main] FromReferenceNode - Resolved : generatedAlias0.name -> recipe0_.name
[DEBUG] 2019-10-08 15:44:07.492 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-08 15:44:07.508 [main] DotNode - getDataType() : user -> org.hibernate.type.ManyToOneType(com.alexmalotky.entity.User)
[DEBUG] 2019-10-08 15:44:07.508 [main] DotNode - dereferenceShortcut() : property user in com.alexmalotky.entity.Recipe does not require a join.
[DEBUG] 2019-10-08 15:44:07.508 [main] DotNode - Terminal getPropertyPath = [user]
[DEBUG] 2019-10-08 15:44:07.508 [main] FromReferenceNode - Resolved : generatedAlias0.user -> recipe0_.user_id
[DEBUG] 2019-10-08 15:44:07.508 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-08 15:44:07.508 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipe0_.id ) ( FromClause{level=1} recipes recipe0_ ) ( where ( and ( = ( recipe0_.name recipe0_.id name ) ? ) ( = ( recipe0_.user_id recipe0_.id user ) ? ) ) ) )
[DEBUG] 2019-10-08 15:44:07.508 [main] JoinProcessor - Using FROM fragment [recipes recipe0_]
[DEBUG] 2019-10-08 15:44:07.508 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-08 15:44:07.508 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipe0_.id as id1_0_' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.public as public5_0_, recipe0_.user_id as user_id6_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipe0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'recipes recipe0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=recipes,tableAlias=recipe0_,origin=null,columns={,className=com.alexmalotky.entity.Recipe}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'recipe0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=recipe0_,className=com.alexmalotky.entity.Recipe,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'recipe0_.id' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@26dc9bd5}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'recipe0_.user_id' {propertyName=user,dereferenceType=UNKNOWN,getPropertyPath=user,path=generatedAlias0.user,tableAlias=recipe0_,className=com.alexmalotky.entity.Recipe,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'recipe0_.id' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
             |  \-[IDENT] IdentNode: 'user' {originalText=user}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.ManyToOneType(com.alexmalotky.entity.User)}

[DEBUG] 2019-10-08 15:44:07.508 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-08 15:44:07.524 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where ( generatedAlias0.name=:param0 ) and ( generatedAlias0.user=:param1 )
[DEBUG] 2019-10-08 15:44:07.524 [main] QueryTranslatorImpl - SQL: select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.public as public5_0_, recipe0_.user_id as user_id6_0_ from recipes recipe0_ where recipe0_.name=? and recipe0_.user_id=?
[DEBUG] 2019-10-08 15:44:07.524 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-08 15:44:07.539 [main] SQL - select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.public as public5_0_, recipe0_.user_id as user_id6_0_ from recipes recipe0_ where recipe0_.name=? and recipe0_.user_id=?
[DEBUG] 2019-10-08 15:44:07.555 [main] Loader - Result set row: 0
[DEBUG] 2019-10-08 15:44:07.555 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:07.555 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:07.555 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-08 15:44:07.555 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.555 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-08 15:44:07.555 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.555 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-08 15:44:07.555 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.555 [main] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-08 15:44:07.555 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.555 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-08 15:44:07.555 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.555 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id6_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.public as public5_0_2_, recipes1_.user_id as user_id6_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-08 15:44:07.571 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:07.571 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-08 15:44:07.571 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:07.571 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-08 15:44:07.571 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:07.571 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.571 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-08 15:44:07.571 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.571 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-08 15:44:07.571 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.571 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:07.571 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.571 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-08 15:44:07.571 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.571 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-08 15:44:07.571 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:07.571 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:07.571 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:07.571 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:07.571 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-08 15:44:07.571 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:07.577 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:07.640 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2019-10-08 15:44:07.640 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2019-10-08 15:44:07.640 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-08 15:44:07.655 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'alexmalotky'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Recipe'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2019-10-08 15:44:07.655 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-08 15:44:07.655 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.Recipe (generatedAlias0) -> recipe0_
[DEBUG] 2019-10-08 15:44:07.655 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-08 15:44:07.655 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-08 15:44:07.655 [main] DotNode - getDataType() : name -> org.hibernate.type.StringType@26dc9bd5
[DEBUG] 2019-10-08 15:44:07.655 [main] FromReferenceNode - Resolved : generatedAlias0.name -> recipe0_.name
[DEBUG] 2019-10-08 15:44:07.655 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-08 15:44:07.655 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipe0_.id ) ( FromClause{level=1} recipes recipe0_ ) ( where ( = ( recipe0_.name recipe0_.id name ) ? ) ) )
[DEBUG] 2019-10-08 15:44:07.655 [main] JoinProcessor - Using FROM fragment [recipes recipe0_]
[DEBUG] 2019-10-08 15:44:07.655 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-08 15:44:07.655 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipe0_.id as id1_0_' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.public as public5_0_, recipe0_.user_id as user_id6_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipe0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'recipes recipe0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=recipes,tableAlias=recipe0_,origin=null,columns={,className=com.alexmalotky.entity.Recipe}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'recipe0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias0.name,tableAlias=recipe0_,className=com.alexmalotky.entity.Recipe,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'recipe0_.id' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@26dc9bd5}

[DEBUG] 2019-10-08 15:44:07.655 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-08 15:44:07.655 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0 where generatedAlias0.name=:param0
[DEBUG] 2019-10-08 15:44:07.655 [main] QueryTranslatorImpl - SQL: select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.public as public5_0_, recipe0_.user_id as user_id6_0_ from recipes recipe0_ where recipe0_.name=?
[DEBUG] 2019-10-08 15:44:07.655 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-08 15:44:07.655 [main] SQL - select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.public as public5_0_, recipe0_.user_id as user_id6_0_ from recipes recipe0_ where recipe0_.name=?
[DEBUG] 2019-10-08 15:44:07.655 [main] Loader - Result set row: 0
[DEBUG] 2019-10-08 15:44:07.655 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:07.655 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:07.655 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-08 15:44:07.655 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.655 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-08 15:44:07.655 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.655 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-08 15:44:07.655 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.655 [main] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-08 15:44:07.655 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.655 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-08 15:44:07.655 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.655 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id6_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.public as public5_0_2_, recipes1_.user_id as user_id6_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-08 15:44:07.671 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:07.671 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-08 15:44:07.671 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:07.671 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-08 15:44:07.671 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:07.671 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.671 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-08 15:44:07.671 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.671 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-08 15:44:07.671 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.671 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:07.671 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.671 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-08 15:44:07.671 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.671 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-08 15:44:07.671 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:07.671 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:07.671 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:07.671 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:07.671 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-08 15:44:07.671 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:07.671 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:07.724 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id6_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.public as public5_0_2_, recipes1_.user_id as user_id6_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-08 15:44:07.724 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:07.724 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-08 15:44:07.724 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.740 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:07.740 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:07.740 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:07.740 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:07.740 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:07.740 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-08 15:44:07.740 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:07.740 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-08 15:44:07.740 [main] TransactionImpl - begin
[DEBUG] 2019-10-08 15:44:07.755 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-08 15:44:07.755 [main] SQL - insert into recipes (directions, ingredients, name, public, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-08 15:44:07.771 [main] IdentifierGeneratorHelper - Natively generated identity: 19
[DEBUG] 2019-10-08 15:44:07.771 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:07.780 [main] TransactionImpl - committing
[DEBUG] 2019-10-08 15:44:07.780 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-08 15:44:07.780 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-08 15:44:07.780 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-10-08 15:44:07.780 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-10-08 15:44:07.780 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-08 15:44:07.780 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=, name=testInsert, ingredients=, id=19, publicView=null, user=com.alexmalotky.entity.User#1}
[DEBUG] 2019-10-08 15:44:07.790 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:07.798 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:07.798 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.public as public5_0_0_, recipe0_.user_id as user_id6_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-08 15:44:07.800 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:07.800 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#19]
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Processing attribute `directions` : value = 
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = 
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Processing attribute `name` : value = testInsert
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Processing attribute `publicView` : value = null
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#19]
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.800 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-08 15:44:07.800 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:07.808 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:07.810 [main] SQL - select recipes0_.user_id as user_id6_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.public as public5_0_1_, recipes0_.user_id as user_id6_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-08 15:44:07.810 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:07.810 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:07.810 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:07.810 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2019-10-08 15:44:07.810 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:07.810 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:07.810 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-08 15:44:07.810 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.810 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-08 15:44:07.810 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.810 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-08 15:44:07.810 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.810 [main] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-08 15:44:07.810 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.810 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-08 15:44:07.810 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.810 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:07.810 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:07.810 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:07.810 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:07.818 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:07.818 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-08 15:44:07.818 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#19
[DEBUG] 2019-10-08 15:44:07.818 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:07.935 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.public as public5_0_0_, recipe0_.user_id as user_id6_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-08 15:44:07.935 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:07.935 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:07.935 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-08 15:44:07.935 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:07.935 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:07.935 [main] SQL - select recipes0_.user_id as user_id6_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.public as public5_0_1_, recipes0_.user_id as user_id6_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-08 15:44:07.945 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:07.945 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:07.945 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:07.945 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:07.945 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:07.945 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:07.945 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:07.945 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-08 15:44:07.945 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#1
[DEBUG] 2019-10-08 15:44:07.945 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:08.013 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-08 15:44:08.013 [main] TransactionImpl - begin
[DEBUG] 2019-10-08 15:44:08.015 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-08 15:44:08.015 [main] SQL - insert into recipes (directions, ingredients, name, public, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-08 15:44:08.015 [main] IdentifierGeneratorHelper - Natively generated identity: 20
[DEBUG] 2019-10-08 15:44:08.015 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:08.015 [main] TransactionImpl - committing
[DEBUG] 2019-10-08 15:44:08.015 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-08 15:44:08.015 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-08 15:44:08.015 [main] JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:206) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:392) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:145) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1499) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:496) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3371) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2540) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:473) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:178) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:104) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at com.alexmalotky.persistence.GenericDao.insert(GenericDao.java:90) [classes/:?]
	at com.alexmalotky.persistence.RecipeDaoTest.lambda$testInsertFail$0(RecipeDaoTest.java:58) [test-classes/:?]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:50) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:38) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:1108) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at com.alexmalotky.persistence.RecipeDaoTest.testInsertFail(RecipeDaoTest.java:58) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) [junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[DEBUG] 2019-10-08 15:44:08.025 [main] JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:187) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:104) [hibernate-core-5.4.4.Final.jar:5.4.4.Final]
	at com.alexmalotky.persistence.GenericDao.insert(GenericDao.java:90) [classes/:?]
	at com.alexmalotky.persistence.RecipeDaoTest.lambda$testInsertFail$0(RecipeDaoTest.java:58) [test-classes/:?]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:50) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.AssertThrows.assertThrows(AssertThrows.java:38) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at org.junit.jupiter.api.Assertions.assertThrows(Assertions.java:1108) [junit-jupiter-api-5.0.0.jar:5.0.0]
	at com.alexmalotky.persistence.RecipeDaoTest.testInsertFail(RecipeDaoTest.java:58) [test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) [junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) [junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) [?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) [?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[DEBUG] 2019-10-08 15:44:08.036 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:08.036 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:08.086 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.public as public5_0_0_, recipe0_.user_id as user_id6_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-08 15:44:08.096 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:08.096 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.096 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-08 15:44:08.096 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:08.096 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-08 15:44:08.096 [main] SQL - select recipes0_.user_id as user_id6_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.public as public5_0_1_, recipes0_.user_id as user_id6_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-08 15:44:08.096 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-08 15:44:08.096 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:08.096 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-08 15:44:08.104 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.104 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-08 15:44:08.104 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.104 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:08.104 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-08 15:44:08.104 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-08 15:44:08.104 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:08.106 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-08 15:44:08.106 [main] TransactionImpl - begin
[DEBUG] 2019-10-08 15:44:08.116 [main] TransactionImpl - committing
[DEBUG] 2019-10-08 15:44:08.116 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-08 15:44:08.116 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-08 15:44:08.116 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2019-10-08 15:44:08.116 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-10-08 15:44:08.116 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-08 15:44:08.116 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions={"Instruction 1", "Instruction 2"}, name=Test Recipe, ingredients={ {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }, id=3, publicView=false, user=com.alexmalotky.entity.User#3}
[DEBUG] 2019-10-08 15:44:08.126 [main] SQL - delete from recipes where id=?
[DEBUG] 2019-10-08 15:44:08.136 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:08.136 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:08.136 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2019-10-08 15:44:08.136 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0
[DEBUG] 2019-10-08 15:44:08.136 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0
[DEBUG] 2019-10-08 15:44:08.136 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-08 15:44:08.136 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'alexmalotky'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Recipe'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-10-08 15:44:08.136 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-08 15:44:08.136 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.Recipe (generatedAlias0) -> recipe0_
[DEBUG] 2019-10-08 15:44:08.136 [main] FromReferenceNode - Resolved : generatedAlias0 -> recipe0_.id
[DEBUG] 2019-10-08 15:44:08.144 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-08 15:44:08.144 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} recipe0_.id ) ( FromClause{level=1} recipes recipe0_ ) )
[DEBUG] 2019-10-08 15:44:08.144 [main] JoinProcessor - Using FROM fragment [recipes recipe0_]
[DEBUG] 2019-10-08 15:44:08.144 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-08 15:44:08.144 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (recipes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'recipe0_.id as id1_0_' {alias=generatedAlias0, className=com.alexmalotky.entity.Recipe, tableAlias=recipe0_}
    |  \-[SQL_TOKEN] SqlFragment: 'recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.public as public5_0_, recipe0_.user_id as user_id6_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[recipe0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'recipes recipe0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=recipes,tableAlias=recipe0_,origin=null,columns={,className=com.alexmalotky.entity.Recipe}}

[DEBUG] 2019-10-08 15:44:08.144 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-08 15:44:08.144 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.Recipe as generatedAlias0
[DEBUG] 2019-10-08 15:44:08.144 [main] QueryTranslatorImpl - SQL: select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.public as public5_0_, recipe0_.user_id as user_id6_0_ from recipes recipe0_
[DEBUG] 2019-10-08 15:44:08.144 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-08 15:44:08.146 [main] SQL - select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.public as public5_0_, recipe0_.user_id as user_id6_0_ from recipes recipe0_
[DEBUG] 2019-10-08 15:44:08.146 [main] Loader - Result set row: 0
[DEBUG] 2019-10-08 15:44:08.146 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:08.146 [main] Loader - Result set row: 1
[DEBUG] 2019-10-08 15:44:08.146 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-08 15:44:08.146 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:08.146 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-08 15:44:08.146 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.146 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-08 15:44:08.146 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.146 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-08 15:44:08.146 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.146 [main] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-08 15:44:08.146 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.146 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-08 15:44:08.146 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.146 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id6_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.public as public5_0_2_, recipes1_.user_id as user_id6_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-08 15:44:08.157 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:08.157 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-08 15:44:08.157 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-08 15:44:08.157 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.157 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:08.157 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.157 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:08.157 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-08 15:44:08.157 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.157 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id6_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.public as public5_0_2_, recipes1_.user_id as user_id6_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-08 15:44:08.157 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:08.157 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-08 15:44:08.157 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-08 15:44:08.165 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-08 15:44:08.165 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:08.165 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.165 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-08 15:44:08.165 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.165 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-08 15:44:08.165 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.165 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:08.165 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.165 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-08 15:44:08.165 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.165 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-08 15:44:08.165 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.165 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-08 15:44:08.165 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.165 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:08.165 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#2
[DEBUG] 2019-10-08 15:44:08.167 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-08 15:44:08.167 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:08.266 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Recipe as generatedAlias0
[DEBUG] 2019-10-08 15:44:08.266 [main] SQL - select recipe0_.id as id1_0_, recipe0_.directions as directio2_0_, recipe0_.ingredients as ingredie3_0_, recipe0_.name as name4_0_, recipe0_.public as public5_0_, recipe0_.user_id as user_id6_0_ from recipes recipe0_
[DEBUG] 2019-10-08 15:44:08.278 [main] Loader - Result set row: 0
[DEBUG] 2019-10-08 15:44:08.278 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:08.278 [main] Loader - Result set row: 1
[DEBUG] 2019-10-08 15:44:08.278 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-08 15:44:08.278 [main] Loader - Result set row: 2
[DEBUG] 2019-10-08 15:44:08.278 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-08 15:44:08.278 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:08.278 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-08 15:44:08.278 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.278 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-08 15:44:08.278 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.278 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-08 15:44:08.278 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.278 [main] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-08 15:44:08.278 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.278 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-08 15:44:08.278 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.278 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id6_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.public as public5_0_2_, recipes1_.user_id as user_id6_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-08 15:44:08.278 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:08.278 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-08 15:44:08.278 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:08.278 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-08 15:44:08.278 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:08.278 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.278 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-08 15:44:08.278 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.278 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-08 15:44:08.278 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.278 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:08.278 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.286 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-08 15:44:08.286 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.286 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-08 15:44:08.286 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.286 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:08.286 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.288 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:08.288 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#1
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.288 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id6_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.public as public5_0_2_, recipes1_.user_id as user_id6_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-08 15:44:08.288 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:08.288 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-08 15:44:08.288 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-08 15:44:08.288 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.288 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-08 15:44:08.288 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.288 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:08.288 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#2
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-08 15:44:08.288 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.288 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id6_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.public as public5_0_2_, recipes1_.user_id as user_id6_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-08 15:44:08.296 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:08.298 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-08 15:44:08.298 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-08 15:44:08.298 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-08 15:44:08.298 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:08.298 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.298 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-08 15:44:08.298 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.298 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-08 15:44:08.298 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.298 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:08.298 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.298 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-08 15:44:08.298 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.298 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-08 15:44:08.298 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.298 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-08 15:44:08.298 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.298 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:08.298 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#3
[DEBUG] 2019-10-08 15:44:08.298 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-08 15:44:08.298 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:08.342 [main] SQL - select recipe0_.id as id1_0_0_, recipe0_.directions as directio2_0_0_, recipe0_.ingredients as ingredie3_0_0_, recipe0_.name as name4_0_0_, recipe0_.public as public5_0_0_, recipe0_.user_id as user_id6_0_0_, user1_.id as id1_1_1_, user1_.email as email2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_ from recipes recipe0_ left outer join users user1_ on recipe0_.user_id=user1_.id where recipe0_.id=?
[DEBUG] 2019-10-08 15:44:08.342 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:08.342 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.342 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-08 15:44:08.350 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:08.350 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-08 15:44:08.350 [main] SQL - select recipes0_.user_id as user_id6_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.public as public5_0_1_, recipes0_.user_id as user_id6_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-08 15:44:08.352 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-08 15:44:08.352 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:08.352 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-08 15:44:08.352 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.352 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-08 15:44:08.352 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.352 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:08.352 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-08 15:44:08.352 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.Recipe#3
[DEBUG] 2019-10-08 15:44:08.352 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:08.352 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-08 15:44:08.352 [main] TransactionImpl - begin
[DEBUG] 2019-10-08 15:44:08.352 [main] TransactionImpl - committing
[DEBUG] 2019-10-08 15:44:08.352 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-08 15:44:08.352 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-08 15:44:08.360 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2019-10-08 15:44:08.360 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2019-10-08 15:44:08.360 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-08 15:44:08.360 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=Do the thing, name=Test Recipe, ingredients={ {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }, id=3, publicView=false, user=com.alexmalotky.entity.User#3}
[DEBUG] 2019-10-08 15:44:08.360 [main] SQL - update recipes set directions=?, ingredients=?, name=?, public=?, user_id=? where id=?
[DEBUG] 2019-10-08 15:44:08.372 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:08.372 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:08.461 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2019-10-08 15:44:08.461 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.alexmalotky.entity.User as generatedAlias0
[DEBUG] 2019-10-08 15:44:08.461 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-08 15:44:08.461 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'alexmalotky'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2019-10-08 15:44:08.461 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2019-10-08 15:44:08.461 [main] FromElement - FromClause{level=1} : com.alexmalotky.entity.User (generatedAlias0) -> user0_
[DEBUG] 2019-10-08 15:44:08.461 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2019-10-08 15:44:08.461 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2019-10-08 15:44:08.461 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} users user0_ ) )
[DEBUG] 2019-10-08 15:44:08.461 [main] JoinProcessor - Using FROM fragment [users user0_]
[DEBUG] 2019-10-08 15:44:08.461 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2019-10-08 15:44:08.461 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_1_' {alias=generatedAlias0, className=com.alexmalotky.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_1_, user0_.first_name as first_na3_1_, user0_.last_name as last_nam4_1_, user0_.user_name as user_nam5_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.alexmalotky.entity.User}}

[DEBUG] 2019-10-08 15:44:08.461 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-08 15:44:08.461 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.alexmalotky.entity.User as generatedAlias0
[DEBUG] 2019-10-08 15:44:08.461 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_1_, user0_.email as email2_1_, user0_.first_name as first_na3_1_, user0_.last_name as last_nam4_1_, user0_.user_name as user_nam5_1_ from users user0_
[DEBUG] 2019-10-08 15:44:08.461 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2019-10-08 15:44:08.471 [main] SQL - select user0_.id as id1_1_, user0_.email as email2_1_, user0_.first_name as first_na3_1_, user0_.last_name as last_nam4_1_, user0_.user_name as user_nam5_1_ from users user0_
[DEBUG] 2019-10-08 15:44:08.473 [main] Loader - Result set row: 0
[DEBUG] 2019-10-08 15:44:08.473 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-08 15:44:08.473 [main] Loader - Result set row: 1
[DEBUG] 2019-10-08 15:44:08.473 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-08 15:44:08.473 [main] Loader - Result set row: 2
[DEBUG] 2019-10-08 15:44:08.473 [main] Loader - Result row: EntityKey[com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bob
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Vance
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Processing attribute `userName` : value = test1
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#1]
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.473 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-08 15:44:08.481 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-08 15:44:08.481 [main] SQL - select recipes0_.user_id as user_id6_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.public as public5_0_1_, recipes0_.user_id as user_id6_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-08 15:44:08.483 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-08 15:44:08.483 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:08.483 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-08 15:44:08.483 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-08 15:44:08.483 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-08 15:44:08.483 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.483 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-08 15:44:08.483 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.483 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-08 15:44:08.483 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.483 [main] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-08 15:44:08.483 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.483 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-08 15:44:08.483 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.483 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-08 15:44:08.483 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.483 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-08 15:44:08.483 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.483 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:08.483 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-08 15:44:08.483 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-08 15:44:08.483 [main] SQL - select recipes0_.user_id as user_id6_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.public as public5_0_1_, recipes0_.user_id as user_id6_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-08 15:44:08.491 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-08 15:44:08.492 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:08.492 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-08 15:44:08.492 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-08 15:44:08.492 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-08 15:44:08.492 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.492 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-08 15:44:08.492 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.492 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-08 15:44:08.492 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.492 [main] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-08 15:44:08.492 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.492 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-08 15:44:08.492 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.492 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-08 15:44:08.494 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.494 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-08 15:44:08.494 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.494 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:08.494 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-08 15:44:08.494 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:08.494 [main] SQL - select recipes0_.user_id as user_id6_0_0_, recipes0_.id as id1_0_0_, recipes0_.id as id1_0_1_, recipes0_.directions as directio2_0_1_, recipes0_.ingredients as ingredie3_0_1_, recipes0_.name as name4_0_1_, recipes0_.public as public5_0_1_, recipes0_.user_id as user_id6_0_1_ from recipes recipes0_ where recipes0_.user_id=?
[DEBUG] 2019-10-08 15:44:08.494 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:08.494 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:08.494 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:08.494 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:08.494 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Use a knife to cut the bread into slices"}
[DEBUG] 2019-10-08 15:44:08.494 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.494 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Italian Loaf" , "1 Loaf" } }
[DEBUG] 2019-10-08 15:44:08.494 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.494 [main] TwoPhaseLoad - Processing attribute `name` : value = Sliced Bread
[DEBUG] 2019-10-08 15:44:08.494 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.494 [main] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-08 15:44:08.494 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.494 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2019-10-08 15:44:08.494 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.494 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#1]
[DEBUG] 2019-10-08 15:44:08.494 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.494 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#1]
[DEBUG] 2019-10-08 15:44:08.494 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.494 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:08.494 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2019-10-08 15:44:08.502 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:08.750 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id6_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.public as public5_0_2_, recipes1_.user_id as user_id6_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-08 15:44:08.750 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:08.750 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-08 15:44:08.750 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-08 15:44:08.750 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-08 15:44:08.750 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:08.750 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.750 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-08 15:44:08.750 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.750 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-08 15:44:08.750 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.750 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:08.750 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.750 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-08 15:44:08.750 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.758 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-08 15:44:08.758 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-08 15:44:08.758 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-08 15:44:08.758 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.758 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-08 15:44:08.758 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.758 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-08 15:44:08.758 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.758 [main] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-08 15:44:08.758 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.758 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-08 15:44:08.758 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.758 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-08 15:44:08.758 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.758 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-08 15:44:08.758 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.758 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:08.758 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#2
[DEBUG] 2019-10-08 15:44:08.758 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:08.758 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-08 15:44:08.758 [main] TransactionImpl - begin
[DEBUG] 2019-10-08 15:44:08.758 [main] TransactionImpl - committing
[DEBUG] 2019-10-08 15:44:08.758 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-08 15:44:08.758 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-08 15:44:08.758 [main] CollectionEntry - Collection dirty: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-08 15:44:08.770 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#2], was: [com.alexmalotky.entity.User.recipes#2] (initialized)
[DEBUG] 2019-10-08 15:44:08.770 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 1 deletions to 2 objects
[DEBUG] 2019-10-08 15:44:08.770 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 1 updates, 0 removals to 1 collections
[DEBUG] 2019-10-08 15:44:08.770 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-08 15:44:08.770 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Alex, lastName=Malotky, recipes=[], id=2, userName=test2, email=null}
[DEBUG] 2019-10-08 15:44:08.770 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions={"Poor sauce into sauce pan", " Bring sauce to a boil"}, name=Boss Sauce, ingredients={ {"Spagheti Sauce" , "16 oz" } }, id=2, publicView=false, user=com.alexmalotky.entity.User#2}
[DEBUG] 2019-10-08 15:44:08.770 [main] SQL - update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-08 15:44:08.770 [main] SQL - delete from recipes where id=?
[DEBUG] 2019-10-08 15:44:08.780 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:08.780 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:08.780 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2019-10-08 15:44:08.848 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id6_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.public as public5_0_2_, recipes1_.user_id as user_id6_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-08 15:44:08.848 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:08.848 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-08 15:44:08.848 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-08 15:44:08.848 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-08 15:44:08.848 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Processing attribute `userName` : value = test2
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#2]
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Poor sauce into sauce pan", " Bring sauce to a boil"}
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Spagheti Sauce" , "16 oz" } }
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Processing attribute `name` : value = Boss Sauce
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.858 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#2]
[DEBUG] 2019-10-08 15:44:08.858 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.858 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#2]
[DEBUG] 2019-10-08 15:44:08.858 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.858 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:08.858 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#2
[DEBUG] 2019-10-08 15:44:08.858 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:08.921 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id6_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.public as public5_0_2_, recipes1_.user_id as user_id6_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-08 15:44:08.936 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:08.936 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-08 15:44:08.936 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:08.936 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-08 15:44:08.936 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.936 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-08 15:44:08.936 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.936 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:08.936 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#3
[DEBUG] 2019-10-08 15:44:08.936 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:08.936 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-08 15:44:08.936 [main] TransactionImpl - begin
[DEBUG] 2019-10-08 15:44:08.936 [main] TransactionImpl - committing
[DEBUG] 2019-10-08 15:44:08.936 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-08 15:44:08.936 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-08 15:44:08.936 [main] Collections - Collection dereferenced: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-08 15:44:08.936 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 2 deletions to 2 objects
[DEBUG] 2019-10-08 15:44:08.936 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2019-10-08 15:44:08.936 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-08 15:44:08.936 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions={"Instruction 1", "Instruction 2"}, name=Test Recipe, ingredients={ {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }, id=3, publicView=false, user=com.alexmalotky.entity.User#3}
[DEBUG] 2019-10-08 15:44:08.936 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Ben, lastName=Wyatt, recipes=[com.alexmalotky.entity.Recipe#3], id=3, userName=test3, email=null}
[DEBUG] 2019-10-08 15:44:08.936 [main] SQL - delete from recipes where id=?
[DEBUG] 2019-10-08 15:44:08.959 [main] SQL - delete from users where id=?
[DEBUG] 2019-10-08 15:44:08.981 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:08.981 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:08.981 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2019-10-08 15:44:08.981 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id6_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.public as public5_0_2_, recipes1_.user_id as user_id6_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-08 15:44:08.989 [main] CollectionLoadContext - No collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:08.989 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:08.989 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#3
[DEBUG] 2019-10-08 15:44:08.991 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:09.072 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-08 15:44:09.072 [main] TransactionImpl - begin
[DEBUG] 2019-10-08 15:44:09.080 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-08 15:44:09.080 [main] SQL - insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-08 15:44:09.082 [main] IdentifierGeneratorHelper - Natively generated identity: 14
[DEBUG] 2019-10-08 15:44:09.082 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:09.082 [main] TransactionImpl - committing
[DEBUG] 2019-10-08 15:44:09.082 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-08 15:44:09.082 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-08 15:44:09.082 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#14], was: [<unreferenced>] (initialized)
[DEBUG] 2019-10-08 15:44:09.082 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2019-10-08 15:44:09.082 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-08 15:44:09.082 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-08 15:44:09.082 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Leroy, lastName=Jenkins, recipes=[], id=14, userName=Blah Blah Blah, email=null}
[DEBUG] 2019-10-08 15:44:09.116 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:09.116 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:09.116 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id6_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.public as public5_0_2_, recipes1_.user_id as user_id6_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-08 15:44:09.124 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:09.126 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-08 15:44:09.126 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [com.alexmalotky.entity.User.recipes#14]
[DEBUG] 2019-10-08 15:44:09.126 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#14]
[DEBUG] 2019-10-08 15:44:09.126 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:09.126 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.126 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Leroy
[DEBUG] 2019-10-08 15:44:09.126 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.126 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jenkins
[DEBUG] 2019-10-08 15:44:09.126 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.126 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:09.126 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.126 [main] TwoPhaseLoad - Processing attribute `userName` : value = Blah Blah Blah
[DEBUG] 2019-10-08 15:44:09.126 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.126 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#14]
[DEBUG] 2019-10-08 15:44:09.126 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:09.126 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#14]
[DEBUG] 2019-10-08 15:44:09.126 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:09.126 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:09.126 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#14
[DEBUG] 2019-10-08 15:44:09.126 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:09.197 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-08 15:44:09.197 [main] TransactionImpl - begin
[DEBUG] 2019-10-08 15:44:09.197 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-08 15:44:09.197 [main] SQL - insert into users (email, first_name, last_name, user_name) values (?, ?, ?, ?)
[DEBUG] 2019-10-08 15:44:09.207 [main] IdentifierGeneratorHelper - Natively generated identity: 15
[DEBUG] 2019-10-08 15:44:09.207 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:09.207 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2019-10-08 15:44:09.207 [main] SQL - insert into recipes (directions, ingredients, name, public, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2019-10-08 15:44:09.207 [main] IdentifierGeneratorHelper - Natively generated identity: 21
[DEBUG] 2019-10-08 15:44:09.207 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:09.207 [main] TransactionImpl - committing
[DEBUG] 2019-10-08 15:44:09.207 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-08 15:44:09.207 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-08 15:44:09.207 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#15], was: [<unreferenced>] (initialized)
[DEBUG] 2019-10-08 15:44:09.207 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2019-10-08 15:44:09.207 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-08 15:44:09.207 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-08 15:44:09.207 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Alex, lastName=Malotky, recipes=[com.alexmalotky.entity.Recipe#21], id=15, userName=ajmalotky, email=}
[DEBUG] 2019-10-08 15:44:09.207 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions=, name=TestRecipe, ingredients=, id=21, publicView=null, user=com.alexmalotky.entity.User#15}
[DEBUG] 2019-10-08 15:44:09.217 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:09.217 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:09.217 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id6_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.public as public5_0_2_, recipes1_.user_id as user_id6_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-08 15:44:09.217 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:09.217 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-08 15:44:09.217 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#15]
[DEBUG] 2019-10-08 15:44:09.217 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#15]
[DEBUG] 2019-10-08 15:44:09.217 [main] TwoPhaseLoad - Processing attribute `email` : value = 
[DEBUG] 2019-10-08 15:44:09.217 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Alex
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Malotky
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Processing attribute `userName` : value = ajmalotky
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#15]
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#21]
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Processing attribute `directions` : value = 
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = 
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Processing attribute `name` : value = TestRecipe
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Processing attribute `publicView` : value = null
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Processing attribute `user` : value = 15
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.225 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#21]
[DEBUG] 2019-10-08 15:44:09.225 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:09.225 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#15]
[DEBUG] 2019-10-08 15:44:09.225 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:09.225 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:09.225 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#15
[DEBUG] 2019-10-08 15:44:09.225 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:09.257 [main] SQL - select user0_.id as id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, recipes1_.user_id as user_id6_0_1_, recipes1_.id as id1_0_1_, recipes1_.id as id1_0_2_, recipes1_.directions as directio2_0_2_, recipes1_.ingredients as ingredie3_0_2_, recipes1_.name as name4_0_2_, recipes1_.public as public5_0_2_, recipes1_.user_id as user_id6_0_2_ from users user0_ left outer join recipes recipes1_ on user0_.id=recipes1_.user_id where user0_.id=?
[DEBUG] 2019-10-08 15:44:09.257 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2019-10-08 15:44:09.257 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2019-10-08 15:44:09.265 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-08 15:44:09.265 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-08 15:44:09.265 [main] TwoPhaseLoad - Processing attribute `email` : value = null
[DEBUG] 2019-10-08 15:44:09.265 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.265 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Ben
[DEBUG] 2019-10-08 15:44:09.265 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.265 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wyatt
[DEBUG] 2019-10-08 15:44:09.265 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.265 [main] TwoPhaseLoad - Processing attribute `recipes` : value = NOT NULL COLLECTION
[DEBUG] 2019-10-08 15:44:09.265 [main] TwoPhaseLoad - Attribute (`recipes`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.265 [main] TwoPhaseLoad - Processing attribute `userName` : value = test3
[DEBUG] 2019-10-08 15:44:09.265 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.265 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.User#3]
[DEBUG] 2019-10-08 15:44:09.265 [main] TwoPhaseLoad - Resolving attributes for [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-08 15:44:09.265 [main] TwoPhaseLoad - Processing attribute `directions` : value = {"Instruction 1", "Instruction 2"}
[DEBUG] 2019-10-08 15:44:09.265 [main] TwoPhaseLoad - Attribute (`directions`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.265 [main] TwoPhaseLoad - Processing attribute `ingredients` : value = { {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }
[DEBUG] 2019-10-08 15:44:09.265 [main] TwoPhaseLoad - Attribute (`ingredients`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.267 [main] TwoPhaseLoad - Processing attribute `name` : value = Test Recipe
[DEBUG] 2019-10-08 15:44:09.267 [main] TwoPhaseLoad - Attribute (`name`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.267 [main] TwoPhaseLoad - Processing attribute `publicView` : value = false
[DEBUG] 2019-10-08 15:44:09.267 [main] TwoPhaseLoad - Attribute (`publicView`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.267 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2019-10-08 15:44:09.267 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2019-10-08 15:44:09.267 [main] TwoPhaseLoad - Done materializing entity [com.alexmalotky.entity.Recipe#3]
[DEBUG] 2019-10-08 15:44:09.267 [main] CollectionLoadContext - 1 collections were found in result set for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:09.267 [main] CollectionLoadContext - Collection fully initialized: [com.alexmalotky.entity.User.recipes#3]
[DEBUG] 2019-10-08 15:44:09.267 [main] CollectionLoadContext - 1 collections initialized for role: com.alexmalotky.entity.User.recipes
[DEBUG] 2019-10-08 15:44:09.267 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2019-10-08 15:44:09.267 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.alexmalotky.entity.User#3
[DEBUG] 2019-10-08 15:44:09.267 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:09.267 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2019-10-08 15:44:09.267 [main] TransactionImpl - begin
[DEBUG] 2019-10-08 15:44:09.267 [main] TransactionImpl - committing
[DEBUG] 2019-10-08 15:44:09.267 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2019-10-08 15:44:09.267 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2019-10-08 15:44:09.267 [main] Collections - Collection found: [com.alexmalotky.entity.User.recipes#3], was: [com.alexmalotky.entity.User.recipes#3] (initialized)
[DEBUG] 2019-10-08 15:44:09.267 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 2 objects
[DEBUG] 2019-10-08 15:44:09.267 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2019-10-08 15:44:09.267 [main] EntityPrinter - Listing entities:
[DEBUG] 2019-10-08 15:44:09.267 [main] EntityPrinter - com.alexmalotky.entity.Recipe{directions={"Instruction 1", "Instruction 2"}, name=Test Recipe, ingredients={ {"Ingrediant 1" , "16 oz" }, {"Ingrediant 2" , "5 lbs" } }, id=3, publicView=false, user=com.alexmalotky.entity.User#3}
[DEBUG] 2019-10-08 15:44:09.267 [main] EntityPrinter - com.alexmalotky.entity.User{firstName=Ben, lastName=Wyatt, recipes=[com.alexmalotky.entity.Recipe#3], id=3, userName=test3, email=CalzoneZone@gmail.com}
[DEBUG] 2019-10-08 15:44:09.267 [main] SQL - update users set email=?, first_name=?, last_name=?, user_name=? where id=?
[DEBUG] 2019-10-08 15:44:09.277 [main] SQL - update recipes set directions=?, ingredients=?, name=?, public=?, user_id=? where id=?
[DEBUG] 2019-10-08 15:44:09.285 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2019-10-08 15:44:09.285 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
